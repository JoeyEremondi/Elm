Constraining exprssion Case (At (Region {_start = Position {_line = 11, _column = 18}, _end = Position {_line = 11, _column = 19}}) (VarLocal (Name {_name = "l"}))) [CaseBranch (At (Region {_start = Position {_line = 12, _column = 3}, _end = Position {_line = 12, _column = 5}}) (PList [])) (At (Region {_start = Position {_line = 12, _column = 9}, _end = Position {_line = 12, _column = 11}}) (List [])),CaseBranch (At (Region {_start = Position {_line = 13, _column = 4}, _end = Position {_line = 13, _column = 10}}) (PCons (At (Region {_start = Position {_line = 13, _column = 4}, _end = Position {_line = 13, _column = 5}}) (PVar (Name {_name = "h"}))) (At (Region {_start = Position {_line = 13, _column = 9}, _end = Position {_line = 13, _column = 10}}) (PVar (Name {_name = "t"}))))) (At (Region {_start = Position {_line = 13, _column = 15}, _end = Position {_line = 13, _column = 35}}) (Binop (Name {_name = "::"}) (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "cons"}) (Forall (fromList [(Name {_name = "a"},())]) (TLambda (TVar (Name {_name = "a"})) (TLambda (TType (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TVar (Name {_name = "a"})]) (TType (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TVar (Name {_name = "a"})])))) (At (Region {_start = Position {_line = 13, _column = 16}, _end = Position {_line = 13, _column = 19}}) (Call (At (Region {_start = Position {_line = 13, _column = 16}, _end = Position {_line = 13, _column = 17}}) (VarLocal (Name {_name = "f"}))) [At (Region {_start = Position {_line = 13, _column = 18}, _end = Position {_line = 13, _column = 19}}) (VarLocal (Name {_name = "h"}))])) (At (Region {_start = Position {_line = 13, _column = 25}, _end = Position {_line = 13, _column = 34}}) (Call (At (Region {_start = Position {_line = 13, _column = 25}, _end = Position {_line = 13, _column = 30}}) (VarTopLevel (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "myMap"}))) [At (Region {_start = Position {_line = 13, _column = 31}, _end = Position {_line = 13, _column = 32}}) (VarLocal (Name {_name = "f"})),At (Region {_start = Position {_line = 13, _column = 33}, _end = Position {_line = 13, _column = 34}}) (VarLocal (Name {_name = "t"}))]))))]
Constraining exprssion VarLocal (Name {_name = "l"})
Instantiating Forall [] (TypeVar (Name {_name = "a"}) :@ SetVar_17) (CEqual_ (SetVar_ SetVar_17) (SetVar_ SetVar_66)) into (TypeVar (Name {_name = "a"}) :@ SetVar_17,(CEqual_ (SetVar_ SetVar_17) (SetVar_ SetVar_66))) for var l
Unifying typesApp (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_20] :@ SetVar_21
  and TypeVar (Name {_name = "a"}) :@ SetVar_17
Constraining exprssion List []
Constraining exprssion Binop (Name {_name = "::"}) (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "cons"}) (Forall (fromList [(Name {_name = "a"},())]) (TLambda (TVar (Name {_name = "a"})) (TLambda (TType (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TVar (Name {_name = "a"})]) (TType (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TVar (Name {_name = "a"})])))) (At (Region {_start = Position {_line = 13, _column = 16}, _end = Position {_line = 13, _column = 19}}) (Call (At (Region {_start = Position {_line = 13, _column = 16}, _end = Position {_line = 13, _column = 17}}) (VarLocal (Name {_name = "f"}))) [At (Region {_start = Position {_line = 13, _column = 18}, _end = Position {_line = 13, _column = 19}}) (VarLocal (Name {_name = "h"}))])) (At (Region {_start = Position {_line = 13, _column = 25}, _end = Position {_line = 13, _column = 34}}) (Call (At (Region {_start = Position {_line = 13, _column = 25}, _end = Position {_line = 13, _column = 30}}) (VarTopLevel (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "myMap"}))) [At (Region {_start = Position {_line = 13, _column = 31}, _end = Position {_line = 13, _column = 32}}) (VarLocal (Name {_name = "f"})),At (Region {_start = Position {_line = 13, _column = 33}, _end = Position {_line = 13, _column = 34}}) (VarLocal (Name {_name = "t"}))]))
Constraining exprssion Call (At (Region {_start = Position {_line = 13, _column = 16}, _end = Position {_line = 13, _column = 17}}) (VarLocal (Name {_name = "f"}))) [At (Region {_start = Position {_line = 13, _column = 18}, _end = Position {_line = 13, _column = 19}}) (VarLocal (Name {_name = "h"}))]
Constraining exprssion VarLocal (Name {_name = "f"})
Instantiating Forall [] (TypeVar (Name {_name = "a"}) :@ SetVar_16) (CEqual_ (SetVar_ SetVar_16) (SetVar_ SetVar_64)) into (TypeVar (Name {_name = "a"}) :@ SetVar_16,(CEqual_ (SetVar_ SetVar_16) (SetVar_ SetVar_64))) for var f
Unifying typesFun (TypeVar (Name {_name = "a"}) :@ SetVar_30) (TypeVar (Name {_name = "b"}) :@ SetVar_31) :@ SetVar_32
  and TypeVar (Name {_name = "a"}) :@ SetVar_16
Constraining exprssion VarLocal (Name {_name = "h"})
Instantiating Forall [] (TypeVar (Name {_name = "a"}) :@ SetVar_25) (CEqual_ (SetVar_ SetVar_25) (SetVar_ projVar_71_1)) into (TypeVar (Name {_name = "a"}) :@ SetVar_25,(CEqual_ (SetVar_ SetVar_25) (SetVar_ projVar_71_1))) for var h
Unifying typesTypeVar (Name {_name = "a"}) :@ SetVar_34
  and TypeVar (Name {_name = "a"}) :@ SetVar_25
Constraining that argTy TypeVar (Name {_name = "a"}) :@ SetVar_34Smaller than TypeVar (Name {_name = "a"}) :@ SetVar_30
Function call At (Region {_start = Position {_line = 13, _column = 16}, _end = Position {_line = 13, _column = 17}}) (VarLocal (Name {_name = "f"}))
    generates constr (CAnd_ [(CSubset_ (SetVar_ SetVar_31) (SetVar_ SetVar_33)),(CEqual_ (SetVar_ SetVar_32) (SetVar_ SetVar_64)),(CEqual_ (SetVar_ SetVar_34) (SetVar_ projVar_71_1))])
Constraining exprssion Call (At (Region {_start = Position {_line = 13, _column = 25}, _end = Position {_line = 13, _column = 30}}) (VarTopLevel (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "myMap"}))) [At (Region {_start = Position {_line = 13, _column = 31}, _end = Position {_line = 13, _column = 32}}) (VarLocal (Name {_name = "f"})),At (Region {_start = Position {_line = 13, _column = 33}, _end = Position {_line = 13, _column = 34}}) (VarLocal (Name {_name = "t"}))]
Constraining exprssion VarTopLevel (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "myMap"})
Instantiating Forall [] (Fun (Fun (TypeVar (Name {_name = "a"}) :@ SetVar_62) (TypeVar (Name {_name = "b"}) :@ SetVar_63) :@ SetVar_64) (Fun (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_65] :@ SetVar_66) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "b"}) :@ SetVar_60] :@ SetVar_61) :@ SetVar_68) :@ SetVar_67) (CTrue_) into (Fun (Fun (TypeVar (Name {_name = "a"}) :@ SetVar_62) (TypeVar (Name {_name = "b"}) :@ SetVar_63) :@ SetVar_64) (Fun (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_65] :@ SetVar_66) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "b"}) :@ SetVar_60] :@ SetVar_61) :@ SetVar_68) :@ SetVar_67,(CTrue_)) for var myMap
Unifying typesFun (Fun (TypeVar (Name {_name = "a"}) :@ SetVar_35) (TypeVar (Name {_name = "b"}) :@ SetVar_36) :@ SetVar_37) (Fun (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_38] :@ SetVar_39) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "b"}) :@ SetVar_40] :@ SetVar_41) :@ SetVar_42) :@ SetVar_43
  and Fun (Fun (TypeVar (Name {_name = "a"}) :@ SetVar_62) (TypeVar (Name {_name = "b"}) :@ SetVar_63) :@ SetVar_64) (Fun (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_65] :@ SetVar_66) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "b"}) :@ SetVar_60] :@ SetVar_61) :@ SetVar_68) :@ SetVar_67
Constraining exprssion VarLocal (Name {_name = "f"})
Instantiating Forall [] (TypeVar (Name {_name = "a"}) :@ SetVar_32) (CEqual_ (SetVar_ SetVar_32) (SetVar_ SetVar_37)) into (TypeVar (Name {_name = "a"}) :@ SetVar_32,(CEqual_ (SetVar_ SetVar_32) (SetVar_ SetVar_37))) for var f
Unifying typesFun (TypeVar (Name {_name = "a"}) :@ SetVar_46) (TypeVar (Name {_name = "b"}) :@ SetVar_47) :@ SetVar_48
  and TypeVar (Name {_name = "a"}) :@ SetVar_32
Constraining exprssion VarLocal (Name {_name = "t"})
Instantiating Forall [] (TypeVar (Name {_name = "a"}) :@ SetVar_27) (CEqual_ (SetVar_ SetVar_27) (SetVar_ projVar_71_2)) into (TypeVar (Name {_name = "a"}) :@ SetVar_27,(CEqual_ (SetVar_ SetVar_27) (SetVar_ projVar_71_2))) for var t
Unifying typesApp (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_49] :@ SetVar_50
  and TypeVar (Name {_name = "a"}) :@ SetVar_27
Constraining that argTy Fun (TypeVar (Name {_name = "a"}) :@ SetVar_46) (TypeVar (Name {_name = "b"}) :@ SetVar_47) :@ SetVar_48Smaller than Fun (TypeVar (Name {_name = "a"}) :@ SetVar_35) (TypeVar (Name {_name = "b"}) :@ SetVar_36) :@ SetVar_37
Constraining that argTy App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_49] :@ SetVar_50Smaller than App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_38] :@ SetVar_39
Function call At (Region {_start = Position {_line = 13, _column = 25}, _end = Position {_line = 13, _column = 30}}) (VarTopLevel (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "myMap"}))
    generates constr (CAnd_ [(CSubset_ (SetVar_ SetVar_41) (SetVar_ SetVar_45)),(CEqual_ (SetVar_ SetVar_48) (SetVar_ SetVar_37)),(CEqual_ (SetVar_ SetVar_50) (SetVar_ projVar_71_2))])
Solving constraints for definition myMap
Got safety constraints [(CSubset_ (SetVar_ SetVar_21) (Union_ (Ctor_ "--Cons" [(Top_),(Top_)]) (Ctor_ "--Null" []))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_34) (SetVar_ SetVar_30))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_48) (SetVar_ SetVar_37))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_50) (SetVar_ SetVar_39)))]
Flattened top level:
(CAnd_ [(CSubset_ (SetVar_ SetVar_19) (Union_ (SetVar_ SetVar_70) (SetVar_ SetVar_69))),(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Null" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_69) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Null" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_69) (SetVar_ SetVar_24))),(CEqual_ (SetVar_ SetVar_24) (Ctor_ "--Null" [])),(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_)) (CSubset_ (SetVar_ SetVar_70) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CEqual_ (SetVar_ SetVar_70) (SetVar_ SetVar_29))),(CEqual_ (Ctor_ "--Cons" [(SetVar_ SetVar_34),(SetVar_ SetVar_50)]) (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)]))),(CIff_ (CSubset_ (SetVar_ SetVar_34) (Bottom_)) (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))),(CIff_ (CSubset_ (SetVar_ SetVar_50) (Bottom_)) (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))),(CTrue_),(CTrue_),(CEqual_ (SetVar_ SetVar_29) (Ctor_ "--Cons" [(SetVar_ SetVar_33),(SetVar_ SetVar_45)])),(CSubset_ (SetVar_ SetVar_31) (SetVar_ SetVar_33)),(CSubset_ (SetVar_ SetVar_19) (SetVar_ SetVar_45)),(CSubset_ (SetVar_ SetVar_21) (Union_ (Ctor_ "--Cons" [(Top_),(Top_)]) (Ctor_ "--Null" []))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_34) (SetVar_ SetVar_30))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_48) (SetVar_ SetVar_48))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_50) (SetVar_ SetVar_21)))])

[send->] (set-option :print-success true )
[<-recv] success
[send->] (set-option :produce-models true )
[<-recv] success
cInitial: CAnd [CSubset (Var "SetVar_19") (Union (Var "SetVar_70") (Var "SetVar_69")),CImplies (CSubset (Intersect (Var "SetVar_21") (FunApp "--Null" [])) Bottom) (CSubset (Var "SetVar_69") Bottom),CImplies (CNot (CSubset (Intersect (Var "SetVar_21") (FunApp "--Null" [])) Bottom)) (CAnd [CSubset (Var "SetVar_69") (Var "SetVar_24"),CSubset (Var "SetVar_24") (Var "SetVar_69")]),CAnd [CSubset (Var "SetVar_24") (FunApp "--Null" []),CSubset (FunApp "--Null" []) (Var "SetVar_24")],CImplies (CSubset (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])) Bottom) (CSubset (Var "SetVar_70") Bottom),CImplies (CNot (CSubset (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])) Bottom)) (CAnd [CSubset (Var "SetVar_70") (Var "SetVar_29"),CSubset (Var "SetVar_29") (Var "SetVar_70")]),CAnd [CSubset (FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"]) (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])),CSubset (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])) (FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"])],CIff (CSubset (Var "SetVar_34") Bottom) (CSubset (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])) Bottom),CIff (CSubset (Var "SetVar_50") Bottom) (CSubset (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])) Bottom),CSubset Top Top,CSubset Top Top,CAnd [CSubset (Var "SetVar_29") (FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"]),CSubset (FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"]) (Var "SetVar_29")],CSubset (Var "SetVar_31") (Var "SetVar_33"),CSubset (Var "SetVar_19") (Var "SetVar_45"),CSubset (Var "SetVar_21") (Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" [])),CImplies (CNot (CSubset (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])) Bottom)) (CSubset (Var "SetVar_34") (Var "SetVar_30")),CImplies (CNot (CSubset (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])) Bottom)) (CSubset (Var "SetVar_48") (Var "SetVar_48")),CImplies (CNot (CSubset (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top])) Bottom)) (CSubset (Var "SetVar_50") (Var "SetVar_21"))]
[send->] (set-logic UF )
[<-recv] success
[send->] (set-option :smt.mbqi true )
[<-recv] success
[send->] (push )
[<-recv] success
[send->] (declare-fun literal_0 () Bool )
[<-recv] success
[send->] (declare-fun literal_1 () Bool )
[<-recv] success
[send->] (declare-fun literal_2 () Bool )
[<-recv] success
[send->] (declare-fun literal_3 () Bool )
[<-recv] success
[send->] (declare-fun literal_4 () Bool )
[<-recv] success
[send->] (declare-fun literal_5 () Bool )
[<-recv] success
[send->] (declare-fun literal_6 () Bool )
[<-recv] success
[send->] (declare-fun literal_7 () Bool )
[<-recv] success
[send->] (declare-fun literal_8 () Bool )
[<-recv] success
[send->] (declare-fun literal_9 () Bool )
[<-recv] success
[send->] (declare-fun literal_10 () Bool )
[<-recv] success
[send->] (declare-fun literal_11 () Bool )
[<-recv] success
[send->] (declare-fun literal_12 () Bool )
[<-recv] success
[send->] (declare-fun literal_13 () Bool )
[<-recv] success
[send->] (declare-fun literal_14 () Bool )
[<-recv] success
[send->] (declare-fun literal_15 () Bool )
[<-recv] success
[send->] (declare-fun literal_16 () Bool )
[<-recv] success
[send->] (declare-fun literal_17 () Bool )
[<-recv] success
[send->] (declare-fun literal_18 () Bool )
[<-recv] success
[send->] (declare-fun literal_19 () Bool )
[<-recv] success
[send->] (declare-fun literal_20 () Bool )
[<-recv] success
[send->] (declare-fun literal_21 () Bool )
[<-recv] success
[send->] (declare-fun literal_22 () Bool )
[<-recv] success
[send->] (declare-fun literal_23 () Bool )
[<-recv] success
[send->] (declare-fun literal_24 () Bool )
[<-recv] success
[send->] (declare-fun literal_25 () Bool )
[<-recv] success
[send->] (declare-fun literal_26 () Bool )
[<-recv] success
[send->] (declare-fun literal_27 () Bool )
[<-recv] success
[send->] (declare-fun literal_28 () Bool )
[<-recv] success
[send->] (declare-fun literal_29 () Bool )
[<-recv] success
[send->] (declare-fun literal_30 () Bool )
[<-recv] success
[send->] (declare-fun literal_31 () Bool )
[<-recv] success
[send->] (declare-fun literal_32 () Bool )
[<-recv] success
[send->] (declare-fun literal_33 () Bool )
[<-recv] success
[send->] (declare-fun literal_34 () Bool )
[<-recv] success
[send->] (declare-fun literal_35 () Bool )
[<-recv] success
[send->] (declare-fun literal_36 () Bool )
[<-recv] success
[send->] (declare-fun literal_37 () Bool )
[<-recv] success
[send->] (declare-fun literal_38 () Bool )
[<-recv] success
[send->] (declare-fun literal_39 () Bool )
[<-recv] success
[send->] (declare-fun literal_40 () Bool )
[<-recv] success
[send->] (declare-fun literal_41 () Bool )
[<-recv] success
[send->] (declare-fun literal_42 () Bool )
[<-recv] success
[send->] (declare-fun literal_43 () Bool )
[<-recv] success
[send->] (declare-fun literal_44 () Bool )
[<-recv] success
[send->] (declare-fun literal_45 () Bool )
[<-recv] success
[send->] (declare-fun literal_46 () Bool )
[<-recv] success
[send->] (declare-fun literal_47 () Bool )
[<-recv] success
[send->] (declare-fun literal_48 () Bool )
[<-recv] success
[send->] (declare-fun literal_49 () Bool )
[<-recv] success
[send->] (declare-fun literal_50 () Bool )
[<-recv] success
[send->] (declare-fun literal_51 () Bool )
[<-recv] success
[send->] (declare-fun literal_52 () Bool )
[<-recv] success
[send->] (declare-fun literal_53 () Bool )
[<-recv] success
[send->] (declare-fun literal_54 () Bool )
[<-recv] success
[send->] (declare-fun literal_55 () Bool )
[<-recv] success
[send->] (declare-fun literal_56 () Bool )
[<-recv] success
[send->] (declare-fun literal_57 () Bool )
[<-recv] success
[send->] (declare-fun literal_58 () Bool )
[<-recv] success
[send->] (declare-fun literal_59 () Bool )
[<-recv] success
[send->] (declare-fun literal_60 () Bool )
[<-recv] success
[send->] (declare-fun literal_61 () Bool )
[<-recv] success
[send->] (declare-fun literal_62 () Bool )
[<-recv] success
[send->] (declare-fun literal_63 () Bool )
[<-recv] success
[send->] (declare-fun literal_64 () Bool )
[<-recv] success
[send->] (declare-fun literal_65 () Bool )
[<-recv] success
[send->] (declare-fun literal_66 () Bool )
[<-recv] success
[send->] (declare-fun literal_67 () Bool )
[<-recv] success
[send->] (declare-fun literal_68 () Bool )
[<-recv] success
[send->] (declare-fun literal_69 () Bool )
[<-recv] success
[send->] (declare-fun literal_70 () Bool )
[<-recv] success
[send->] (declare-fun literal_71 () Bool )
[<-recv] success
[send->] (declare-fun literal_72 () Bool )
[<-recv] success
[send->] (declare-fun literal_73 () Bool )
[<-recv] success
[send->] (declare-fun literal_74 () Bool )
[<-recv] success
[send->] (assert (and (and (and (and literal_1 (=> literal_38 literal_27 ) (=> (not literal_38 ) (and literal_24 literal_5 ) ) (and literal_6 literal_45 ) (=> literal_36 literal_31 ) (=> (not literal_36 ) (and literal_28 literal_8 ) ) (and literal_42 literal_34 ) (= literal_17 literal_36 ) (= literal_23 literal_36 ) literal_51 literal_51 (and literal_9 literal_39 ) literal_12 literal_0 literal_3 (=> (not literal_36 ) literal_15 ) (=> (not literal_36 ) literal_19 ) (=> (not literal_36 ) literal_21 ) ) (not literal_52 ) ) (and literal_2 literal_4 literal_7 literal_10 literal_11 literal_13 literal_14 literal_16 literal_18 literal_20 literal_22 literal_25 literal_26 literal_29 literal_30 literal_32 literal_33 literal_35 literal_37 (not literal_40 ) literal_41 (not literal_43 ) literal_44 literal_46 (not literal_47 ) (not literal_48 ) literal_49 (not literal_50 ) literal_51 (not literal_52 ) literal_53 literal_54 literal_55 literal_56 literal_57 literal_58 literal_59 literal_60 literal_61 literal_62 literal_63 literal_64 literal_65 literal_66 literal_67 literal_68 literal_69 literal_70 literal_71 literal_72 literal_73 literal_74 ) ) (and (=> (and literal_0 literal_18 ) literal_2 ) (=> (and literal_1 literal_32 ) literal_2 ) (=> (and literal_2 literal_51 ) literal_2 ) (=> (and literal_3 literal_33 ) literal_4 ) (=> (and literal_4 literal_51 ) literal_4 ) (=> (and literal_5 literal_26 ) literal_7 ) (=> (and literal_6 literal_49 ) literal_7 ) (=> (and literal_7 literal_51 ) literal_7 ) (=> (and literal_8 literal_30 ) literal_10 ) (=> (and literal_9 literal_41 ) literal_10 ) (=> (and literal_10 literal_51 ) literal_10 ) (=> (and literal_11 literal_51 ) literal_11 ) (=> (and literal_12 literal_14 ) literal_13 ) (=> (and literal_13 literal_51 ) literal_13 ) (=> (and literal_14 literal_51 ) literal_14 ) (=> (and literal_15 literal_11 ) literal_16 ) (=> (and literal_16 literal_51 ) literal_16 ) (=> (and literal_16 literal_52 ) literal_17 ) (=> (and literal_17 literal_57 ) literal_15 ) (=> (and literal_17 literal_73 ) literal_16 ) (=> (and literal_17 literal_74 ) literal_17 ) (=> (and literal_18 literal_51 ) literal_18 ) (=> (and literal_19 literal_19 ) literal_19 ) (=> (and literal_19 literal_20 ) literal_20 ) (=> (and literal_20 literal_51 ) literal_20 ) (=> (and literal_21 literal_4 ) literal_22 ) (=> (and literal_22 literal_51 ) literal_22 ) (=> (and literal_22 literal_52 ) literal_23 ) (=> (and literal_23 literal_54 ) literal_21 ) (=> (and literal_23 literal_73 ) literal_22 ) (=> (and literal_23 literal_74 ) literal_23 ) (=> (and literal_24 literal_7 ) literal_26 ) (=> (and literal_25 literal_32 ) literal_26 ) (=> (and literal_26 literal_51 ) literal_26 ) (=> (and literal_26 literal_52 ) literal_27 ) (=> (and literal_27 literal_55 ) literal_24 ) (=> (and literal_27 literal_66 ) literal_25 ) (=> (and literal_27 literal_73 ) literal_26 ) (=> (and literal_27 literal_74 ) literal_27 ) (=> (and literal_28 literal_10 ) literal_30 ) (=> (and literal_29 literal_32 ) literal_30 ) (=> (and literal_30 literal_51 ) literal_30 ) (=> (and literal_30 literal_52 ) literal_31 ) (=> (and literal_31 literal_56 ) literal_28 ) (=> (and literal_31 literal_66 ) literal_29 ) (=> (and literal_31 literal_73 ) literal_30 ) (=> (and literal_31 literal_74 ) literal_31 ) (=> (and literal_32 literal_51 ) literal_32 ) (=> (and literal_33 literal_51 ) literal_33 ) (=> (and literal_34 literal_44 ) literal_35 ) (=> (and literal_35 literal_51 ) literal_35 ) (=> (and literal_35 literal_52 ) literal_36 ) (=> (and literal_36 literal_71 ) literal_34 ) (=> (and literal_36 literal_73 ) literal_35 ) (=> (and literal_36 literal_74 ) literal_36 ) (=> (and literal_37 literal_51 ) literal_37 ) (=> (and literal_37 literal_52 ) literal_38 ) (=> (and literal_38 literal_73 ) literal_37 ) (=> (and literal_38 literal_74 ) literal_38 ) (=> (and literal_39 literal_10 ) literal_41 ) (=> (and literal_40 literal_49 ) literal_41 ) (=> (and literal_41 literal_51 ) literal_41 ) (=> (and literal_42 literal_35 ) literal_44 ) (=> (and literal_43 literal_49 ) literal_44 ) (=> (and literal_44 literal_51 ) literal_44 ) (=> (and literal_45 literal_7 ) literal_49 ) (=> (and literal_46 literal_33 ) literal_49 ) (=> (and literal_47 literal_41 ) literal_49 ) (=> (and literal_48 literal_44 ) literal_49 ) (=> (and literal_49 literal_51 ) literal_49 ) (=> (and literal_49 literal_52 ) literal_50 ) (=> (and literal_50 literal_55 ) literal_45 ) (=> (and literal_50 literal_67 ) literal_46 ) (=> (and literal_50 literal_70 ) literal_47 ) (=> (and literal_50 literal_71 ) literal_48 ) (=> (and literal_50 literal_73 ) literal_49 ) (=> (and literal_50 literal_74 ) literal_50 ) (=> (and literal_51 literal_51 ) literal_51 ) (=> (and literal_51 literal_52 ) literal_52 ) (=> (and literal_52 literal_73 ) literal_51 ) (=> (and literal_52 literal_74 ) literal_52 ) (=> (and literal_53 literal_0 ) literal_61 ) (=> (and literal_53 literal_1 ) literal_66 ) (=> (and literal_53 literal_2 ) literal_73 ) (=> (and literal_54 literal_3 ) literal_67 ) (=> (and literal_54 literal_4 ) literal_73 ) (=> (and literal_55 literal_5 ) literal_64 ) (=> (and literal_55 literal_6 ) literal_72 ) (=> (and literal_55 literal_7 ) literal_73 ) (=> (and literal_56 literal_8 ) literal_65 ) (=> (and literal_56 literal_9 ) literal_70 ) (=> (and literal_56 literal_10 ) literal_73 ) (=> (and literal_57 literal_11 ) literal_73 ) (=> (and literal_58 literal_12 ) literal_59 ) (=> (and literal_58 literal_13 ) literal_73 ) (=> (and literal_59 literal_14 ) literal_73 ) (=> (and literal_60 literal_15 ) literal_57 ) (=> (and literal_60 literal_16 ) literal_73 ) (=> (and literal_60 literal_17 ) literal_74 ) (=> (and literal_61 literal_18 ) literal_73 ) (=> (and literal_62 literal_19 ) literal_62 ) (=> (and literal_62 literal_20 ) literal_73 ) (=> (and literal_63 literal_21 ) literal_54 ) (=> (and literal_63 literal_22 ) literal_73 ) (=> (and literal_63 literal_23 ) literal_74 ) (=> (and literal_64 literal_24 ) literal_55 ) (=> (and literal_64 literal_25 ) literal_66 ) (=> (and literal_64 literal_26 ) literal_73 ) (=> (and literal_64 literal_27 ) literal_74 ) (=> (and literal_65 literal_28 ) literal_56 ) (=> (and literal_65 literal_29 ) literal_66 ) (=> (and literal_65 literal_30 ) literal_73 ) (=> (and literal_65 literal_31 ) literal_74 ) (=> (and literal_66 literal_32 ) literal_73 ) (=> (and literal_67 literal_33 ) literal_73 ) (=> (and literal_68 literal_34 ) literal_71 ) (=> (and literal_68 literal_35 ) literal_73 ) (=> (and literal_68 literal_36 ) literal_74 ) (=> (and literal_69 literal_37 ) literal_73 ) (=> (and literal_69 literal_38 ) literal_74 ) (=> (and literal_70 literal_39 ) literal_56 ) (=> (and literal_70 literal_40 ) literal_72 ) (=> (and literal_70 literal_41 ) literal_73 ) (=> (and literal_71 literal_42 ) literal_68 ) (=> (and literal_71 literal_43 ) literal_72 ) (=> (and literal_71 literal_44 ) literal_73 ) (=> (and literal_72 literal_45 ) literal_55 ) (=> (and literal_72 literal_46 ) literal_67 ) (=> (and literal_72 literal_47 ) literal_70 ) (=> (and literal_72 literal_48 ) literal_71 ) (=> (and literal_72 literal_49 ) literal_73 ) (=> (and literal_72 literal_50 ) literal_74 ) (=> (and literal_73 literal_51 ) literal_73 ) (=> (and literal_73 literal_52 ) literal_74 ) (=> (and literal_74 literal_53 ) literal_53 ) (=> (and literal_74 literal_54 ) literal_54 ) (=> (and literal_74 literal_55 ) literal_55 ) (=> (and literal_74 literal_56 ) literal_56 ) (=> (and literal_74 literal_57 ) literal_57 ) (=> (and literal_74 literal_58 ) literal_58 ) (=> (and literal_74 literal_59 ) literal_59 ) (=> (and literal_74 literal_60 ) literal_60 ) (=> (and literal_74 literal_61 ) literal_61 ) (=> (and literal_74 literal_62 ) literal_62 ) (=> (and literal_74 literal_63 ) literal_63 ) (=> (and literal_74 literal_64 ) literal_64 ) (=> (and literal_74 literal_65 ) literal_65 ) (=> (and literal_74 literal_66 ) literal_66 ) (=> (and literal_74 literal_67 ) literal_67 ) (=> (and literal_74 literal_68 ) literal_68 ) (=> (and literal_74 literal_69 ) literal_69 ) (=> (and literal_74 literal_70 ) literal_70 ) (=> (and literal_74 literal_71 ) literal_71 ) (=> (and literal_74 literal_72 ) literal_72 ) (=> (and literal_74 literal_73 ) literal_73 ) (=> (and literal_74 literal_74 ) literal_74 ) ) ) )
[<-recv] success
Done asserting formula, 25 base literals, 75 literals total
Partitioned into 13 subproblems: [[Literal {unLiteral = (Bottom,Var "SetVar_19")},Literal {unLiteral = (Var "SetVar_19",Top)},Literal {unLiteral = (Var "SetVar_19",Union (Var "SetVar_70") (Var "SetVar_69"))},Literal {unLiteral = (Bottom,Union (Var "SetVar_70") (Var "SetVar_69"))},Literal {unLiteral = (Bottom,Var "SetVar_70")},Literal {unLiteral = (Union (Var "SetVar_70") (Var "SetVar_69"),Top)},Literal {unLiteral = (Var "SetVar_70",Bottom)},Literal {unLiteral = (Var "SetVar_70",Top)},Literal {unLiteral = (Var "SetVar_70",Union (Var "SetVar_70") (Var "SetVar_69"))},Literal {unLiteral = (Var "SetVar_70",Var "SetVar_29")},Literal {unLiteral = (Bottom,Var "SetVar_29")},Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"],Var "SetVar_29")},Literal {unLiteral = (Bottom,FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"])},Literal {unLiteral = (Bottom,Var "SetVar_33")},Literal {unLiteral = (FunApp "--Null" [],FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"])},Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"],Top)},Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"],FunApp "--Null" [])},Literal {unLiteral = (Var "SetVar_33",Top)},Literal {unLiteral = (Var "SetVar_31",Var "SetVar_33")},Literal {unLiteral = (Bottom,Var "SetVar_31")},Literal {unLiteral = (Var "SetVar_31",Top)},Literal {unLiteral = (Var "SetVar_29",FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"])},Literal {unLiteral = (Bottom,Var "SetVar_45")},Literal {unLiteral = (Var "SetVar_45",Top)},Literal {unLiteral = (Var "SetVar_19",Var "SetVar_45")},Literal {unLiteral = (Var "SetVar_29",Top)},Literal {unLiteral = (Var "SetVar_29",Var "SetVar_70")},Literal {unLiteral = (Var "SetVar_69",Union (Var "SetVar_70") (Var "SetVar_69"))},Literal {unLiteral = (Bottom,Var "SetVar_69")},Literal {unLiteral = (Var "SetVar_69",Bottom)},Literal {unLiteral = (Var "SetVar_69",Top)},Literal {unLiteral = (Var "SetVar_69",Var "SetVar_24")},Literal {unLiteral = (Bottom,Var "SetVar_24")},Literal {unLiteral = (FunApp "--Null" [],Var "SetVar_24")},Literal {unLiteral = (Var "SetVar_24",Top)},Literal {unLiteral = (Var "SetVar_24",FunApp "--Null" [])},Literal {unLiteral = (Var "SetVar_24",Var "SetVar_69")}],[Literal {unLiteral = (Bottom,Intersect (Var "SetVar_21") (FunApp "--Null" []))},Literal {unLiteral = (Bottom,Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]))},Literal {unLiteral = (Bottom,Var "SetVar_21")},Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"],Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]))},Literal {unLiteral = (Bottom,FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"])},Literal {unLiteral = (Bottom,Var "SetVar_34")},Literal {unLiteral = (FunApp "--Null" [],FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"])},Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"],Top)},Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"],FunApp "--Null" [])},Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]),FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"])},Literal {unLiteral = (Var "SetVar_34",Bottom)},Literal {unLiteral = (Var "SetVar_34",Top)},Literal {unLiteral = (Var "SetVar_34",Var "SetVar_30")},Literal {unLiteral = (Bottom,Var "SetVar_30")},Literal {unLiteral = (Var "SetVar_30",Top)},Literal {unLiteral = (Bottom,Var "SetVar_50")},Literal {unLiteral = (Var "SetVar_50",Bottom)},Literal {unLiteral = (Var "SetVar_50",Top)},Literal {unLiteral = (Var "SetVar_50",Var "SetVar_21")},Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Null" []),Bottom)},Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Null" []),Top)},Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]),Bottom)},Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]),Top)},Literal {unLiteral = (Var "SetVar_21",Top)},Literal {unLiteral = (Var "SetVar_21",Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" []))}],[Literal {unLiteral = (Bottom,Var "SetVar_48")},Literal {unLiteral = (Var "SetVar_48",Top)},Literal {unLiteral = (Var "SetVar_48",Var "SetVar_48")}],[Literal {unLiteral = (Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" []),Top)}],[Literal {unLiteral = (FunApp "--Null" [],Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" []))}],[Literal {unLiteral = (FunApp "--Null" [],Top)}],[Literal {unLiteral = (FunApp "--Null" [],Bottom)}],[Literal {unLiteral = (Top,Top)}],[Literal {unLiteral = (Top,Bottom)}],[Literal {unLiteral = (Bottom,Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" []))}],[Literal {unLiteral = (Bottom,FunApp "--Null" [])}],[Literal {unLiteral = (Bottom,Top)}],[Literal {unLiteral = (Bottom,Bottom)}]]
Done asserting subset properties
Done asserting transitivity
Lit Vars: [(Literal {unLiteral = (Var "SetVar_19",Var "SetVar_45")},Atom "literal_0"),(Literal {unLiteral = (Var "SetVar_19",Union (Var "SetVar_70") (Var "SetVar_69"))},Atom "literal_1"),(Literal {unLiteral = (Var "SetVar_19",Top)},Atom "literal_2"),(Literal {unLiteral = (Var "SetVar_21",Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" []))},Atom "literal_3"),(Literal {unLiteral = (Var "SetVar_21",Top)},Atom "literal_4"),(Literal {unLiteral = (Var "SetVar_24",Var "SetVar_69")},Atom "literal_5"),(Literal {unLiteral = (Var "SetVar_24",FunApp "--Null" [])},Atom "literal_6"),(Literal {unLiteral = (Var "SetVar_24",Top)},Atom "literal_7"),(Literal {unLiteral = (Var "SetVar_29",Var "SetVar_70")},Atom "literal_8"),(Literal {unLiteral = (Var "SetVar_29",FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"])},Atom "literal_9"),(Literal {unLiteral = (Var "SetVar_29",Top)},Atom "literal_10"),(Literal {unLiteral = (Var "SetVar_30",Top)},Atom "literal_11"),(Literal {unLiteral = (Var "SetVar_31",Var "SetVar_33")},Atom "literal_12"),(Literal {unLiteral = (Var "SetVar_31",Top)},Atom "literal_13"),(Literal {unLiteral = (Var "SetVar_33",Top)},Atom "literal_14"),(Literal {unLiteral = (Var "SetVar_34",Var "SetVar_30")},Atom "literal_15"),(Literal {unLiteral = (Var "SetVar_34",Top)},Atom "literal_16"),(Literal {unLiteral = (Var "SetVar_34",Bottom)},Atom "literal_17"),(Literal {unLiteral = (Var "SetVar_45",Top)},Atom "literal_18"),(Literal {unLiteral = (Var "SetVar_48",Var "SetVar_48")},Atom "literal_19"),(Literal {unLiteral = (Var "SetVar_48",Top)},Atom "literal_20"),(Literal {unLiteral = (Var "SetVar_50",Var "SetVar_21")},Atom "literal_21"),(Literal {unLiteral = (Var "SetVar_50",Top)},Atom "literal_22"),(Literal {unLiteral = (Var "SetVar_50",Bottom)},Atom "literal_23"),(Literal {unLiteral = (Var "SetVar_69",Var "SetVar_24")},Atom "literal_24"),(Literal {unLiteral = (Var "SetVar_69",Union (Var "SetVar_70") (Var "SetVar_69"))},Atom "literal_25"),(Literal {unLiteral = (Var "SetVar_69",Top)},Atom "literal_26"),(Literal {unLiteral = (Var "SetVar_69",Bottom)},Atom "literal_27"),(Literal {unLiteral = (Var "SetVar_70",Var "SetVar_29")},Atom "literal_28"),(Literal {unLiteral = (Var "SetVar_70",Union (Var "SetVar_70") (Var "SetVar_69"))},Atom "literal_29"),(Literal {unLiteral = (Var "SetVar_70",Top)},Atom "literal_30"),(Literal {unLiteral = (Var "SetVar_70",Bottom)},Atom "literal_31"),(Literal {unLiteral = (Union (Var "SetVar_70") (Var "SetVar_69"),Top)},Atom "literal_32"),(Literal {unLiteral = (Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" []),Top)},Atom "literal_33"),(Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]),FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"])},Atom "literal_34"),(Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]),Top)},Atom "literal_35"),(Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]),Bottom)},Atom "literal_36"),(Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Null" []),Top)},Atom "literal_37"),(Literal {unLiteral = (Intersect (Var "SetVar_21") (FunApp "--Null" []),Bottom)},Atom "literal_38"),(Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"],Var "SetVar_29")},Atom "literal_39"),(Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"],FunApp "--Null" [])},Atom "literal_40"),(Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"],Top)},Atom "literal_41"),(Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"],Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]))},Atom "literal_42"),(Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"],FunApp "--Null" [])},Atom "literal_43"),(Literal {unLiteral = (FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"],Top)},Atom "literal_44"),(Literal {unLiteral = (FunApp "--Null" [],Var "SetVar_24")},Atom "literal_45"),(Literal {unLiteral = (FunApp "--Null" [],Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" []))},Atom "literal_46"),(Literal {unLiteral = (FunApp "--Null" [],FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"])},Atom "literal_47"),(Literal {unLiteral = (FunApp "--Null" [],FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"])},Atom "literal_48"),(Literal {unLiteral = (FunApp "--Null" [],Top)},Atom "literal_49"),(Literal {unLiteral = (FunApp "--Null" [],Bottom)},Atom "literal_50"),(Literal {unLiteral = (Top,Top)},Atom "literal_51"),(Literal {unLiteral = (Top,Bottom)},Atom "literal_52"),(Literal {unLiteral = (Bottom,Var "SetVar_19")},Atom "literal_53"),(Literal {unLiteral = (Bottom,Var "SetVar_21")},Atom "literal_54"),(Literal {unLiteral = (Bottom,Var "SetVar_24")},Atom "literal_55"),(Literal {unLiteral = (Bottom,Var "SetVar_29")},Atom "literal_56"),(Literal {unLiteral = (Bottom,Var "SetVar_30")},Atom "literal_57"),(Literal {unLiteral = (Bottom,Var "SetVar_31")},Atom "literal_58"),(Literal {unLiteral = (Bottom,Var "SetVar_33")},Atom "literal_59"),(Literal {unLiteral = (Bottom,Var "SetVar_34")},Atom "literal_60"),(Literal {unLiteral = (Bottom,Var "SetVar_45")},Atom "literal_61"),(Literal {unLiteral = (Bottom,Var "SetVar_48")},Atom "literal_62"),(Literal {unLiteral = (Bottom,Var "SetVar_50")},Atom "literal_63"),(Literal {unLiteral = (Bottom,Var "SetVar_69")},Atom "literal_64"),(Literal {unLiteral = (Bottom,Var "SetVar_70")},Atom "literal_65"),(Literal {unLiteral = (Bottom,Union (Var "SetVar_70") (Var "SetVar_69"))},Atom "literal_66"),(Literal {unLiteral = (Bottom,Union (FunApp "--Cons" [Top,Top]) (FunApp "--Null" []))},Atom "literal_67"),(Literal {unLiteral = (Bottom,Intersect (Var "SetVar_21") (FunApp "--Cons" [Top,Top]))},Atom "literal_68"),(Literal {unLiteral = (Bottom,Intersect (Var "SetVar_21") (FunApp "--Null" []))},Atom "literal_69"),(Literal {unLiteral = (Bottom,FunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"])},Atom "literal_70"),(Literal {unLiteral = (Bottom,FunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"])},Atom "literal_71"),(Literal {unLiteral = (Bottom,FunApp "--Null" [])},Atom "literal_72"),(Literal {unLiteral = (Bottom,Top)},Atom "literal_73"),(Literal {unLiteral = (Bottom,Bottom)},Atom "literal_74")]
Pred numbers: fromList [(PVar "SetVar_19",0),(PVar "SetVar_21",4),(PVar "SetVar_24",7),(PVar "SetVar_29",8),(PVar "SetVar_30",11),(PVar "SetVar_31",12),(PVar "SetVar_33",9),(PVar "SetVar_34",13),(PVar "SetVar_45",1),(PVar "SetVar_48",14),(PVar "SetVar_50",15),(PVar "SetVar_69",3),(PVar "SetVar_70",2),(PFunApp "--Cons" [Var "SetVar_33",Var "SetVar_45"],10),(PFunApp "--Cons" [Var "SetVar_34",Var "SetVar_50"],16),(PFunApp "--Cons" [Top,Top],5),(PFunApp "--Null" [],6)]
In theory solver, numBits: 17
Declaring domain
[send->] (declare-fun domainToBeSolved (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (define-fun domain ((z_boolDomain-0 Bool ) (z_boolDomain-1 Bool ) (z_boolDomain-2 Bool ) (z_boolDomain-3 Bool ) (z_boolDomain-4 Bool ) (z_boolDomain-5 Bool ) (z_boolDomain-6 Bool ) (z_boolDomain-7 Bool ) (z_boolDomain-8 Bool ) (z_boolDomain-9 Bool ) (z_boolDomain-10 Bool ) (z_boolDomain-11 Bool ) (z_boolDomain-12 Bool ) (z_boolDomain-13 Bool ) (z_boolDomain-14 Bool ) (z_boolDomain-15 Bool ) (z_boolDomain-16 Bool ) ) Bool (and (and (=> literal_0 (=> z_boolDomain-0 z_boolDomain-1 ) ) (=> literal_1 (=> z_boolDomain-0 (or z_boolDomain-2 z_boolDomain-3 ) ) ) (=> literal_2 (=> z_boolDomain-0 true ) ) (=> literal_3 (=> z_boolDomain-4 (or z_boolDomain-5 z_boolDomain-6 ) ) ) (=> literal_4 (=> z_boolDomain-4 true ) ) (=> literal_5 (=> z_boolDomain-7 z_boolDomain-3 ) ) (=> literal_6 (=> z_boolDomain-7 z_boolDomain-6 ) ) (=> literal_7 (=> z_boolDomain-7 true ) ) (=> literal_8 (=> z_boolDomain-8 z_boolDomain-2 ) ) (=> literal_9 (=> z_boolDomain-8 z_boolDomain-10 ) ) (=> literal_10 (=> z_boolDomain-8 true ) ) (=> literal_11 (=> z_boolDomain-11 true ) ) (=> literal_12 (=> z_boolDomain-12 z_boolDomain-9 ) ) (=> literal_13 (=> z_boolDomain-12 true ) ) (=> literal_14 (=> z_boolDomain-9 true ) ) (=> literal_15 (=> z_boolDomain-13 z_boolDomain-11 ) ) (=> literal_16 (=> z_boolDomain-13 true ) ) (=> literal_17 (=> z_boolDomain-13 false ) ) (=> literal_18 (=> z_boolDomain-1 true ) ) (=> literal_19 (=> z_boolDomain-14 z_boolDomain-14 ) ) (=> literal_20 (=> z_boolDomain-14 true ) ) (=> literal_21 (=> z_boolDomain-15 z_boolDomain-4 ) ) (=> literal_22 (=> z_boolDomain-15 true ) ) (=> literal_23 (=> z_boolDomain-15 false ) ) (=> literal_24 (=> z_boolDomain-3 z_boolDomain-7 ) ) (=> literal_25 (=> z_boolDomain-3 (or z_boolDomain-2 z_boolDomain-3 ) ) ) (=> literal_26 (=> z_boolDomain-3 true ) ) (=> literal_27 (=> z_boolDomain-3 false ) ) (=> literal_28 (=> z_boolDomain-2 z_boolDomain-8 ) ) (=> literal_29 (=> z_boolDomain-2 (or z_boolDomain-2 z_boolDomain-3 ) ) ) (=> literal_30 (=> z_boolDomain-2 true ) ) (=> literal_31 (=> z_boolDomain-2 false ) ) (=> literal_32 (=> (or z_boolDomain-2 z_boolDomain-3 ) true ) ) (=> literal_33 (=> (or z_boolDomain-5 z_boolDomain-6 ) true ) ) (=> literal_34 (=> (and z_boolDomain-4 z_boolDomain-5 ) z_boolDomain-16 ) ) (=> literal_35 (=> (and z_boolDomain-4 z_boolDomain-5 ) true ) ) (=> literal_36 (=> (and z_boolDomain-4 z_boolDomain-5 ) false ) ) (=> literal_37 (=> (and z_boolDomain-4 z_boolDomain-6 ) true ) ) (=> literal_38 (=> (and z_boolDomain-4 z_boolDomain-6 ) false ) ) (=> literal_39 (=> z_boolDomain-10 z_boolDomain-8 ) ) (=> literal_40 (=> z_boolDomain-10 z_boolDomain-6 ) ) (=> literal_41 (=> z_boolDomain-10 true ) ) (=> literal_42 (=> z_boolDomain-16 (and z_boolDomain-4 z_boolDomain-5 ) ) ) (=> literal_43 (=> z_boolDomain-16 z_boolDomain-6 ) ) (=> literal_44 (=> z_boolDomain-16 true ) ) (=> literal_45 (=> z_boolDomain-6 z_boolDomain-7 ) ) (=> literal_46 (=> z_boolDomain-6 (or z_boolDomain-5 z_boolDomain-6 ) ) ) (=> literal_47 (=> z_boolDomain-6 z_boolDomain-10 ) ) (=> literal_48 (=> z_boolDomain-6 z_boolDomain-16 ) ) (=> literal_49 (=> z_boolDomain-6 true ) ) (=> literal_50 (=> z_boolDomain-6 false ) ) (=> literal_51 (=> true true ) ) (=> literal_52 (=> true false ) ) (=> literal_53 (=> false z_boolDomain-0 ) ) (=> literal_54 (=> false z_boolDomain-4 ) ) (=> literal_55 (=> false z_boolDomain-7 ) ) (=> literal_56 (=> false z_boolDomain-8 ) ) (=> literal_57 (=> false z_boolDomain-11 ) ) (=> literal_58 (=> false z_boolDomain-12 ) ) (=> literal_59 (=> false z_boolDomain-9 ) ) (=> literal_60 (=> false z_boolDomain-13 ) ) (=> literal_61 (=> false z_boolDomain-1 ) ) (=> literal_62 (=> false z_boolDomain-14 ) ) (=> literal_63 (=> false z_boolDomain-15 ) ) (=> literal_64 (=> false z_boolDomain-3 ) ) (=> literal_65 (=> false z_boolDomain-2 ) ) (=> literal_66 (=> false (or z_boolDomain-2 z_boolDomain-3 ) ) ) (=> literal_67 (=> false (or z_boolDomain-5 z_boolDomain-6 ) ) ) (=> literal_68 (=> false (and z_boolDomain-4 z_boolDomain-5 ) ) ) (=> literal_69 (=> false (and z_boolDomain-4 z_boolDomain-6 ) ) ) (=> literal_70 (=> false z_boolDomain-10 ) ) (=> literal_71 (=> false z_boolDomain-16 ) ) (=> literal_72 (=> false z_boolDomain-6 ) ) (=> literal_73 (=> false true ) ) (=> literal_74 (=> false false ) ) ) (domainToBeSolved z_boolDomain-0 z_boolDomain-1 z_boolDomain-2 z_boolDomain-3 z_boolDomain-4 z_boolDomain-5 z_boolDomain-6 z_boolDomain-7 z_boolDomain-8 z_boolDomain-9 z_boolDomain-10 z_boolDomain-11 z_boolDomain-12 z_boolDomain-13 z_boolDomain-14 z_boolDomain-15 z_boolDomain-16 ) ) )
[<-recv] success
Declaring constructors
[send->] (declare-fun --Cons-0 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-1 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-2 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-3 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-4 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-7 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-8 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-9 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-11 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-12 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-13 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-14 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --Cons-15 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (define-fun --Cons-5 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) (f-arg-0-13 Bool ) (f-arg-0-14 Bool ) (f-arg-0-15 Bool ) (f-arg-0-16 Bool ) (f-arg-1-0 Bool ) (f-arg-1-1 Bool ) (f-arg-1-2 Bool ) (f-arg-1-3 Bool ) (f-arg-1-4 Bool ) (f-arg-1-5 Bool ) (f-arg-1-6 Bool ) (f-arg-1-7 Bool ) (f-arg-1-8 Bool ) (f-arg-1-9 Bool ) (f-arg-1-10 Bool ) (f-arg-1-11 Bool ) (f-arg-1-12 Bool ) (f-arg-1-13 Bool ) (f-arg-1-14 Bool ) (f-arg-1-15 Bool ) (f-arg-1-16 Bool ) ) Bool (and true true ) )
[<-recv] success
[send->] (define-fun --Cons-6 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) (f-arg-0-13 Bool ) (f-arg-0-14 Bool ) (f-arg-0-15 Bool ) (f-arg-0-16 Bool ) (f-arg-1-0 Bool ) (f-arg-1-1 Bool ) (f-arg-1-2 Bool ) (f-arg-1-3 Bool ) (f-arg-1-4 Bool ) (f-arg-1-5 Bool ) (f-arg-1-6 Bool ) (f-arg-1-7 Bool ) (f-arg-1-8 Bool ) (f-arg-1-9 Bool ) (f-arg-1-10 Bool ) (f-arg-1-11 Bool ) (f-arg-1-12 Bool ) (f-arg-1-13 Bool ) (f-arg-1-14 Bool ) (f-arg-1-15 Bool ) (f-arg-1-16 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --Cons-10 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) (f-arg-0-13 Bool ) (f-arg-0-14 Bool ) (f-arg-0-15 Bool ) (f-arg-0-16 Bool ) (f-arg-1-0 Bool ) (f-arg-1-1 Bool ) (f-arg-1-2 Bool ) (f-arg-1-3 Bool ) (f-arg-1-4 Bool ) (f-arg-1-5 Bool ) (f-arg-1-6 Bool ) (f-arg-1-7 Bool ) (f-arg-1-8 Bool ) (f-arg-1-9 Bool ) (f-arg-1-10 Bool ) (f-arg-1-11 Bool ) (f-arg-1-12 Bool ) (f-arg-1-13 Bool ) (f-arg-1-14 Bool ) (f-arg-1-15 Bool ) (f-arg-1-16 Bool ) ) Bool (and f-arg-0-9 f-arg-1-1 ) )
[<-recv] success
[send->] (define-fun --Cons-16 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) (f-arg-0-13 Bool ) (f-arg-0-14 Bool ) (f-arg-0-15 Bool ) (f-arg-0-16 Bool ) (f-arg-1-0 Bool ) (f-arg-1-1 Bool ) (f-arg-1-2 Bool ) (f-arg-1-3 Bool ) (f-arg-1-4 Bool ) (f-arg-1-5 Bool ) (f-arg-1-6 Bool ) (f-arg-1-7 Bool ) (f-arg-1-8 Bool ) (f-arg-1-9 Bool ) (f-arg-1-10 Bool ) (f-arg-1-11 Bool ) (f-arg-1-12 Bool ) (f-arg-1-13 Bool ) (f-arg-1-14 Bool ) (f-arg-1-15 Bool ) (f-arg-1-16 Bool ) ) Bool (and f-arg-0-13 f-arg-1-15 ) )
[<-recv] success
[send->] (declare-fun --Null-0 () Bool )
[<-recv] success
[send->] (declare-fun --Null-1 () Bool )
[<-recv] success
[send->] (declare-fun --Null-2 () Bool )
[<-recv] success
[send->] (declare-fun --Null-3 () Bool )
[<-recv] success
[send->] (declare-fun --Null-4 () Bool )
[<-recv] success
[send->] (declare-fun --Null-7 () Bool )
[<-recv] success
[send->] (declare-fun --Null-8 () Bool )
[<-recv] success
[send->] (declare-fun --Null-9 () Bool )
[<-recv] success
[send->] (declare-fun --Null-11 () Bool )
[<-recv] success
[send->] (declare-fun --Null-12 () Bool )
[<-recv] success
[send->] (declare-fun --Null-13 () Bool )
[<-recv] success
[send->] (declare-fun --Null-14 () Bool )
[<-recv] success
[send->] (declare-fun --Null-15 () Bool )
[<-recv] success
[send->] (define-fun --Null-5 () Bool false )
[<-recv] success
[send->] (define-fun --Null-6 () Bool true )
[<-recv] success
[send->] (define-fun --Null-10 () Bool false )
[<-recv] success
[send->] (define-fun --Null-16 () Bool false )
[<-recv] success
Declaring existentials
[send->] (declare-fun x_exists_74-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_74-0 x_exists_74-1 x_exists_74-2 x_exists_74-3 x_exists_74-4 x_exists_74-5 x_exists_74-6 x_exists_74-7 x_exists_74-8 x_exists_74-9 x_exists_74-10 x_exists_74-11 x_exists_74-12 x_exists_74-13 x_exists_74-14 x_exists_74-15 x_exists_74-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_73-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_73-0 x_exists_73-1 x_exists_73-2 x_exists_73-3 x_exists_73-4 x_exists_73-5 x_exists_73-6 x_exists_73-7 x_exists_73-8 x_exists_73-9 x_exists_73-10 x_exists_73-11 x_exists_73-12 x_exists_73-13 x_exists_73-14 x_exists_73-15 x_exists_73-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_72-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_72-0 x_exists_72-1 x_exists_72-2 x_exists_72-3 x_exists_72-4 x_exists_72-5 x_exists_72-6 x_exists_72-7 x_exists_72-8 x_exists_72-9 x_exists_72-10 x_exists_72-11 x_exists_72-12 x_exists_72-13 x_exists_72-14 x_exists_72-15 x_exists_72-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_71-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_71-0 x_exists_71-1 x_exists_71-2 x_exists_71-3 x_exists_71-4 x_exists_71-5 x_exists_71-6 x_exists_71-7 x_exists_71-8 x_exists_71-9 x_exists_71-10 x_exists_71-11 x_exists_71-12 x_exists_71-13 x_exists_71-14 x_exists_71-15 x_exists_71-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_70-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_70-0 x_exists_70-1 x_exists_70-2 x_exists_70-3 x_exists_70-4 x_exists_70-5 x_exists_70-6 x_exists_70-7 x_exists_70-8 x_exists_70-9 x_exists_70-10 x_exists_70-11 x_exists_70-12 x_exists_70-13 x_exists_70-14 x_exists_70-15 x_exists_70-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_69-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_69-0 x_exists_69-1 x_exists_69-2 x_exists_69-3 x_exists_69-4 x_exists_69-5 x_exists_69-6 x_exists_69-7 x_exists_69-8 x_exists_69-9 x_exists_69-10 x_exists_69-11 x_exists_69-12 x_exists_69-13 x_exists_69-14 x_exists_69-15 x_exists_69-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_68-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_68-0 x_exists_68-1 x_exists_68-2 x_exists_68-3 x_exists_68-4 x_exists_68-5 x_exists_68-6 x_exists_68-7 x_exists_68-8 x_exists_68-9 x_exists_68-10 x_exists_68-11 x_exists_68-12 x_exists_68-13 x_exists_68-14 x_exists_68-15 x_exists_68-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_67-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_67-0 x_exists_67-1 x_exists_67-2 x_exists_67-3 x_exists_67-4 x_exists_67-5 x_exists_67-6 x_exists_67-7 x_exists_67-8 x_exists_67-9 x_exists_67-10 x_exists_67-11 x_exists_67-12 x_exists_67-13 x_exists_67-14 x_exists_67-15 x_exists_67-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_66-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_66-0 x_exists_66-1 x_exists_66-2 x_exists_66-3 x_exists_66-4 x_exists_66-5 x_exists_66-6 x_exists_66-7 x_exists_66-8 x_exists_66-9 x_exists_66-10 x_exists_66-11 x_exists_66-12 x_exists_66-13 x_exists_66-14 x_exists_66-15 x_exists_66-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_65-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_65-0 x_exists_65-1 x_exists_65-2 x_exists_65-3 x_exists_65-4 x_exists_65-5 x_exists_65-6 x_exists_65-7 x_exists_65-8 x_exists_65-9 x_exists_65-10 x_exists_65-11 x_exists_65-12 x_exists_65-13 x_exists_65-14 x_exists_65-15 x_exists_65-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_64-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_64-0 x_exists_64-1 x_exists_64-2 x_exists_64-3 x_exists_64-4 x_exists_64-5 x_exists_64-6 x_exists_64-7 x_exists_64-8 x_exists_64-9 x_exists_64-10 x_exists_64-11 x_exists_64-12 x_exists_64-13 x_exists_64-14 x_exists_64-15 x_exists_64-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_63-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_63-0 x_exists_63-1 x_exists_63-2 x_exists_63-3 x_exists_63-4 x_exists_63-5 x_exists_63-6 x_exists_63-7 x_exists_63-8 x_exists_63-9 x_exists_63-10 x_exists_63-11 x_exists_63-12 x_exists_63-13 x_exists_63-14 x_exists_63-15 x_exists_63-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_62-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_62-0 x_exists_62-1 x_exists_62-2 x_exists_62-3 x_exists_62-4 x_exists_62-5 x_exists_62-6 x_exists_62-7 x_exists_62-8 x_exists_62-9 x_exists_62-10 x_exists_62-11 x_exists_62-12 x_exists_62-13 x_exists_62-14 x_exists_62-15 x_exists_62-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_61-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_61-0 x_exists_61-1 x_exists_61-2 x_exists_61-3 x_exists_61-4 x_exists_61-5 x_exists_61-6 x_exists_61-7 x_exists_61-8 x_exists_61-9 x_exists_61-10 x_exists_61-11 x_exists_61-12 x_exists_61-13 x_exists_61-14 x_exists_61-15 x_exists_61-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_60-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_60-0 x_exists_60-1 x_exists_60-2 x_exists_60-3 x_exists_60-4 x_exists_60-5 x_exists_60-6 x_exists_60-7 x_exists_60-8 x_exists_60-9 x_exists_60-10 x_exists_60-11 x_exists_60-12 x_exists_60-13 x_exists_60-14 x_exists_60-15 x_exists_60-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_59-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_59-0 x_exists_59-1 x_exists_59-2 x_exists_59-3 x_exists_59-4 x_exists_59-5 x_exists_59-6 x_exists_59-7 x_exists_59-8 x_exists_59-9 x_exists_59-10 x_exists_59-11 x_exists_59-12 x_exists_59-13 x_exists_59-14 x_exists_59-15 x_exists_59-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_58-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_58-0 x_exists_58-1 x_exists_58-2 x_exists_58-3 x_exists_58-4 x_exists_58-5 x_exists_58-6 x_exists_58-7 x_exists_58-8 x_exists_58-9 x_exists_58-10 x_exists_58-11 x_exists_58-12 x_exists_58-13 x_exists_58-14 x_exists_58-15 x_exists_58-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_57-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_57-0 x_exists_57-1 x_exists_57-2 x_exists_57-3 x_exists_57-4 x_exists_57-5 x_exists_57-6 x_exists_57-7 x_exists_57-8 x_exists_57-9 x_exists_57-10 x_exists_57-11 x_exists_57-12 x_exists_57-13 x_exists_57-14 x_exists_57-15 x_exists_57-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_56-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_56-0 x_exists_56-1 x_exists_56-2 x_exists_56-3 x_exists_56-4 x_exists_56-5 x_exists_56-6 x_exists_56-7 x_exists_56-8 x_exists_56-9 x_exists_56-10 x_exists_56-11 x_exists_56-12 x_exists_56-13 x_exists_56-14 x_exists_56-15 x_exists_56-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_55-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_55-0 x_exists_55-1 x_exists_55-2 x_exists_55-3 x_exists_55-4 x_exists_55-5 x_exists_55-6 x_exists_55-7 x_exists_55-8 x_exists_55-9 x_exists_55-10 x_exists_55-11 x_exists_55-12 x_exists_55-13 x_exists_55-14 x_exists_55-15 x_exists_55-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_54-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_54-0 x_exists_54-1 x_exists_54-2 x_exists_54-3 x_exists_54-4 x_exists_54-5 x_exists_54-6 x_exists_54-7 x_exists_54-8 x_exists_54-9 x_exists_54-10 x_exists_54-11 x_exists_54-12 x_exists_54-13 x_exists_54-14 x_exists_54-15 x_exists_54-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_53-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_53-0 x_exists_53-1 x_exists_53-2 x_exists_53-3 x_exists_53-4 x_exists_53-5 x_exists_53-6 x_exists_53-7 x_exists_53-8 x_exists_53-9 x_exists_53-10 x_exists_53-11 x_exists_53-12 x_exists_53-13 x_exists_53-14 x_exists_53-15 x_exists_53-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_52-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_52-0 x_exists_52-1 x_exists_52-2 x_exists_52-3 x_exists_52-4 x_exists_52-5 x_exists_52-6 x_exists_52-7 x_exists_52-8 x_exists_52-9 x_exists_52-10 x_exists_52-11 x_exists_52-12 x_exists_52-13 x_exists_52-14 x_exists_52-15 x_exists_52-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_51-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_51-0 x_exists_51-1 x_exists_51-2 x_exists_51-3 x_exists_51-4 x_exists_51-5 x_exists_51-6 x_exists_51-7 x_exists_51-8 x_exists_51-9 x_exists_51-10 x_exists_51-11 x_exists_51-12 x_exists_51-13 x_exists_51-14 x_exists_51-15 x_exists_51-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_50-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_50-0 x_exists_50-1 x_exists_50-2 x_exists_50-3 x_exists_50-4 x_exists_50-5 x_exists_50-6 x_exists_50-7 x_exists_50-8 x_exists_50-9 x_exists_50-10 x_exists_50-11 x_exists_50-12 x_exists_50-13 x_exists_50-14 x_exists_50-15 x_exists_50-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_49-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_49-0 x_exists_49-1 x_exists_49-2 x_exists_49-3 x_exists_49-4 x_exists_49-5 x_exists_49-6 x_exists_49-7 x_exists_49-8 x_exists_49-9 x_exists_49-10 x_exists_49-11 x_exists_49-12 x_exists_49-13 x_exists_49-14 x_exists_49-15 x_exists_49-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_48-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_48-0 x_exists_48-1 x_exists_48-2 x_exists_48-3 x_exists_48-4 x_exists_48-5 x_exists_48-6 x_exists_48-7 x_exists_48-8 x_exists_48-9 x_exists_48-10 x_exists_48-11 x_exists_48-12 x_exists_48-13 x_exists_48-14 x_exists_48-15 x_exists_48-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_47-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_47-0 x_exists_47-1 x_exists_47-2 x_exists_47-3 x_exists_47-4 x_exists_47-5 x_exists_47-6 x_exists_47-7 x_exists_47-8 x_exists_47-9 x_exists_47-10 x_exists_47-11 x_exists_47-12 x_exists_47-13 x_exists_47-14 x_exists_47-15 x_exists_47-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_46-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_46-0 x_exists_46-1 x_exists_46-2 x_exists_46-3 x_exists_46-4 x_exists_46-5 x_exists_46-6 x_exists_46-7 x_exists_46-8 x_exists_46-9 x_exists_46-10 x_exists_46-11 x_exists_46-12 x_exists_46-13 x_exists_46-14 x_exists_46-15 x_exists_46-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_45-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_45-0 x_exists_45-1 x_exists_45-2 x_exists_45-3 x_exists_45-4 x_exists_45-5 x_exists_45-6 x_exists_45-7 x_exists_45-8 x_exists_45-9 x_exists_45-10 x_exists_45-11 x_exists_45-12 x_exists_45-13 x_exists_45-14 x_exists_45-15 x_exists_45-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_44-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_44-0 x_exists_44-1 x_exists_44-2 x_exists_44-3 x_exists_44-4 x_exists_44-5 x_exists_44-6 x_exists_44-7 x_exists_44-8 x_exists_44-9 x_exists_44-10 x_exists_44-11 x_exists_44-12 x_exists_44-13 x_exists_44-14 x_exists_44-15 x_exists_44-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_43-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_43-0 x_exists_43-1 x_exists_43-2 x_exists_43-3 x_exists_43-4 x_exists_43-5 x_exists_43-6 x_exists_43-7 x_exists_43-8 x_exists_43-9 x_exists_43-10 x_exists_43-11 x_exists_43-12 x_exists_43-13 x_exists_43-14 x_exists_43-15 x_exists_43-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_42-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_42-0 x_exists_42-1 x_exists_42-2 x_exists_42-3 x_exists_42-4 x_exists_42-5 x_exists_42-6 x_exists_42-7 x_exists_42-8 x_exists_42-9 x_exists_42-10 x_exists_42-11 x_exists_42-12 x_exists_42-13 x_exists_42-14 x_exists_42-15 x_exists_42-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_41-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_41-0 x_exists_41-1 x_exists_41-2 x_exists_41-3 x_exists_41-4 x_exists_41-5 x_exists_41-6 x_exists_41-7 x_exists_41-8 x_exists_41-9 x_exists_41-10 x_exists_41-11 x_exists_41-12 x_exists_41-13 x_exists_41-14 x_exists_41-15 x_exists_41-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_40-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_40-0 x_exists_40-1 x_exists_40-2 x_exists_40-3 x_exists_40-4 x_exists_40-5 x_exists_40-6 x_exists_40-7 x_exists_40-8 x_exists_40-9 x_exists_40-10 x_exists_40-11 x_exists_40-12 x_exists_40-13 x_exists_40-14 x_exists_40-15 x_exists_40-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_39-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_39-0 x_exists_39-1 x_exists_39-2 x_exists_39-3 x_exists_39-4 x_exists_39-5 x_exists_39-6 x_exists_39-7 x_exists_39-8 x_exists_39-9 x_exists_39-10 x_exists_39-11 x_exists_39-12 x_exists_39-13 x_exists_39-14 x_exists_39-15 x_exists_39-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_38-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_38-0 x_exists_38-1 x_exists_38-2 x_exists_38-3 x_exists_38-4 x_exists_38-5 x_exists_38-6 x_exists_38-7 x_exists_38-8 x_exists_38-9 x_exists_38-10 x_exists_38-11 x_exists_38-12 x_exists_38-13 x_exists_38-14 x_exists_38-15 x_exists_38-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_37-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_37-0 x_exists_37-1 x_exists_37-2 x_exists_37-3 x_exists_37-4 x_exists_37-5 x_exists_37-6 x_exists_37-7 x_exists_37-8 x_exists_37-9 x_exists_37-10 x_exists_37-11 x_exists_37-12 x_exists_37-13 x_exists_37-14 x_exists_37-15 x_exists_37-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_36-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_36-0 x_exists_36-1 x_exists_36-2 x_exists_36-3 x_exists_36-4 x_exists_36-5 x_exists_36-6 x_exists_36-7 x_exists_36-8 x_exists_36-9 x_exists_36-10 x_exists_36-11 x_exists_36-12 x_exists_36-13 x_exists_36-14 x_exists_36-15 x_exists_36-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_35-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_35-0 x_exists_35-1 x_exists_35-2 x_exists_35-3 x_exists_35-4 x_exists_35-5 x_exists_35-6 x_exists_35-7 x_exists_35-8 x_exists_35-9 x_exists_35-10 x_exists_35-11 x_exists_35-12 x_exists_35-13 x_exists_35-14 x_exists_35-15 x_exists_35-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_34-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_34-0 x_exists_34-1 x_exists_34-2 x_exists_34-3 x_exists_34-4 x_exists_34-5 x_exists_34-6 x_exists_34-7 x_exists_34-8 x_exists_34-9 x_exists_34-10 x_exists_34-11 x_exists_34-12 x_exists_34-13 x_exists_34-14 x_exists_34-15 x_exists_34-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_33-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_33-0 x_exists_33-1 x_exists_33-2 x_exists_33-3 x_exists_33-4 x_exists_33-5 x_exists_33-6 x_exists_33-7 x_exists_33-8 x_exists_33-9 x_exists_33-10 x_exists_33-11 x_exists_33-12 x_exists_33-13 x_exists_33-14 x_exists_33-15 x_exists_33-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_32-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_32-0 x_exists_32-1 x_exists_32-2 x_exists_32-3 x_exists_32-4 x_exists_32-5 x_exists_32-6 x_exists_32-7 x_exists_32-8 x_exists_32-9 x_exists_32-10 x_exists_32-11 x_exists_32-12 x_exists_32-13 x_exists_32-14 x_exists_32-15 x_exists_32-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_31-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_31-0 x_exists_31-1 x_exists_31-2 x_exists_31-3 x_exists_31-4 x_exists_31-5 x_exists_31-6 x_exists_31-7 x_exists_31-8 x_exists_31-9 x_exists_31-10 x_exists_31-11 x_exists_31-12 x_exists_31-13 x_exists_31-14 x_exists_31-15 x_exists_31-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_30-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_30-0 x_exists_30-1 x_exists_30-2 x_exists_30-3 x_exists_30-4 x_exists_30-5 x_exists_30-6 x_exists_30-7 x_exists_30-8 x_exists_30-9 x_exists_30-10 x_exists_30-11 x_exists_30-12 x_exists_30-13 x_exists_30-14 x_exists_30-15 x_exists_30-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_29-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_29-0 x_exists_29-1 x_exists_29-2 x_exists_29-3 x_exists_29-4 x_exists_29-5 x_exists_29-6 x_exists_29-7 x_exists_29-8 x_exists_29-9 x_exists_29-10 x_exists_29-11 x_exists_29-12 x_exists_29-13 x_exists_29-14 x_exists_29-15 x_exists_29-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_28-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_28-0 x_exists_28-1 x_exists_28-2 x_exists_28-3 x_exists_28-4 x_exists_28-5 x_exists_28-6 x_exists_28-7 x_exists_28-8 x_exists_28-9 x_exists_28-10 x_exists_28-11 x_exists_28-12 x_exists_28-13 x_exists_28-14 x_exists_28-15 x_exists_28-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_27-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_27-0 x_exists_27-1 x_exists_27-2 x_exists_27-3 x_exists_27-4 x_exists_27-5 x_exists_27-6 x_exists_27-7 x_exists_27-8 x_exists_27-9 x_exists_27-10 x_exists_27-11 x_exists_27-12 x_exists_27-13 x_exists_27-14 x_exists_27-15 x_exists_27-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_26-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_26-0 x_exists_26-1 x_exists_26-2 x_exists_26-3 x_exists_26-4 x_exists_26-5 x_exists_26-6 x_exists_26-7 x_exists_26-8 x_exists_26-9 x_exists_26-10 x_exists_26-11 x_exists_26-12 x_exists_26-13 x_exists_26-14 x_exists_26-15 x_exists_26-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_25-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_25-0 x_exists_25-1 x_exists_25-2 x_exists_25-3 x_exists_25-4 x_exists_25-5 x_exists_25-6 x_exists_25-7 x_exists_25-8 x_exists_25-9 x_exists_25-10 x_exists_25-11 x_exists_25-12 x_exists_25-13 x_exists_25-14 x_exists_25-15 x_exists_25-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_24-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_24-0 x_exists_24-1 x_exists_24-2 x_exists_24-3 x_exists_24-4 x_exists_24-5 x_exists_24-6 x_exists_24-7 x_exists_24-8 x_exists_24-9 x_exists_24-10 x_exists_24-11 x_exists_24-12 x_exists_24-13 x_exists_24-14 x_exists_24-15 x_exists_24-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_23-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_23-0 x_exists_23-1 x_exists_23-2 x_exists_23-3 x_exists_23-4 x_exists_23-5 x_exists_23-6 x_exists_23-7 x_exists_23-8 x_exists_23-9 x_exists_23-10 x_exists_23-11 x_exists_23-12 x_exists_23-13 x_exists_23-14 x_exists_23-15 x_exists_23-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_22-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_22-0 x_exists_22-1 x_exists_22-2 x_exists_22-3 x_exists_22-4 x_exists_22-5 x_exists_22-6 x_exists_22-7 x_exists_22-8 x_exists_22-9 x_exists_22-10 x_exists_22-11 x_exists_22-12 x_exists_22-13 x_exists_22-14 x_exists_22-15 x_exists_22-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_21-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_21-0 x_exists_21-1 x_exists_21-2 x_exists_21-3 x_exists_21-4 x_exists_21-5 x_exists_21-6 x_exists_21-7 x_exists_21-8 x_exists_21-9 x_exists_21-10 x_exists_21-11 x_exists_21-12 x_exists_21-13 x_exists_21-14 x_exists_21-15 x_exists_21-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_20-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_20-0 x_exists_20-1 x_exists_20-2 x_exists_20-3 x_exists_20-4 x_exists_20-5 x_exists_20-6 x_exists_20-7 x_exists_20-8 x_exists_20-9 x_exists_20-10 x_exists_20-11 x_exists_20-12 x_exists_20-13 x_exists_20-14 x_exists_20-15 x_exists_20-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_19-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_19-0 x_exists_19-1 x_exists_19-2 x_exists_19-3 x_exists_19-4 x_exists_19-5 x_exists_19-6 x_exists_19-7 x_exists_19-8 x_exists_19-9 x_exists_19-10 x_exists_19-11 x_exists_19-12 x_exists_19-13 x_exists_19-14 x_exists_19-15 x_exists_19-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_18-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_18-0 x_exists_18-1 x_exists_18-2 x_exists_18-3 x_exists_18-4 x_exists_18-5 x_exists_18-6 x_exists_18-7 x_exists_18-8 x_exists_18-9 x_exists_18-10 x_exists_18-11 x_exists_18-12 x_exists_18-13 x_exists_18-14 x_exists_18-15 x_exists_18-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_17-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_17-0 x_exists_17-1 x_exists_17-2 x_exists_17-3 x_exists_17-4 x_exists_17-5 x_exists_17-6 x_exists_17-7 x_exists_17-8 x_exists_17-9 x_exists_17-10 x_exists_17-11 x_exists_17-12 x_exists_17-13 x_exists_17-14 x_exists_17-15 x_exists_17-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_16-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_16-0 x_exists_16-1 x_exists_16-2 x_exists_16-3 x_exists_16-4 x_exists_16-5 x_exists_16-6 x_exists_16-7 x_exists_16-8 x_exists_16-9 x_exists_16-10 x_exists_16-11 x_exists_16-12 x_exists_16-13 x_exists_16-14 x_exists_16-15 x_exists_16-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_15-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_15-0 x_exists_15-1 x_exists_15-2 x_exists_15-3 x_exists_15-4 x_exists_15-5 x_exists_15-6 x_exists_15-7 x_exists_15-8 x_exists_15-9 x_exists_15-10 x_exists_15-11 x_exists_15-12 x_exists_15-13 x_exists_15-14 x_exists_15-15 x_exists_15-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_14-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_14-0 x_exists_14-1 x_exists_14-2 x_exists_14-3 x_exists_14-4 x_exists_14-5 x_exists_14-6 x_exists_14-7 x_exists_14-8 x_exists_14-9 x_exists_14-10 x_exists_14-11 x_exists_14-12 x_exists_14-13 x_exists_14-14 x_exists_14-15 x_exists_14-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_13-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_13-0 x_exists_13-1 x_exists_13-2 x_exists_13-3 x_exists_13-4 x_exists_13-5 x_exists_13-6 x_exists_13-7 x_exists_13-8 x_exists_13-9 x_exists_13-10 x_exists_13-11 x_exists_13-12 x_exists_13-13 x_exists_13-14 x_exists_13-15 x_exists_13-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_12-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_12-0 x_exists_12-1 x_exists_12-2 x_exists_12-3 x_exists_12-4 x_exists_12-5 x_exists_12-6 x_exists_12-7 x_exists_12-8 x_exists_12-9 x_exists_12-10 x_exists_12-11 x_exists_12-12 x_exists_12-13 x_exists_12-14 x_exists_12-15 x_exists_12-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_11-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_11-0 x_exists_11-1 x_exists_11-2 x_exists_11-3 x_exists_11-4 x_exists_11-5 x_exists_11-6 x_exists_11-7 x_exists_11-8 x_exists_11-9 x_exists_11-10 x_exists_11-11 x_exists_11-12 x_exists_11-13 x_exists_11-14 x_exists_11-15 x_exists_11-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_10-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_10-0 x_exists_10-1 x_exists_10-2 x_exists_10-3 x_exists_10-4 x_exists_10-5 x_exists_10-6 x_exists_10-7 x_exists_10-8 x_exists_10-9 x_exists_10-10 x_exists_10-11 x_exists_10-12 x_exists_10-13 x_exists_10-14 x_exists_10-15 x_exists_10-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_9-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_9-0 x_exists_9-1 x_exists_9-2 x_exists_9-3 x_exists_9-4 x_exists_9-5 x_exists_9-6 x_exists_9-7 x_exists_9-8 x_exists_9-9 x_exists_9-10 x_exists_9-11 x_exists_9-12 x_exists_9-13 x_exists_9-14 x_exists_9-15 x_exists_9-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_8-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_8-0 x_exists_8-1 x_exists_8-2 x_exists_8-3 x_exists_8-4 x_exists_8-5 x_exists_8-6 x_exists_8-7 x_exists_8-8 x_exists_8-9 x_exists_8-10 x_exists_8-11 x_exists_8-12 x_exists_8-13 x_exists_8-14 x_exists_8-15 x_exists_8-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_7-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_7-0 x_exists_7-1 x_exists_7-2 x_exists_7-3 x_exists_7-4 x_exists_7-5 x_exists_7-6 x_exists_7-7 x_exists_7-8 x_exists_7-9 x_exists_7-10 x_exists_7-11 x_exists_7-12 x_exists_7-13 x_exists_7-14 x_exists_7-15 x_exists_7-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_6-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_6-0 x_exists_6-1 x_exists_6-2 x_exists_6-3 x_exists_6-4 x_exists_6-5 x_exists_6-6 x_exists_6-7 x_exists_6-8 x_exists_6-9 x_exists_6-10 x_exists_6-11 x_exists_6-12 x_exists_6-13 x_exists_6-14 x_exists_6-15 x_exists_6-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_5-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_5-0 x_exists_5-1 x_exists_5-2 x_exists_5-3 x_exists_5-4 x_exists_5-5 x_exists_5-6 x_exists_5-7 x_exists_5-8 x_exists_5-9 x_exists_5-10 x_exists_5-11 x_exists_5-12 x_exists_5-13 x_exists_5-14 x_exists_5-15 x_exists_5-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_4-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_4-0 x_exists_4-1 x_exists_4-2 x_exists_4-3 x_exists_4-4 x_exists_4-5 x_exists_4-6 x_exists_4-7 x_exists_4-8 x_exists_4-9 x_exists_4-10 x_exists_4-11 x_exists_4-12 x_exists_4-13 x_exists_4-14 x_exists_4-15 x_exists_4-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_3-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_3-0 x_exists_3-1 x_exists_3-2 x_exists_3-3 x_exists_3-4 x_exists_3-5 x_exists_3-6 x_exists_3-7 x_exists_3-8 x_exists_3-9 x_exists_3-10 x_exists_3-11 x_exists_3-12 x_exists_3-13 x_exists_3-14 x_exists_3-15 x_exists_3-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_2-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_2-0 x_exists_2-1 x_exists_2-2 x_exists_2-3 x_exists_2-4 x_exists_2-5 x_exists_2-6 x_exists_2-7 x_exists_2-8 x_exists_2-9 x_exists_2-10 x_exists_2-11 x_exists_2-12 x_exists_2-13 x_exists_2-14 x_exists_2-15 x_exists_2-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_1-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_1-0 x_exists_1-1 x_exists_1-2 x_exists_1-3 x_exists_1-4 x_exists_1-5 x_exists_1-6 x_exists_1-7 x_exists_1-8 x_exists_1-9 x_exists_1-10 x_exists_1-11 x_exists_1-12 x_exists_1-13 x_exists_1-14 x_exists_1-15 x_exists_1-16 ) )
[<-recv] success
[send->] (declare-fun x_exists_0-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-12 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-13 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-14 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-15 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-16 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_0-0 x_exists_0-1 x_exists_0-2 x_exists_0-3 x_exists_0-4 x_exists_0-5 x_exists_0-6 x_exists_0-7 x_exists_0-8 x_exists_0-9 x_exists_0-10 x_exists_0-11 x_exists_0-12 x_exists_0-13 x_exists_0-14 x_exists_0-15 x_exists_0-16 ) )
[<-recv] success
Assert existential properties
[send->] (assert (=> (not literal_0 ) (and x_exists_0-0 (not x_exists_0-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_1 ) (and x_exists_1-0 (not (or x_exists_1-2 x_exists_1-3 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_2 ) (and x_exists_2-0 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_3 ) (and x_exists_3-4 (not (or x_exists_3-5 x_exists_3-6 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_4 ) (and x_exists_4-4 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_5 ) (and x_exists_5-7 (not x_exists_5-3 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_6 ) (and x_exists_6-7 (not x_exists_6-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_7 ) (and x_exists_7-7 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_8 ) (and x_exists_8-8 (not x_exists_8-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_9 ) (and x_exists_9-8 (not x_exists_9-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_10 ) (and x_exists_10-8 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_11 ) (and x_exists_11-11 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_12 ) (and x_exists_12-12 (not x_exists_12-9 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_13 ) (and x_exists_13-12 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_14 ) (and x_exists_14-9 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_15 ) (and x_exists_15-13 (not x_exists_15-11 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_16 ) (and x_exists_16-13 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_17 ) (and x_exists_17-13 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_18 ) (and x_exists_18-1 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_19 ) (and x_exists_19-14 (not x_exists_19-14 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_20 ) (and x_exists_20-14 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_21 ) (and x_exists_21-15 (not x_exists_21-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_22 ) (and x_exists_22-15 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_23 ) (and x_exists_23-15 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_24 ) (and x_exists_24-3 (not x_exists_24-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_25 ) (and x_exists_25-3 (not (or x_exists_25-2 x_exists_25-3 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_26 ) (and x_exists_26-3 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_27 ) (and x_exists_27-3 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_28 ) (and x_exists_28-2 (not x_exists_28-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_29 ) (and x_exists_29-2 (not (or x_exists_29-2 x_exists_29-3 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_30 ) (and x_exists_30-2 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_31 ) (and x_exists_31-2 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_32 ) (and (or x_exists_32-2 x_exists_32-3 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_33 ) (and (or x_exists_33-5 x_exists_33-6 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_34 ) (and (and x_exists_34-4 x_exists_34-5 ) (not x_exists_34-16 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_35 ) (and (and x_exists_35-4 x_exists_35-5 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_36 ) (and (and x_exists_36-4 x_exists_36-5 ) (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_37 ) (and (and x_exists_37-4 x_exists_37-6 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_38 ) (and (and x_exists_38-4 x_exists_38-6 ) (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_39 ) (and x_exists_39-10 (not x_exists_39-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_40 ) (and x_exists_40-10 (not x_exists_40-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_41 ) (and x_exists_41-10 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_42 ) (and x_exists_42-16 (not (and x_exists_42-4 x_exists_42-5 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_43 ) (and x_exists_43-16 (not x_exists_43-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_44 ) (and x_exists_44-16 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_45 ) (and x_exists_45-6 (not x_exists_45-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_46 ) (and x_exists_46-6 (not (or x_exists_46-5 x_exists_46-6 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_47 ) (and x_exists_47-6 (not x_exists_47-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_48 ) (and x_exists_48-6 (not x_exists_48-16 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_49 ) (and x_exists_49-6 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_50 ) (and x_exists_50-6 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_51 ) (and true (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_52 ) (and true (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_53 ) (and false (not x_exists_53-0 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_54 ) (and false (not x_exists_54-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_55 ) (and false (not x_exists_55-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_56 ) (and false (not x_exists_56-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_57 ) (and false (not x_exists_57-11 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_58 ) (and false (not x_exists_58-12 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_59 ) (and false (not x_exists_59-9 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_60 ) (and false (not x_exists_60-13 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_61 ) (and false (not x_exists_61-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_62 ) (and false (not x_exists_62-14 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_63 ) (and false (not x_exists_63-15 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_64 ) (and false (not x_exists_64-3 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_65 ) (and false (not x_exists_65-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_66 ) (and false (not (or x_exists_66-2 x_exists_66-3 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_67 ) (and false (not (or x_exists_67-5 x_exists_67-6 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_68 ) (and false (not (and x_exists_68-4 x_exists_68-5 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_69 ) (and false (not (and x_exists_69-4 x_exists_69-6 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_70 ) (and false (not x_exists_70-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_71 ) (and false (not x_exists_71-16 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_72 ) (and false (not x_exists_72-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_73 ) (and false (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_74 ) (and false (not false ) ) ) )
[<-recv] success
Asserting function domain properties
[send->] (assert (forall ((y_univ_1-0 Bool ) (y_univ_1-1 Bool ) (y_univ_1-2 Bool ) (y_univ_1-3 Bool ) (y_univ_1-4 Bool ) (y_univ_1-5 Bool ) (y_univ_1-6 Bool ) (y_univ_1-7 Bool ) (y_univ_1-8 Bool ) (y_univ_1-9 Bool ) (y_univ_1-10 Bool ) (y_univ_1-11 Bool ) (y_univ_1-12 Bool ) (y_univ_1-13 Bool ) (y_univ_1-14 Bool ) (y_univ_1-15 Bool ) (y_univ_1-16 Bool ) (y_univ_2-0 Bool ) (y_univ_2-1 Bool ) (y_univ_2-2 Bool ) (y_univ_2-3 Bool ) (y_univ_2-4 Bool ) (y_univ_2-5 Bool ) (y_univ_2-6 Bool ) (y_univ_2-7 Bool ) (y_univ_2-8 Bool ) (y_univ_2-9 Bool ) (y_univ_2-10 Bool ) (y_univ_2-11 Bool ) (y_univ_2-12 Bool ) (y_univ_2-13 Bool ) (y_univ_2-14 Bool ) (y_univ_2-15 Bool ) (y_univ_2-16 Bool ) (y_univ_3-0 Bool ) (y_univ_3-1 Bool ) (y_univ_3-2 Bool ) (y_univ_3-3 Bool ) (y_univ_3-4 Bool ) (y_univ_3-5 Bool ) (y_univ_3-6 Bool ) (y_univ_3-7 Bool ) (y_univ_3-8 Bool ) (y_univ_3-9 Bool ) (y_univ_3-10 Bool ) (y_univ_3-11 Bool ) (y_univ_3-12 Bool ) (y_univ_3-13 Bool ) (y_univ_3-14 Bool ) (y_univ_3-15 Bool ) (y_univ_3-16 Bool ) (y_univ_4-0 Bool ) (y_univ_4-1 Bool ) (y_univ_4-2 Bool ) (y_univ_4-3 Bool ) (y_univ_4-4 Bool ) (y_univ_4-5 Bool ) (y_univ_4-6 Bool ) (y_univ_4-7 Bool ) (y_univ_4-8 Bool ) (y_univ_4-9 Bool ) (y_univ_4-10 Bool ) (y_univ_4-11 Bool ) (y_univ_4-12 Bool ) (y_univ_4-13 Bool ) (y_univ_4-14 Bool ) (y_univ_4-15 Bool ) (y_univ_4-16 Bool ) ) (and (=> (and (domain y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 ) (domain y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (domain y_univ_3-0 y_univ_3-1 y_univ_3-2 y_univ_3-3 y_univ_3-4 y_univ_3-5 y_univ_3-6 y_univ_3-7 y_univ_3-8 y_univ_3-9 y_univ_3-10 y_univ_3-11 y_univ_3-12 y_univ_3-13 y_univ_3-14 y_univ_3-15 y_univ_3-16 ) (domain y_univ_4-0 y_univ_4-1 y_univ_4-2 y_univ_4-3 y_univ_4-4 y_univ_4-5 y_univ_4-6 y_univ_4-7 y_univ_4-8 y_univ_4-9 y_univ_4-10 y_univ_4-11 y_univ_4-12 y_univ_4-13 y_univ_4-14 y_univ_4-15 y_univ_4-16 ) ) (and true true true true true true true (and (= (and true true ) (--Cons-5 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) ) (= --Null-5 false ) ) (and (= true --Null-6 ) (= (--Cons-6 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) false ) ) true true true true (and (= (and y_univ_1-9 y_univ_2-1 ) (--Cons-10 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) ) (= --Null-10 false ) ) true true true true true true true (and (= (and y_univ_1-13 y_univ_2-15 ) (--Cons-16 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) ) (= --Null-16 false ) ) true ) ) (and (domain (--Cons-0 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-1 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-2 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-3 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-4 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-5 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-6 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-7 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-8 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-10 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-11 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-12 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-13 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-14 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-15 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) (--Cons-16 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 y_univ_1-13 y_univ_1-14 y_univ_1-15 y_univ_1-16 y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 y_univ_2-13 y_univ_2-14 y_univ_2-15 y_univ_2-16 ) ) (domain --Null-0 --Null-1 --Null-2 --Null-3 --Null-4 --Null-5 --Null-6 --Null-7 --Null-8 --Null-9 --Null-10 --Null-11 --Null-12 --Null-13 --Null-14 --Null-15 --Null-16 ) ) ) ) )
[<-recv] success
About do check SAT
[send->] (check-sat )
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.refine-injectivity)
[stderr] (smt.pattern-inference)
[stderr] (smt.inferred-patterns :qid k!1543
[stderr]   ((--Cons-0 (:var 33)
[stderr]              (:var 32)
[stderr]              (:var 31)
[stderr]              (:var 30)
[stderr]              (:var 29)
[stderr]              (:var 28)
[stderr]              (:var 27)
[stderr]              (:var 26)
[stderr]              (:var 25)
[stderr]              (:var 24)
[stderr]              (:var 23)
[stderr]              (:var 22)
[stderr]              (:var 21)
[stderr]              (:var 20)
[stderr]              (:var 19)
[stderr]              (:var 18)
[stderr]              (:var 17)
[stderr]              (:var 16)
[stderr]              (:var 15)
[stderr]              (:var 14)
[stderr]              (:var 13)
[stderr]              (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--Cons-1 (:var 33)
[stderr]              (:var 32)
[stderr]              (:var 31)
[stderr]              (:var 30)
[stderr]              (:var 29)
[stderr]              (:var 28)
[stderr]              (:var 27)
[stderr]              (:var 26)
[stderr]              (:var 25)
[stderr]              (:var 24)
[stderr]              (:var 23)
[stderr]              (:var 22)
[stderr]              (:var 21)
[stderr]              (:var 20)
[stderr]              (:var 19)
[stderr]              (:var 18)
[stderr]              (:var 17)
[stderr]              (:var 16)
[stderr]              (:var 15)
[stderr]              (:var 14)
[stderr]              (:var 13)
[stderr]              (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--Cons-2 (:var 33)
[stderr]              (:var 32)
[stderr]              (:var 31)
[stderr]              (:var 30)
[stderr]              (:var 29)
[stderr]              (:var 28)
[stderr]              (:var 27)
[stderr]              (:var 26)
[stderr]              (:var 25)
[stderr]              (:var 24)
[stderr]              (:var 23)
[stderr]              (:var 22)
[stderr]              (:var 21)
[stderr]              (:var 20)
[stderr]              (:var 19)
[stderr]              (:var 18)
[stderr]              (:var 17)
[stderr]              (:var 16)
[stderr]              (:var 15)
[stderr]              (:var 14)
[stderr]              (:var 13)
[stderr]              (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--Cons-3 (:var 33)
[stderr]              (:var 32)
[stderr]              (:var 31)
[stderr]              (:var 30)
[stderr]              (:var 29)
[stderr]              (:var 28)
[stderr]              (:var 27)
[stderr]              (:var 26)
[stderr]              (:var 25)
[stderr]              (:var 24)
[stderr]              (:var 23)
[stderr]              (:var 22)
[stderr]              (:var 21)
[stderr]              (:var 20)
[stderr]              (:var 19)
[stderr]              (:var 18)
[stderr]              (:var 17)
[stderr]              (:var 16)
[stderr]              (:var 15)
[stderr]              (:var 14)
[stderr]              (:var 13)
[stderr]              (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--Cons-7 (:var 33)
[stderr]              (:var 32)
[stderr]              (:var 31)
[stderr]              (:var 30)
[stderr]              (:var 29)
[stderr]              (:var 28)
[stderr]              (:var 27)
[stderr]              (:var 26)
[stderr]              (:var 25)
[stderr]              (:var 24)
[stderr]              (:var 23)
[stderr]              (:var 22)
[stderr]              (:var 21)
[stderr]              (:var 20)
[stderr]              (:var 19)
[stderr]              (:var 18)
[stderr]              (:var 17)
[stderr]              (:var 16)
[stderr]              (:var 15)
[stderr]              (:var 14)
[stderr]              (:var 13)
[stderr]              (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--Cons-8 (:var 33)
[stderr]              (:var 32)
[stderr]              (:var 31)
[stderr]              (:var 30)
[stderr]              (:var 29)
[stderr]              (:var 28)
[stderr]              (:var 27)
[stderr]              (:var 26)
[stderr]              (:var 25)
[stderr]              (:var 24)
[stderr]              (:var 23)
[stderr]              (:var 22)
[stderr]              (:var 21)
[stderr]              (:var 20)
[stderr]              (:var 19)
[stderr]              (:var 18)
[stderr]              (:var 17)
[stderr]              (:var 16)
[stderr]              (:var 15)
[stderr]              (:var 14)
[stderr]              (:var 13)
[stderr]              (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--Cons-12 (:var 33)
[stderr]               (:var 32)
[stderr]               (:var 31)
[stderr]               (:var 30)
[stderr]               (:var 29)
[stderr]               (:var 28)
[stderr]               (:var 27)
[stderr]               (:var 26)
[stderr]               (:var 25)
[stderr]               (:var 24)
[stderr]               (:var 23)
[stderr]               (:var 22)
[stderr]               (:var 21)
[stderr]               (:var 20)
[stderr]               (:var 19)
[stderr]               (:var 18)
[stderr]               (:var 17)
[stderr]               (:var 16)
[stderr]               (:var 15)
[stderr]               (:var 14)
[stderr]               (:var 13)
[stderr]               (:var 12)
[stderr]               (:var 11)
[stderr]               (:var 10)
[stderr]               (:var 9)
[stderr]               (:var 8)
[stderr]               (:var 7)
[stderr]               (:var 6)
[stderr]               (:var 5)
[stderr]               (:var 4)
[stderr]               (:var 3)
[stderr]               (:var 2)
[stderr]               (:var 1)
[stderr]               (:var 0)))
[stderr]   ((--Cons-9 (:var 33)
[stderr]              (:var 32)
[stderr]              (:var 31)
[stderr]              (:var 30)
[stderr]              (:var 29)
[stderr]              (:var 28)
[stderr]              (:var 27)
[stderr]              (:var 26)
[stderr]              (:var 25)
[stderr]              (:var 24)
[stderr]              (:var 23)
[stderr]              (:var 22)
[stderr]              (:var 21)
[stderr]              (:var 20)
[stderr]              (:var 19)
[stderr]              (:var 18)
[stderr]              (:var 17)
[stderr]              (:var 16)
[stderr]              (:var 15)
[stderr]              (:var 14)
[stderr]              (:var 13)
[stderr]              (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--Cons-13 (:var 33)
[stderr]               (:var 32)
[stderr]               (:var 31)
[stderr]               (:var 30)
[stderr]               (:var 29)
[stderr]               (:var 28)
[stderr]               (:var 27)
[stderr]               (:var 26)
[stderr]               (:var 25)
[stderr]               (:var 24)
[stderr]               (:var 23)
[stderr]               (:var 22)
[stderr]               (:var 21)
[stderr]               (:var 20)
[stderr]               (:var 19)
[stderr]               (:var 18)
[stderr]               (:var 17)
[stderr]               (:var 16)
[stderr]               (:var 15)
[stderr]               (:var 14)
[stderr]               (:var 13)
[stderr]               (:var 12)
[stderr]               (:var 11)
[stderr]               (:var 10)
[stderr]               (:var 9)
[stderr]               (:var 8)
[stderr]               (:var 7)
[stderr]               (:var 6)
[stderr]               (:var 5)
[stderr]               (:var 4)
[stderr]               (:var 3)
[stderr]               (:var 2)
[stderr]               (:var 1)
[stderr]               (:var 0)))
[stderr]   ((--Cons-11 (:var 33)
[stderr]               (:var 32)
[stderr]               (:var 31)
[stderr]               (:var 30)
[stderr]               (:var 29)
[stderr]               (:var 28)
[stderr]               (:var 27)
[stderr]               (:var 26)
[stderr]               (:var 25)
[stderr]               (:var 24)
[stderr]               (:var 23)
[stderr]               (:var 22)
[stderr]               (:var 21)
[stderr]               (:var 20)
[stderr]               (:var 19)
[stderr]               (:var 18)
[stderr]               (:var 17)
[stderr]               (:var 16)
[stderr]               (:var 15)
[stderr]               (:var 14)
[stderr]               (:var 13)
[stderr]               (:var 12)
[stderr]               (:var 11)
[stderr]               (:var 10)
[stderr]               (:var 9)
[stderr]               (:var 8)
[stderr]               (:var 7)
[stderr]               (:var 6)
[stderr]               (:var 5)
[stderr]               (:var 4)
[stderr]               (:var 3)
[stderr]               (:var 2)
[stderr]               (:var 1)
[stderr]               (:var 0)))
[stderr]   ((--Cons-15 (:var 33)
[stderr]               (:var 32)
[stderr]               (:var 31)
[stderr]               (:var 30)
[stderr]               (:var 29)
[stderr]               (:var 28)
[stderr]               (:var 27)
[stderr]               (:var 26)
[stderr]               (:var 25)
[stderr]               (:var 24)
[stderr]               (:var 23)
[stderr]               (:var 22)
[stderr]               (:var 21)
[stderr]               (:var 20)
[stderr]               (:var 19)
[stderr]               (:var 18)
[stderr]               (:var 17)
[stderr]               (:var 16)
[stderr]               (:var 15)
[stderr]               (:var 14)
[stderr]               (:var 13)
[stderr]               (:var 12)
[stderr]               (:var 11)
[stderr]               (:var 10)
[stderr]               (:var 9)
[stderr]               (:var 8)
[stderr]               (:var 7)
[stderr]               (:var 6)
[stderr]               (:var 5)
[stderr]               (:var 4)
[stderr]               (:var 3)
[stderr]               (:var 2)
[stderr]               (:var 1)
[stderr]               (:var 0)))
[stderr]   ((--Cons-4 (:var 33)
[stderr]              (:var 32)
[stderr]              (:var 31)
[stderr]              (:var 30)
[stderr]              (:var 29)
[stderr]              (:var 28)
[stderr]              (:var 27)
[stderr]              (:var 26)
[stderr]              (:var 25)
[stderr]              (:var 24)
[stderr]              (:var 23)
[stderr]              (:var 22)
[stderr]              (:var 21)
[stderr]              (:var 20)
[stderr]              (:var 19)
[stderr]              (:var 18)
[stderr]              (:var 17)
[stderr]              (:var 16)
[stderr]              (:var 15)
[stderr]              (:var 14)
[stderr]              (:var 13)
[stderr]              (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--Cons-14 (:var 33)
[stderr]               (:var 32)
[stderr]               (:var 31)
[stderr]               (:var 30)
[stderr]               (:var 29)
[stderr]               (:var 28)
[stderr]               (:var 27)
[stderr]               (:var 26)
[stderr]               (:var 25)
[stderr]               (:var 24)
[stderr]               (:var 23)
[stderr]               (:var 22)
[stderr]               (:var 21)
[stderr]               (:var 20)
[stderr]               (:var 19)
[stderr]               (:var 18)
[stderr]               (:var 17)
[stderr]               (:var 16)
[stderr]               (:var 15)
[stderr]               (:var 14)
[stderr]               (:var 13)
[stderr]               (:var 12)
[stderr]               (:var 11)
[stderr]               (:var 10)
[stderr]               (:var 9)
[stderr]               (:var 8)
[stderr]               (:var 7)
[stderr]               (:var 6)
[stderr]               (:var 5)
[stderr]               (:var 4)
[stderr]               (:var 3)
[stderr]               (:var 2)
[stderr]               (:var 1)
[stderr]               (:var 0)))
[stderr] )
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] (smt.simplifying-clause-set :num-deleted-clauses 370)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.mbqi :failed k!1543)
[stderr] (smt.restarting :propagations 1266 :decisions 989 :conflicts 4 :restart 100 :restart-outer 100 :agility 0)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] (smt.mbqi :failed k!1543)
[stderr] (smt.restarting :propagations 2025 :decisions 1605 :conflicts 4 :restart 100 :restart-outer 100 :agility 0)
[stderr] (smt.simplifying-clause-set :num-deleted-clauses 135)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] (smt.simplifying-clause-set :num-deleted-clauses 0)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.mbqi :failed k!1543)
[stderr] (smt.restarting :propagations 2753 :decisions 2246 :conflicts 4 :restart 100 :restart-outer 100 :agility 0)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] (smt.simplifying-clause-set :num-deleted-clauses 21)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.mbqi :failed k!1543)
[stderr] (smt.restarting :propagations 3500 :decisions 2924 :conflicts 4 :restart 100 :restart-outer 100 :agility 0)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] (smt.simplifying-clause-set :num-deleted-clauses 23)
[<-recv] sat
Found Solution
Generalized type for myMap is Forall [SetVar_43,SetVar_48,SetVar_42,SetVar_21,SetVar_19,SetVar_70,SetVar_69,SetVar_34,SetVar_30,SetVar_50] (Fun (Fun (TypeVar (Name {_name = "a"}) :@ SetVar_35) (TypeVar (Name {_name = "b"}) :@ SetVar_36) :@ SetVar_48) (Fun (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "a"}) :@ SetVar_38] :@ SetVar_21) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "List"}}) (Name {_name = "List"}) [TypeVar (Name {_name = "b"}) :@ SetVar_18] :@ SetVar_19) :@ SetVar_42) :@ SetVar_43) (CAnd_ [(CEqual_ (SetVar_ SetVar_21) (SetVar_ SetVar_21)),(CSubset_ (SetVar_ SetVar_19) (Union_ (SetVar_ SetVar_70) (SetVar_ SetVar_69))),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Null" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_69) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Null" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_69) (SetVar_ SetVar_24))),(CEqual_ (SetVar_ SetVar_24) (Ctor_ "--Null" []))]),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_)) (CSubset_ (SetVar_ SetVar_70) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CEqual_ (SetVar_ SetVar_70) (SetVar_ SetVar_29))),(CEqual_ (Ctor_ "--Cons" [(SetVar_ SetVar_34),(SetVar_ SetVar_50)]) (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)]))),(CIff_ (CSubset_ (SetVar_ SetVar_34) (Bottom_)) (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))),(CIff_ (CSubset_ (SetVar_ SetVar_50) (Bottom_)) (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))),(CTrue_),(CTrue_),(CEqual_ (SetVar_ SetVar_29) (Ctor_ "--Cons" [(SetVar_ SetVar_33),(SetVar_ SetVar_45)])),(CSubset_ (SetVar_ SetVar_31) (SetVar_ SetVar_33)),(CEqual_ (SetVar_ SetVar_48) (SetVar_ SetVar_48)),(CEqual_ (SetVar_ SetVar_34) (SetVar_ SetVar_34)),(CSubset_ (SetVar_ SetVar_19) (SetVar_ SetVar_45)),(CEqual_ (SetVar_ SetVar_48) (SetVar_ SetVar_48)),(CEqual_ (SetVar_ SetVar_50) (SetVar_ SetVar_50))]),(CSubset_ (SetVar_ SetVar_21) (Union_ (Ctor_ "--Cons" [(Top_),(Top_)]) (Ctor_ "--Null" []))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_34) (SetVar_ SetVar_30))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_48) (SetVar_ SetVar_48))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_21) (Ctor_ "--Cons" [(Top_),(Top_)])) (Bottom_))) (CSubset_ (SetVar_ SetVar_50) (SetVar_ SetVar_21)))])
Constraining exprssion Case (At (Region {_start = Position {_line = 4, _column = 17}, _end = Position {_line = 4, _column = 18}}) (VarLocal (Name {_name = "x"}))) [CaseBranch (At (Region {_start = Position {_line = 5, _column = 3}, _end = Position {_line = 5, _column = 6}}) (PCtor {_p_home = Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}, _p_type = Name {_name = "Foo"}, _p_union = UNION, _p_name = Name {_name = "Bar"}, _p_index = ZB, _p_args = []})) (At (Region {_start = Position {_line = 5, _column = 10}, _end = Position {_line = 5, _column = 11}}) (Int 0)),CaseBranch (At (Region {_start = Position {_line = 6, _column = 3}, _end = Position {_line = 6, _column = 6}}) (PCtor {_p_home = Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}, _p_type = Name {_name = "Foo"}, _p_union = UNION, _p_name = Name {_name = "Baz"}, _p_index = ZB, _p_args = []})) (At (Region {_start = Position {_line = 6, _column = 10}, _end = Position {_line = 6, _column = 11}}) (Int 1))]
Constraining exprssion VarLocal (Name {_name = "x"})
Instantiating Forall [] (TypeVar (Name {_name = "a"}) :@ SetVar_3) (CEqual_ (SetVar_ SetVar_3) (SetVar_ SetVar_73)) into (TypeVar (Name {_name = "a"}) :@ SetVar_3,(CEqual_ (SetVar_ SetVar_3) (SetVar_ SetVar_73))) for var x
Unifying typesApp (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [] :@ SetVar_5
  and TypeVar (Name {_name = "a"}) :@ SetVar_3
Constraining exprssion Int 0
Constraining exprssion Int 1
Solving constraints for definition fooFun
Got safety constraints [(CSubset_ (SetVar_ SetVar_5) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" [])))]
Flattened top level:
(CAnd_ [(CSubset_ (SetVar_ SetVar_4) (Union_ (SetVar_ SetVar_77) (SetVar_ SetVar_75))),(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_75) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_75) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" []))),(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_77) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_77) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" []))),(CSubset_ (SetVar_ SetVar_5) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" [])))])

[send->] (set-option :print-success true )
[<-recv] success
[send->] (set-option :produce-models true )
[<-recv] success
cInitial: CAnd [CSubset (Var "SetVar_4") (Union (Var "SetVar_77") (Var "SetVar_75")),CImplies (CSubset (Intersect (Var "SetVar_5") (FunApp "Bar" [])) Bottom) (CSubset (Var "SetVar_75") Bottom),CImplies (CNot (CSubset (Intersect (Var "SetVar_5") (FunApp "Bar" [])) Bottom)) (CAnd [CSubset (Var "SetVar_75") (Var "SetVar_7"),CSubset (Var "SetVar_7") (Var "SetVar_75")]),CAnd [CSubset (FunApp "--ZERO" []) (Var "SetVar_7"),CSubset (Var "SetVar_7") (FunApp "--ZERO" [])],CAnd [CSubset (FunApp "Bar" []) (Intersect (Var "SetVar_5") (FunApp "Bar" [])),CSubset (Intersect (Var "SetVar_5") (FunApp "Bar" [])) (FunApp "Bar" [])],CImplies (CSubset (Intersect (Var "SetVar_5") (FunApp "Baz" [])) Bottom) (CSubset (Var "SetVar_77") Bottom),CImplies (CNot (CSubset (Intersect (Var "SetVar_5") (FunApp "Baz" [])) Bottom)) (CAnd [CSubset (Var "SetVar_77") (Var "SetVar_9"),CSubset (Var "SetVar_9") (Var "SetVar_77")]),CAnd [CSubset (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]]) (Var "SetVar_9"),CSubset (Var "SetVar_9") (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])],CAnd [CSubset (FunApp "Baz" []) (Intersect (Var "SetVar_5") (FunApp "Baz" [])),CSubset (Intersect (Var "SetVar_5") (FunApp "Baz" [])) (FunApp "Baz" [])],CSubset (Var "SetVar_5") (Union (FunApp "Baz" []) (FunApp "Bar" []))]
[send->] (set-logic UF )
[<-recv] success
[send->] (set-option :smt.mbqi true )
[<-recv] success
[send->] (push )
[<-recv] success
[send->] (declare-fun literal_0 () Bool )
[<-recv] success
[send->] (declare-fun literal_1 () Bool )
[<-recv] success
[send->] (declare-fun literal_2 () Bool )
[<-recv] success
[send->] (declare-fun literal_3 () Bool )
[<-recv] success
[send->] (declare-fun literal_4 () Bool )
[<-recv] success
[send->] (declare-fun literal_5 () Bool )
[<-recv] success
[send->] (declare-fun literal_6 () Bool )
[<-recv] success
[send->] (declare-fun literal_7 () Bool )
[<-recv] success
[send->] (declare-fun literal_8 () Bool )
[<-recv] success
[send->] (declare-fun literal_9 () Bool )
[<-recv] success
[send->] (declare-fun literal_10 () Bool )
[<-recv] success
[send->] (declare-fun literal_11 () Bool )
[<-recv] success
[send->] (declare-fun literal_12 () Bool )
[<-recv] success
[send->] (declare-fun literal_13 () Bool )
[<-recv] success
[send->] (declare-fun literal_14 () Bool )
[<-recv] success
[send->] (declare-fun literal_15 () Bool )
[<-recv] success
[send->] (declare-fun literal_16 () Bool )
[<-recv] success
[send->] (declare-fun literal_17 () Bool )
[<-recv] success
[send->] (declare-fun literal_18 () Bool )
[<-recv] success
[send->] (declare-fun literal_19 () Bool )
[<-recv] success
[send->] (declare-fun literal_20 () Bool )
[<-recv] success
[send->] (declare-fun literal_21 () Bool )
[<-recv] success
[send->] (declare-fun literal_22 () Bool )
[<-recv] success
[send->] (declare-fun literal_23 () Bool )
[<-recv] success
[send->] (declare-fun literal_24 () Bool )
[<-recv] success
[send->] (declare-fun literal_25 () Bool )
[<-recv] success
[send->] (declare-fun literal_26 () Bool )
[<-recv] success
[send->] (declare-fun literal_27 () Bool )
[<-recv] success
[send->] (declare-fun literal_28 () Bool )
[<-recv] success
[send->] (declare-fun literal_29 () Bool )
[<-recv] success
[send->] (declare-fun literal_30 () Bool )
[<-recv] success
[send->] (declare-fun literal_31 () Bool )
[<-recv] success
[send->] (declare-fun literal_32 () Bool )
[<-recv] success
[send->] (declare-fun literal_33 () Bool )
[<-recv] success
[send->] (declare-fun literal_34 () Bool )
[<-recv] success
[send->] (declare-fun literal_35 () Bool )
[<-recv] success
[send->] (declare-fun literal_36 () Bool )
[<-recv] success
[send->] (declare-fun literal_37 () Bool )
[<-recv] success
[send->] (declare-fun literal_38 () Bool )
[<-recv] success
[send->] (declare-fun literal_39 () Bool )
[<-recv] success
[send->] (declare-fun literal_40 () Bool )
[<-recv] success
[send->] (declare-fun literal_41 () Bool )
[<-recv] success
[send->] (declare-fun literal_42 () Bool )
[<-recv] success
[send->] (declare-fun literal_43 () Bool )
[<-recv] success
[send->] (declare-fun literal_44 () Bool )
[<-recv] success
[send->] (declare-fun literal_45 () Bool )
[<-recv] success
[send->] (declare-fun literal_46 () Bool )
[<-recv] success
[send->] (declare-fun literal_47 () Bool )
[<-recv] success
[send->] (declare-fun literal_48 () Bool )
[<-recv] success
[send->] (declare-fun literal_49 () Bool )
[<-recv] success
[send->] (declare-fun literal_50 () Bool )
[<-recv] success
[send->] (declare-fun literal_51 () Bool )
[<-recv] success
[send->] (declare-fun literal_52 () Bool )
[<-recv] success
[send->] (declare-fun literal_53 () Bool )
[<-recv] success
[send->] (declare-fun literal_54 () Bool )
[<-recv] success
[send->] (declare-fun literal_55 () Bool )
[<-recv] success
[send->] (declare-fun literal_56 () Bool )
[<-recv] success
[send->] (declare-fun literal_57 () Bool )
[<-recv] success
[send->] (declare-fun literal_58 () Bool )
[<-recv] success
[send->] (declare-fun literal_59 () Bool )
[<-recv] success
[send->] (declare-fun literal_60 () Bool )
[<-recv] success
[send->] (declare-fun literal_61 () Bool )
[<-recv] success
[send->] (declare-fun literal_62 () Bool )
[<-recv] success
[send->] (declare-fun literal_63 () Bool )
[<-recv] success
[send->] (declare-fun literal_64 () Bool )
[<-recv] success
[send->] (declare-fun literal_65 () Bool )
[<-recv] success
[send->] (declare-fun literal_66 () Bool )
[<-recv] success
[send->] (declare-fun literal_67 () Bool )
[<-recv] success
[send->] (declare-fun literal_68 () Bool )
[<-recv] success
[send->] (assert (and (and (and (and literal_0 (=> literal_22 literal_10 ) (=> (not literal_22 ) (and literal_7 literal_4 ) ) (and literal_31 literal_5 ) (and literal_38 literal_20 ) (=> literal_25 literal_14 ) (=> (not literal_25 ) (and literal_11 literal_15 ) ) (and literal_26 literal_16 ) (and literal_45 literal_23 ) literal_2 ) (not literal_52 ) ) (and literal_1 literal_3 literal_6 literal_8 literal_9 literal_12 literal_13 literal_17 literal_18 literal_19 literal_21 literal_24 (not literal_27 ) (not literal_28 ) (not literal_29 ) literal_30 (not literal_32 ) (not literal_33 ) (not literal_34 ) literal_35 (not literal_36 ) literal_37 (not literal_39 ) (not literal_40 ) (not literal_41 ) literal_42 (not literal_43 ) literal_44 (not literal_46 ) (not literal_47 ) (not literal_48 ) literal_49 (not literal_50 ) literal_51 (not literal_52 ) literal_53 literal_54 literal_55 literal_56 literal_57 literal_58 literal_59 literal_60 literal_61 literal_62 literal_63 literal_64 literal_65 literal_66 literal_67 literal_68 ) ) (and (=> (and literal_0 literal_18 ) literal_1 ) (=> (and literal_1 literal_51 ) literal_1 ) (=> (and literal_2 literal_19 ) literal_3 ) (=> (and literal_3 literal_51 ) literal_3 ) (=> (and literal_4 literal_9 ) literal_6 ) (=> (and literal_5 literal_35 ) literal_6 ) (=> (and literal_6 literal_51 ) literal_6 ) (=> (and literal_7 literal_6 ) literal_9 ) (=> (and literal_8 literal_18 ) literal_9 ) (=> (and literal_9 literal_51 ) literal_9 ) (=> (and literal_9 literal_52 ) literal_10 ) (=> (and literal_10 literal_55 ) literal_7 ) (=> (and literal_10 literal_59 ) literal_8 ) (=> (and literal_10 literal_67 ) literal_9 ) (=> (and literal_10 literal_68 ) literal_10 ) (=> (and literal_11 literal_17 ) literal_13 ) (=> (and literal_12 literal_18 ) literal_13 ) (=> (and literal_13 literal_51 ) literal_13 ) (=> (and literal_13 literal_52 ) literal_14 ) (=> (and literal_14 literal_58 ) literal_11 ) (=> (and literal_14 literal_59 ) literal_12 ) (=> (and literal_14 literal_67 ) literal_13 ) (=> (and literal_14 literal_68 ) literal_14 ) (=> (and literal_15 literal_13 ) literal_17 ) (=> (and literal_16 literal_30 ) literal_17 ) (=> (and literal_17 literal_51 ) literal_17 ) (=> (and literal_18 literal_51 ) literal_18 ) (=> (and literal_19 literal_51 ) literal_19 ) (=> (and literal_20 literal_42 ) literal_21 ) (=> (and literal_20 literal_43 ) literal_22 ) (=> (and literal_21 literal_51 ) literal_21 ) (=> (and literal_21 literal_52 ) literal_22 ) (=> (and literal_22 literal_65 ) literal_20 ) (=> (and literal_22 literal_67 ) literal_21 ) (=> (and literal_22 literal_68 ) literal_22 ) (=> (and literal_23 literal_49 ) literal_24 ) (=> (and literal_23 literal_50 ) literal_25 ) (=> (and literal_24 literal_51 ) literal_24 ) (=> (and literal_24 literal_52 ) literal_25 ) (=> (and literal_25 literal_66 ) literal_23 ) (=> (and literal_25 literal_67 ) literal_24 ) (=> (and literal_25 literal_68 ) literal_25 ) (=> (and literal_26 literal_17 ) literal_30 ) (=> (and literal_27 literal_33 ) literal_28 ) (=> (and literal_27 literal_34 ) literal_29 ) (=> (and literal_27 literal_35 ) literal_30 ) (=> (and literal_28 literal_40 ) literal_27 ) (=> (and literal_28 literal_41 ) literal_29 ) (=> (and literal_28 literal_42 ) literal_30 ) (=> (and literal_29 literal_47 ) literal_27 ) (=> (and literal_29 literal_48 ) literal_28 ) (=> (and literal_29 literal_49 ) literal_30 ) (=> (and literal_30 literal_51 ) literal_30 ) (=> (and literal_31 literal_6 ) literal_35 ) (=> (and literal_32 literal_28 ) literal_33 ) (=> (and literal_32 literal_29 ) literal_34 ) (=> (and literal_32 literal_30 ) literal_35 ) (=> (and literal_33 literal_39 ) literal_32 ) (=> (and literal_33 literal_41 ) literal_34 ) (=> (and literal_33 literal_42 ) literal_35 ) (=> (and literal_33 literal_43 ) literal_36 ) (=> (and literal_34 literal_46 ) literal_32 ) (=> (and literal_34 literal_48 ) literal_33 ) (=> (and literal_34 literal_49 ) literal_35 ) (=> (and literal_34 literal_50 ) literal_36 ) (=> (and literal_35 literal_51 ) literal_35 ) (=> (and literal_35 literal_52 ) literal_36 ) (=> (and literal_36 literal_55 ) literal_31 ) (=> (and literal_36 literal_63 ) literal_32 ) (=> (and literal_36 literal_65 ) literal_33 ) (=> (and literal_36 literal_66 ) literal_34 ) (=> (and literal_36 literal_67 ) literal_35 ) (=> (and literal_36 literal_68 ) literal_36 ) (=> (and literal_37 literal_19 ) literal_42 ) (=> (and literal_38 literal_21 ) literal_42 ) (=> (and literal_38 literal_22 ) literal_43 ) (=> (and literal_39 literal_27 ) literal_40 ) (=> (and literal_39 literal_29 ) literal_41 ) (=> (and literal_39 literal_30 ) literal_42 ) (=> (and literal_40 literal_32 ) literal_39 ) (=> (and literal_40 literal_34 ) literal_41 ) (=> (and literal_40 literal_35 ) literal_42 ) (=> (and literal_40 literal_36 ) literal_43 ) (=> (and literal_41 literal_44 ) literal_37 ) (=> (and literal_41 literal_46 ) literal_39 ) (=> (and literal_41 literal_47 ) literal_40 ) (=> (and literal_41 literal_49 ) literal_42 ) (=> (and literal_41 literal_50 ) literal_43 ) (=> (and literal_42 literal_51 ) literal_42 ) (=> (and literal_42 literal_52 ) literal_43 ) (=> (and literal_43 literal_60 ) literal_37 ) (=> (and literal_43 literal_61 ) literal_38 ) (=> (and literal_43 literal_63 ) literal_39 ) (=> (and literal_43 literal_64 ) literal_40 ) (=> (and literal_43 literal_66 ) literal_41 ) (=> (and literal_43 literal_67 ) literal_42 ) (=> (and literal_43 literal_68 ) literal_43 ) (=> (and literal_44 literal_19 ) literal_49 ) (=> (and literal_45 literal_24 ) literal_49 ) (=> (and literal_45 literal_25 ) literal_50 ) (=> (and literal_46 literal_27 ) literal_47 ) (=> (and literal_46 literal_28 ) literal_48 ) (=> (and literal_46 literal_30 ) literal_49 ) (=> (and literal_47 literal_32 ) literal_46 ) (=> (and literal_47 literal_33 ) literal_48 ) (=> (and literal_47 literal_35 ) literal_49 ) (=> (and literal_47 literal_36 ) literal_50 ) (=> (and literal_48 literal_37 ) literal_44 ) (=> (and literal_48 literal_39 ) literal_46 ) (=> (and literal_48 literal_40 ) literal_47 ) (=> (and literal_48 literal_42 ) literal_49 ) (=> (and literal_48 literal_43 ) literal_50 ) (=> (and literal_49 literal_51 ) literal_49 ) (=> (and literal_49 literal_52 ) literal_50 ) (=> (and literal_50 literal_60 ) literal_44 ) (=> (and literal_50 literal_62 ) literal_45 ) (=> (and literal_50 literal_63 ) literal_46 ) (=> (and literal_50 literal_64 ) literal_47 ) (=> (and literal_50 literal_65 ) literal_48 ) (=> (and literal_50 literal_67 ) literal_49 ) (=> (and literal_50 literal_68 ) literal_50 ) (=> (and literal_51 literal_51 ) literal_51 ) (=> (and literal_51 literal_52 ) literal_52 ) (=> (and literal_52 literal_67 ) literal_51 ) (=> (and literal_52 literal_68 ) literal_52 ) (=> (and literal_53 literal_0 ) literal_59 ) (=> (and literal_53 literal_1 ) literal_67 ) (=> (and literal_54 literal_2 ) literal_60 ) (=> (and literal_54 literal_3 ) literal_67 ) (=> (and literal_55 literal_4 ) literal_56 ) (=> (and literal_55 literal_5 ) literal_64 ) (=> (and literal_55 literal_6 ) literal_67 ) (=> (and literal_56 literal_7 ) literal_55 ) (=> (and literal_56 literal_8 ) literal_59 ) (=> (and literal_56 literal_9 ) literal_67 ) (=> (and literal_56 literal_10 ) literal_68 ) (=> (and literal_57 literal_11 ) literal_58 ) (=> (and literal_57 literal_12 ) literal_59 ) (=> (and literal_57 literal_13 ) literal_67 ) (=> (and literal_57 literal_14 ) literal_68 ) (=> (and literal_58 literal_15 ) literal_57 ) (=> (and literal_58 literal_16 ) literal_63 ) (=> (and literal_58 literal_17 ) literal_67 ) (=> (and literal_59 literal_18 ) literal_67 ) (=> (and literal_60 literal_19 ) literal_67 ) (=> (and literal_61 literal_20 ) literal_65 ) (=> (and literal_61 literal_21 ) literal_67 ) (=> (and literal_61 literal_22 ) literal_68 ) (=> (and literal_62 literal_23 ) literal_66 ) (=> (and literal_62 literal_24 ) literal_67 ) (=> (and literal_62 literal_25 ) literal_68 ) (=> (and literal_63 literal_26 ) literal_58 ) (=> (and literal_63 literal_27 ) literal_64 ) (=> (and literal_63 literal_28 ) literal_65 ) (=> (and literal_63 literal_29 ) literal_66 ) (=> (and literal_63 literal_30 ) literal_67 ) (=> (and literal_64 literal_31 ) literal_55 ) (=> (and literal_64 literal_32 ) literal_63 ) (=> (and literal_64 literal_33 ) literal_65 ) (=> (and literal_64 literal_34 ) literal_66 ) (=> (and literal_64 literal_35 ) literal_67 ) (=> (and literal_64 literal_36 ) literal_68 ) (=> (and literal_65 literal_37 ) literal_60 ) (=> (and literal_65 literal_38 ) literal_61 ) (=> (and literal_65 literal_39 ) literal_63 ) (=> (and literal_65 literal_40 ) literal_64 ) (=> (and literal_65 literal_41 ) literal_66 ) (=> (and literal_65 literal_42 ) literal_67 ) (=> (and literal_65 literal_43 ) literal_68 ) (=> (and literal_66 literal_44 ) literal_60 ) (=> (and literal_66 literal_45 ) literal_62 ) (=> (and literal_66 literal_46 ) literal_63 ) (=> (and literal_66 literal_47 ) literal_64 ) (=> (and literal_66 literal_48 ) literal_65 ) (=> (and literal_66 literal_49 ) literal_67 ) (=> (and literal_66 literal_50 ) literal_68 ) (=> (and literal_67 literal_51 ) literal_67 ) (=> (and literal_67 literal_52 ) literal_68 ) (=> (and literal_68 literal_53 ) literal_53 ) (=> (and literal_68 literal_54 ) literal_54 ) (=> (and literal_68 literal_55 ) literal_55 ) (=> (and literal_68 literal_56 ) literal_56 ) (=> (and literal_68 literal_57 ) literal_57 ) (=> (and literal_68 literal_58 ) literal_58 ) (=> (and literal_68 literal_59 ) literal_59 ) (=> (and literal_68 literal_60 ) literal_60 ) (=> (and literal_68 literal_61 ) literal_61 ) (=> (and literal_68 literal_62 ) literal_62 ) (=> (and literal_68 literal_63 ) literal_63 ) (=> (and literal_68 literal_64 ) literal_64 ) (=> (and literal_68 literal_65 ) literal_65 ) (=> (and literal_68 literal_66 ) literal_66 ) (=> (and literal_68 literal_67 ) literal_67 ) (=> (and literal_68 literal_68 ) literal_68 ) ) ) )
[<-recv] success
Done asserting formula, 19 base literals, 69 literals total
Partitioned into 33 subproblems: [[Literal {unLiteral = (Bottom,Var "SetVar_4")},Literal {unLiteral = (Var "SetVar_4",Top)},Literal {unLiteral = (Var "SetVar_4",Union (Var "SetVar_77") (Var "SetVar_75"))},Literal {unLiteral = (Bottom,Union (Var "SetVar_77") (Var "SetVar_75"))},Literal {unLiteral = (Bottom,Var "SetVar_77")},Literal {unLiteral = (Union (Var "SetVar_77") (Var "SetVar_75"),Top)},Literal {unLiteral = (Var "SetVar_9",Var "SetVar_77")},Literal {unLiteral = (Bottom,Var "SetVar_9")},Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],Var "SetVar_9")},Literal {unLiteral = (Var "SetVar_9",Top)},Literal {unLiteral = (Var "SetVar_9",FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Literal {unLiteral = (Var "SetVar_77",Var "SetVar_9")},Literal {unLiteral = (Var "SetVar_77",Bottom)},Literal {unLiteral = (Var "SetVar_77",Top)},Literal {unLiteral = (Var "SetVar_77",Union (Var "SetVar_77") (Var "SetVar_75"))},Literal {unLiteral = (Var "SetVar_75",Union (Var "SetVar_77") (Var "SetVar_75"))},Literal {unLiteral = (Bottom,Var "SetVar_75")},Literal {unLiteral = (Var "SetVar_75",Bottom)},Literal {unLiteral = (Var "SetVar_75",Top)},Literal {unLiteral = (Var "SetVar_75",Var "SetVar_7")},Literal {unLiteral = (Bottom,Var "SetVar_7")},Literal {unLiteral = (FunApp "--ZERO" [],Var "SetVar_7")},Literal {unLiteral = (Var "SetVar_7",Top)},Literal {unLiteral = (Var "SetVar_7",FunApp "--ZERO" [])},Literal {unLiteral = (Var "SetVar_7",Var "SetVar_75")}],[Literal {unLiteral = (Bottom,Intersect (Var "SetVar_5") (FunApp "Baz" []))},Literal {unLiteral = (Bottom,Intersect (Var "SetVar_5") (FunApp "Bar" []))},Literal {unLiteral = (Bottom,Var "SetVar_5")},Literal {unLiteral = (FunApp "Baz" [],Intersect (Var "SetVar_5") (FunApp "Baz" []))},Literal {unLiteral = (FunApp "Bar" [],Intersect (Var "SetVar_5") (FunApp "Bar" []))},Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Baz" []),Bottom)},Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Baz" []),Top)},Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Baz" []),FunApp "Baz" [])},Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Bar" []),Bottom)},Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Bar" []),Top)},Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Bar" []),FunApp "Bar" [])},Literal {unLiteral = (Var "SetVar_5",Top)},Literal {unLiteral = (Var "SetVar_5",Union (FunApp "Baz" []) (FunApp "Bar" []))}],[Literal {unLiteral = (Union (FunApp "Baz" []) (FunApp "Bar" []),Top)}],[Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "--ZERO" [])}],[Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "Bar" [])}],[Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "Baz" [])}],[Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],Top)}],[Literal {unLiteral = (FunApp "--ZERO" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])}],[Literal {unLiteral = (FunApp "--ZERO" [],FunApp "Bar" [])}],[Literal {unLiteral = (FunApp "--ZERO" [],FunApp "Baz" [])}],[Literal {unLiteral = (FunApp "--ZERO" [],Top)}],[Literal {unLiteral = (FunApp "--ZERO" [],Bottom)}],[Literal {unLiteral = (FunApp "Bar" [],Union (FunApp "Baz" []) (FunApp "Bar" []))}],[Literal {unLiteral = (FunApp "Bar" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])}],[Literal {unLiteral = (FunApp "Bar" [],FunApp "--ZERO" [])}],[Literal {unLiteral = (FunApp "Bar" [],FunApp "Baz" [])}],[Literal {unLiteral = (FunApp "Bar" [],Top)}],[Literal {unLiteral = (FunApp "Bar" [],Bottom)}],[Literal {unLiteral = (FunApp "Baz" [],Union (FunApp "Baz" []) (FunApp "Bar" []))}],[Literal {unLiteral = (FunApp "Baz" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])}],[Literal {unLiteral = (FunApp "Baz" [],FunApp "--ZERO" [])}],[Literal {unLiteral = (FunApp "Baz" [],FunApp "Bar" [])}],[Literal {unLiteral = (FunApp "Baz" [],Top)}],[Literal {unLiteral = (FunApp "Baz" [],Bottom)}],[Literal {unLiteral = (Top,Top)}],[Literal {unLiteral = (Top,Bottom)}],[Literal {unLiteral = (Bottom,Union (FunApp "Baz" []) (FunApp "Bar" []))}],[Literal {unLiteral = (Bottom,FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])}],[Literal {unLiteral = (Bottom,FunApp "--ZERO" [])}],[Literal {unLiteral = (Bottom,FunApp "Bar" [])}],[Literal {unLiteral = (Bottom,FunApp "Baz" [])}],[Literal {unLiteral = (Bottom,Top)}],[Literal {unLiteral = (Bottom,Bottom)}]]
Done asserting subset properties
Done asserting transitivity
Lit Vars: [(Literal {unLiteral = (Var "SetVar_4",Union (Var "SetVar_77") (Var "SetVar_75"))},Atom "literal_0"),(Literal {unLiteral = (Var "SetVar_4",Top)},Atom "literal_1"),(Literal {unLiteral = (Var "SetVar_5",Union (FunApp "Baz" []) (FunApp "Bar" []))},Atom "literal_2"),(Literal {unLiteral = (Var "SetVar_5",Top)},Atom "literal_3"),(Literal {unLiteral = (Var "SetVar_7",Var "SetVar_75")},Atom "literal_4"),(Literal {unLiteral = (Var "SetVar_7",FunApp "--ZERO" [])},Atom "literal_5"),(Literal {unLiteral = (Var "SetVar_7",Top)},Atom "literal_6"),(Literal {unLiteral = (Var "SetVar_75",Var "SetVar_7")},Atom "literal_7"),(Literal {unLiteral = (Var "SetVar_75",Union (Var "SetVar_77") (Var "SetVar_75"))},Atom "literal_8"),(Literal {unLiteral = (Var "SetVar_75",Top)},Atom "literal_9"),(Literal {unLiteral = (Var "SetVar_75",Bottom)},Atom "literal_10"),(Literal {unLiteral = (Var "SetVar_77",Var "SetVar_9")},Atom "literal_11"),(Literal {unLiteral = (Var "SetVar_77",Union (Var "SetVar_77") (Var "SetVar_75"))},Atom "literal_12"),(Literal {unLiteral = (Var "SetVar_77",Top)},Atom "literal_13"),(Literal {unLiteral = (Var "SetVar_77",Bottom)},Atom "literal_14"),(Literal {unLiteral = (Var "SetVar_9",Var "SetVar_77")},Atom "literal_15"),(Literal {unLiteral = (Var "SetVar_9",FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_16"),(Literal {unLiteral = (Var "SetVar_9",Top)},Atom "literal_17"),(Literal {unLiteral = (Union (Var "SetVar_77") (Var "SetVar_75"),Top)},Atom "literal_18"),(Literal {unLiteral = (Union (FunApp "Baz" []) (FunApp "Bar" []),Top)},Atom "literal_19"),(Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Bar" []),FunApp "Bar" [])},Atom "literal_20"),(Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Bar" []),Top)},Atom "literal_21"),(Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Bar" []),Bottom)},Atom "literal_22"),(Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Baz" []),FunApp "Baz" [])},Atom "literal_23"),(Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Baz" []),Top)},Atom "literal_24"),(Literal {unLiteral = (Intersect (Var "SetVar_5") (FunApp "Baz" []),Bottom)},Atom "literal_25"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],Var "SetVar_9")},Atom "literal_26"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "--ZERO" [])},Atom "literal_27"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "Bar" [])},Atom "literal_28"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "Baz" [])},Atom "literal_29"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],Top)},Atom "literal_30"),(Literal {unLiteral = (FunApp "--ZERO" [],Var "SetVar_7")},Atom "literal_31"),(Literal {unLiteral = (FunApp "--ZERO" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_32"),(Literal {unLiteral = (FunApp "--ZERO" [],FunApp "Bar" [])},Atom "literal_33"),(Literal {unLiteral = (FunApp "--ZERO" [],FunApp "Baz" [])},Atom "literal_34"),(Literal {unLiteral = (FunApp "--ZERO" [],Top)},Atom "literal_35"),(Literal {unLiteral = (FunApp "--ZERO" [],Bottom)},Atom "literal_36"),(Literal {unLiteral = (FunApp "Bar" [],Union (FunApp "Baz" []) (FunApp "Bar" []))},Atom "literal_37"),(Literal {unLiteral = (FunApp "Bar" [],Intersect (Var "SetVar_5") (FunApp "Bar" []))},Atom "literal_38"),(Literal {unLiteral = (FunApp "Bar" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_39"),(Literal {unLiteral = (FunApp "Bar" [],FunApp "--ZERO" [])},Atom "literal_40"),(Literal {unLiteral = (FunApp "Bar" [],FunApp "Baz" [])},Atom "literal_41"),(Literal {unLiteral = (FunApp "Bar" [],Top)},Atom "literal_42"),(Literal {unLiteral = (FunApp "Bar" [],Bottom)},Atom "literal_43"),(Literal {unLiteral = (FunApp "Baz" [],Union (FunApp "Baz" []) (FunApp "Bar" []))},Atom "literal_44"),(Literal {unLiteral = (FunApp "Baz" [],Intersect (Var "SetVar_5") (FunApp "Baz" []))},Atom "literal_45"),(Literal {unLiteral = (FunApp "Baz" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_46"),(Literal {unLiteral = (FunApp "Baz" [],FunApp "--ZERO" [])},Atom "literal_47"),(Literal {unLiteral = (FunApp "Baz" [],FunApp "Bar" [])},Atom "literal_48"),(Literal {unLiteral = (FunApp "Baz" [],Top)},Atom "literal_49"),(Literal {unLiteral = (FunApp "Baz" [],Bottom)},Atom "literal_50"),(Literal {unLiteral = (Top,Top)},Atom "literal_51"),(Literal {unLiteral = (Top,Bottom)},Atom "literal_52"),(Literal {unLiteral = (Bottom,Var "SetVar_4")},Atom "literal_53"),(Literal {unLiteral = (Bottom,Var "SetVar_5")},Atom "literal_54"),(Literal {unLiteral = (Bottom,Var "SetVar_7")},Atom "literal_55"),(Literal {unLiteral = (Bottom,Var "SetVar_75")},Atom "literal_56"),(Literal {unLiteral = (Bottom,Var "SetVar_77")},Atom "literal_57"),(Literal {unLiteral = (Bottom,Var "SetVar_9")},Atom "literal_58"),(Literal {unLiteral = (Bottom,Union (Var "SetVar_77") (Var "SetVar_75"))},Atom "literal_59"),(Literal {unLiteral = (Bottom,Union (FunApp "Baz" []) (FunApp "Bar" []))},Atom "literal_60"),(Literal {unLiteral = (Bottom,Intersect (Var "SetVar_5") (FunApp "Bar" []))},Atom "literal_61"),(Literal {unLiteral = (Bottom,Intersect (Var "SetVar_5") (FunApp "Baz" []))},Atom "literal_62"),(Literal {unLiteral = (Bottom,FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_63"),(Literal {unLiteral = (Bottom,FunApp "--ZERO" [])},Atom "literal_64"),(Literal {unLiteral = (Bottom,FunApp "Bar" [])},Atom "literal_65"),(Literal {unLiteral = (Bottom,FunApp "Baz" [])},Atom "literal_66"),(Literal {unLiteral = (Bottom,Top)},Atom "literal_67"),(Literal {unLiteral = (Bottom,Bottom)},Atom "literal_68")]
Pred numbers: fromList [(PVar "SetVar_4",0),(PVar "SetVar_5",3),(PVar "SetVar_7",6),(PVar "SetVar_75",2),(PVar "SetVar_77",1),(PVar "SetVar_9",8),(PFunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],10),(PFunApp "--SUCC" [FunApp "--ZERO" []],9),(PFunApp "--ZERO" [],7),(PFunApp "Bar" [],5),(PFunApp "Baz" [],4)]
In theory solver, numBits: 11
Declaring domain
[send->] (declare-fun domainToBeSolved (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (define-fun domain ((z_boolDomain-0 Bool ) (z_boolDomain-1 Bool ) (z_boolDomain-2 Bool ) (z_boolDomain-3 Bool ) (z_boolDomain-4 Bool ) (z_boolDomain-5 Bool ) (z_boolDomain-6 Bool ) (z_boolDomain-7 Bool ) (z_boolDomain-8 Bool ) (z_boolDomain-9 Bool ) (z_boolDomain-10 Bool ) ) Bool (and (and (=> literal_0 (=> z_boolDomain-0 (or z_boolDomain-1 z_boolDomain-2 ) ) ) (=> literal_1 (=> z_boolDomain-0 true ) ) (=> literal_2 (=> z_boolDomain-3 (or z_boolDomain-4 z_boolDomain-5 ) ) ) (=> literal_3 (=> z_boolDomain-3 true ) ) (=> literal_4 (=> z_boolDomain-6 z_boolDomain-2 ) ) (=> literal_5 (=> z_boolDomain-6 z_boolDomain-7 ) ) (=> literal_6 (=> z_boolDomain-6 true ) ) (=> literal_7 (=> z_boolDomain-2 z_boolDomain-6 ) ) (=> literal_8 (=> z_boolDomain-2 (or z_boolDomain-1 z_boolDomain-2 ) ) ) (=> literal_9 (=> z_boolDomain-2 true ) ) (=> literal_10 (=> z_boolDomain-2 false ) ) (=> literal_11 (=> z_boolDomain-1 z_boolDomain-8 ) ) (=> literal_12 (=> z_boolDomain-1 (or z_boolDomain-1 z_boolDomain-2 ) ) ) (=> literal_13 (=> z_boolDomain-1 true ) ) (=> literal_14 (=> z_boolDomain-1 false ) ) (=> literal_15 (=> z_boolDomain-8 z_boolDomain-1 ) ) (=> literal_16 (=> z_boolDomain-8 z_boolDomain-10 ) ) (=> literal_17 (=> z_boolDomain-8 true ) ) (=> literal_18 (=> (or z_boolDomain-1 z_boolDomain-2 ) true ) ) (=> literal_19 (=> (or z_boolDomain-4 z_boolDomain-5 ) true ) ) (=> literal_20 (=> (and z_boolDomain-3 z_boolDomain-5 ) z_boolDomain-5 ) ) (=> literal_21 (=> (and z_boolDomain-3 z_boolDomain-5 ) true ) ) (=> literal_22 (=> (and z_boolDomain-3 z_boolDomain-5 ) false ) ) (=> literal_23 (=> (and z_boolDomain-3 z_boolDomain-4 ) z_boolDomain-4 ) ) (=> literal_24 (=> (and z_boolDomain-3 z_boolDomain-4 ) true ) ) (=> literal_25 (=> (and z_boolDomain-3 z_boolDomain-4 ) false ) ) (=> literal_26 (=> z_boolDomain-10 z_boolDomain-8 ) ) (=> literal_27 (=> z_boolDomain-10 z_boolDomain-7 ) ) (=> literal_28 (=> z_boolDomain-10 z_boolDomain-5 ) ) (=> literal_29 (=> z_boolDomain-10 z_boolDomain-4 ) ) (=> literal_30 (=> z_boolDomain-10 true ) ) (=> literal_31 (=> z_boolDomain-7 z_boolDomain-6 ) ) (=> literal_32 (=> z_boolDomain-7 z_boolDomain-10 ) ) (=> literal_33 (=> z_boolDomain-7 z_boolDomain-5 ) ) (=> literal_34 (=> z_boolDomain-7 z_boolDomain-4 ) ) (=> literal_35 (=> z_boolDomain-7 true ) ) (=> literal_36 (=> z_boolDomain-7 false ) ) (=> literal_37 (=> z_boolDomain-5 (or z_boolDomain-4 z_boolDomain-5 ) ) ) (=> literal_38 (=> z_boolDomain-5 (and z_boolDomain-3 z_boolDomain-5 ) ) ) (=> literal_39 (=> z_boolDomain-5 z_boolDomain-10 ) ) (=> literal_40 (=> z_boolDomain-5 z_boolDomain-7 ) ) (=> literal_41 (=> z_boolDomain-5 z_boolDomain-4 ) ) (=> literal_42 (=> z_boolDomain-5 true ) ) (=> literal_43 (=> z_boolDomain-5 false ) ) (=> literal_44 (=> z_boolDomain-4 (or z_boolDomain-4 z_boolDomain-5 ) ) ) (=> literal_45 (=> z_boolDomain-4 (and z_boolDomain-3 z_boolDomain-4 ) ) ) (=> literal_46 (=> z_boolDomain-4 z_boolDomain-10 ) ) (=> literal_47 (=> z_boolDomain-4 z_boolDomain-7 ) ) (=> literal_48 (=> z_boolDomain-4 z_boolDomain-5 ) ) (=> literal_49 (=> z_boolDomain-4 true ) ) (=> literal_50 (=> z_boolDomain-4 false ) ) (=> literal_51 (=> true true ) ) (=> literal_52 (=> true false ) ) (=> literal_53 (=> false z_boolDomain-0 ) ) (=> literal_54 (=> false z_boolDomain-3 ) ) (=> literal_55 (=> false z_boolDomain-6 ) ) (=> literal_56 (=> false z_boolDomain-2 ) ) (=> literal_57 (=> false z_boolDomain-1 ) ) (=> literal_58 (=> false z_boolDomain-8 ) ) (=> literal_59 (=> false (or z_boolDomain-1 z_boolDomain-2 ) ) ) (=> literal_60 (=> false (or z_boolDomain-4 z_boolDomain-5 ) ) ) (=> literal_61 (=> false (and z_boolDomain-3 z_boolDomain-5 ) ) ) (=> literal_62 (=> false (and z_boolDomain-3 z_boolDomain-4 ) ) ) (=> literal_63 (=> false z_boolDomain-10 ) ) (=> literal_64 (=> false z_boolDomain-7 ) ) (=> literal_65 (=> false z_boolDomain-5 ) ) (=> literal_66 (=> false z_boolDomain-4 ) ) (=> literal_67 (=> false true ) ) (=> literal_68 (=> false false ) ) ) (domainToBeSolved z_boolDomain-0 z_boolDomain-1 z_boolDomain-2 z_boolDomain-3 z_boolDomain-4 z_boolDomain-5 z_boolDomain-6 z_boolDomain-7 z_boolDomain-8 z_boolDomain-9 z_boolDomain-10 ) ) )
[<-recv] success
Declaring constructors
[send->] (declare-fun --NEGATIVE-0 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-1 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-2 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-3 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-6 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-8 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (define-fun --NEGATIVE-4 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --NEGATIVE-5 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --NEGATIVE-7 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --NEGATIVE-9 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --NEGATIVE-10 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool f-arg-0-9 )
[<-recv] success
[send->] (declare-fun --SUCC-0 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-1 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-2 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-3 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-6 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-8 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (define-fun --SUCC-4 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --SUCC-5 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --SUCC-7 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --SUCC-9 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool f-arg-0-7 )
[<-recv] success
[send->] (define-fun --SUCC-10 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) ) Bool false )
[<-recv] success
[send->] (declare-fun --ZERO-0 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-1 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-2 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-3 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-6 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-8 () Bool )
[<-recv] success
[send->] (define-fun --ZERO-4 () Bool false )
[<-recv] success
[send->] (define-fun --ZERO-5 () Bool false )
[<-recv] success
[send->] (define-fun --ZERO-7 () Bool true )
[<-recv] success
[send->] (define-fun --ZERO-9 () Bool false )
[<-recv] success
[send->] (define-fun --ZERO-10 () Bool false )
[<-recv] success
[send->] (declare-fun Bar-0 () Bool )
[<-recv] success
[send->] (declare-fun Bar-1 () Bool )
[<-recv] success
[send->] (declare-fun Bar-2 () Bool )
[<-recv] success
[send->] (declare-fun Bar-3 () Bool )
[<-recv] success
[send->] (declare-fun Bar-6 () Bool )
[<-recv] success
[send->] (declare-fun Bar-8 () Bool )
[<-recv] success
[send->] (define-fun Bar-4 () Bool false )
[<-recv] success
[send->] (define-fun Bar-5 () Bool true )
[<-recv] success
[send->] (define-fun Bar-7 () Bool false )
[<-recv] success
[send->] (define-fun Bar-9 () Bool false )
[<-recv] success
[send->] (define-fun Bar-10 () Bool false )
[<-recv] success
[send->] (declare-fun Baz-0 () Bool )
[<-recv] success
[send->] (declare-fun Baz-1 () Bool )
[<-recv] success
[send->] (declare-fun Baz-2 () Bool )
[<-recv] success
[send->] (declare-fun Baz-3 () Bool )
[<-recv] success
[send->] (declare-fun Baz-6 () Bool )
[<-recv] success
[send->] (declare-fun Baz-8 () Bool )
[<-recv] success
[send->] (define-fun Baz-4 () Bool true )
[<-recv] success
[send->] (define-fun Baz-5 () Bool false )
[<-recv] success
[send->] (define-fun Baz-7 () Bool false )
[<-recv] success
[send->] (define-fun Baz-9 () Bool false )
[<-recv] success
[send->] (define-fun Baz-10 () Bool false )
[<-recv] success
Declaring existentials
[send->] (declare-fun x_exists_68-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_68-0 x_exists_68-1 x_exists_68-2 x_exists_68-3 x_exists_68-4 x_exists_68-5 x_exists_68-6 x_exists_68-7 x_exists_68-8 x_exists_68-9 x_exists_68-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_67-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_67-0 x_exists_67-1 x_exists_67-2 x_exists_67-3 x_exists_67-4 x_exists_67-5 x_exists_67-6 x_exists_67-7 x_exists_67-8 x_exists_67-9 x_exists_67-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_66-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_66-0 x_exists_66-1 x_exists_66-2 x_exists_66-3 x_exists_66-4 x_exists_66-5 x_exists_66-6 x_exists_66-7 x_exists_66-8 x_exists_66-9 x_exists_66-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_65-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_65-0 x_exists_65-1 x_exists_65-2 x_exists_65-3 x_exists_65-4 x_exists_65-5 x_exists_65-6 x_exists_65-7 x_exists_65-8 x_exists_65-9 x_exists_65-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_64-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_64-0 x_exists_64-1 x_exists_64-2 x_exists_64-3 x_exists_64-4 x_exists_64-5 x_exists_64-6 x_exists_64-7 x_exists_64-8 x_exists_64-9 x_exists_64-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_63-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_63-0 x_exists_63-1 x_exists_63-2 x_exists_63-3 x_exists_63-4 x_exists_63-5 x_exists_63-6 x_exists_63-7 x_exists_63-8 x_exists_63-9 x_exists_63-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_62-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_62-0 x_exists_62-1 x_exists_62-2 x_exists_62-3 x_exists_62-4 x_exists_62-5 x_exists_62-6 x_exists_62-7 x_exists_62-8 x_exists_62-9 x_exists_62-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_61-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_61-0 x_exists_61-1 x_exists_61-2 x_exists_61-3 x_exists_61-4 x_exists_61-5 x_exists_61-6 x_exists_61-7 x_exists_61-8 x_exists_61-9 x_exists_61-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_60-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_60-0 x_exists_60-1 x_exists_60-2 x_exists_60-3 x_exists_60-4 x_exists_60-5 x_exists_60-6 x_exists_60-7 x_exists_60-8 x_exists_60-9 x_exists_60-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_59-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_59-0 x_exists_59-1 x_exists_59-2 x_exists_59-3 x_exists_59-4 x_exists_59-5 x_exists_59-6 x_exists_59-7 x_exists_59-8 x_exists_59-9 x_exists_59-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_58-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_58-0 x_exists_58-1 x_exists_58-2 x_exists_58-3 x_exists_58-4 x_exists_58-5 x_exists_58-6 x_exists_58-7 x_exists_58-8 x_exists_58-9 x_exists_58-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_57-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_57-0 x_exists_57-1 x_exists_57-2 x_exists_57-3 x_exists_57-4 x_exists_57-5 x_exists_57-6 x_exists_57-7 x_exists_57-8 x_exists_57-9 x_exists_57-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_56-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_56-0 x_exists_56-1 x_exists_56-2 x_exists_56-3 x_exists_56-4 x_exists_56-5 x_exists_56-6 x_exists_56-7 x_exists_56-8 x_exists_56-9 x_exists_56-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_55-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_55-0 x_exists_55-1 x_exists_55-2 x_exists_55-3 x_exists_55-4 x_exists_55-5 x_exists_55-6 x_exists_55-7 x_exists_55-8 x_exists_55-9 x_exists_55-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_54-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_54-0 x_exists_54-1 x_exists_54-2 x_exists_54-3 x_exists_54-4 x_exists_54-5 x_exists_54-6 x_exists_54-7 x_exists_54-8 x_exists_54-9 x_exists_54-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_53-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_53-0 x_exists_53-1 x_exists_53-2 x_exists_53-3 x_exists_53-4 x_exists_53-5 x_exists_53-6 x_exists_53-7 x_exists_53-8 x_exists_53-9 x_exists_53-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_52-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_52-0 x_exists_52-1 x_exists_52-2 x_exists_52-3 x_exists_52-4 x_exists_52-5 x_exists_52-6 x_exists_52-7 x_exists_52-8 x_exists_52-9 x_exists_52-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_51-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_51-0 x_exists_51-1 x_exists_51-2 x_exists_51-3 x_exists_51-4 x_exists_51-5 x_exists_51-6 x_exists_51-7 x_exists_51-8 x_exists_51-9 x_exists_51-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_50-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_50-0 x_exists_50-1 x_exists_50-2 x_exists_50-3 x_exists_50-4 x_exists_50-5 x_exists_50-6 x_exists_50-7 x_exists_50-8 x_exists_50-9 x_exists_50-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_49-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_49-0 x_exists_49-1 x_exists_49-2 x_exists_49-3 x_exists_49-4 x_exists_49-5 x_exists_49-6 x_exists_49-7 x_exists_49-8 x_exists_49-9 x_exists_49-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_48-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_48-0 x_exists_48-1 x_exists_48-2 x_exists_48-3 x_exists_48-4 x_exists_48-5 x_exists_48-6 x_exists_48-7 x_exists_48-8 x_exists_48-9 x_exists_48-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_47-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_47-0 x_exists_47-1 x_exists_47-2 x_exists_47-3 x_exists_47-4 x_exists_47-5 x_exists_47-6 x_exists_47-7 x_exists_47-8 x_exists_47-9 x_exists_47-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_46-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_46-0 x_exists_46-1 x_exists_46-2 x_exists_46-3 x_exists_46-4 x_exists_46-5 x_exists_46-6 x_exists_46-7 x_exists_46-8 x_exists_46-9 x_exists_46-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_45-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_45-0 x_exists_45-1 x_exists_45-2 x_exists_45-3 x_exists_45-4 x_exists_45-5 x_exists_45-6 x_exists_45-7 x_exists_45-8 x_exists_45-9 x_exists_45-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_44-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_44-0 x_exists_44-1 x_exists_44-2 x_exists_44-3 x_exists_44-4 x_exists_44-5 x_exists_44-6 x_exists_44-7 x_exists_44-8 x_exists_44-9 x_exists_44-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_43-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_43-0 x_exists_43-1 x_exists_43-2 x_exists_43-3 x_exists_43-4 x_exists_43-5 x_exists_43-6 x_exists_43-7 x_exists_43-8 x_exists_43-9 x_exists_43-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_42-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_42-0 x_exists_42-1 x_exists_42-2 x_exists_42-3 x_exists_42-4 x_exists_42-5 x_exists_42-6 x_exists_42-7 x_exists_42-8 x_exists_42-9 x_exists_42-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_41-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_41-0 x_exists_41-1 x_exists_41-2 x_exists_41-3 x_exists_41-4 x_exists_41-5 x_exists_41-6 x_exists_41-7 x_exists_41-8 x_exists_41-9 x_exists_41-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_40-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_40-0 x_exists_40-1 x_exists_40-2 x_exists_40-3 x_exists_40-4 x_exists_40-5 x_exists_40-6 x_exists_40-7 x_exists_40-8 x_exists_40-9 x_exists_40-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_39-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_39-0 x_exists_39-1 x_exists_39-2 x_exists_39-3 x_exists_39-4 x_exists_39-5 x_exists_39-6 x_exists_39-7 x_exists_39-8 x_exists_39-9 x_exists_39-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_38-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_38-0 x_exists_38-1 x_exists_38-2 x_exists_38-3 x_exists_38-4 x_exists_38-5 x_exists_38-6 x_exists_38-7 x_exists_38-8 x_exists_38-9 x_exists_38-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_37-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_37-0 x_exists_37-1 x_exists_37-2 x_exists_37-3 x_exists_37-4 x_exists_37-5 x_exists_37-6 x_exists_37-7 x_exists_37-8 x_exists_37-9 x_exists_37-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_36-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_36-0 x_exists_36-1 x_exists_36-2 x_exists_36-3 x_exists_36-4 x_exists_36-5 x_exists_36-6 x_exists_36-7 x_exists_36-8 x_exists_36-9 x_exists_36-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_35-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_35-0 x_exists_35-1 x_exists_35-2 x_exists_35-3 x_exists_35-4 x_exists_35-5 x_exists_35-6 x_exists_35-7 x_exists_35-8 x_exists_35-9 x_exists_35-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_34-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_34-0 x_exists_34-1 x_exists_34-2 x_exists_34-3 x_exists_34-4 x_exists_34-5 x_exists_34-6 x_exists_34-7 x_exists_34-8 x_exists_34-9 x_exists_34-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_33-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_33-0 x_exists_33-1 x_exists_33-2 x_exists_33-3 x_exists_33-4 x_exists_33-5 x_exists_33-6 x_exists_33-7 x_exists_33-8 x_exists_33-9 x_exists_33-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_32-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_32-0 x_exists_32-1 x_exists_32-2 x_exists_32-3 x_exists_32-4 x_exists_32-5 x_exists_32-6 x_exists_32-7 x_exists_32-8 x_exists_32-9 x_exists_32-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_31-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_31-0 x_exists_31-1 x_exists_31-2 x_exists_31-3 x_exists_31-4 x_exists_31-5 x_exists_31-6 x_exists_31-7 x_exists_31-8 x_exists_31-9 x_exists_31-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_30-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_30-0 x_exists_30-1 x_exists_30-2 x_exists_30-3 x_exists_30-4 x_exists_30-5 x_exists_30-6 x_exists_30-7 x_exists_30-8 x_exists_30-9 x_exists_30-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_29-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_29-0 x_exists_29-1 x_exists_29-2 x_exists_29-3 x_exists_29-4 x_exists_29-5 x_exists_29-6 x_exists_29-7 x_exists_29-8 x_exists_29-9 x_exists_29-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_28-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_28-0 x_exists_28-1 x_exists_28-2 x_exists_28-3 x_exists_28-4 x_exists_28-5 x_exists_28-6 x_exists_28-7 x_exists_28-8 x_exists_28-9 x_exists_28-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_27-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_27-0 x_exists_27-1 x_exists_27-2 x_exists_27-3 x_exists_27-4 x_exists_27-5 x_exists_27-6 x_exists_27-7 x_exists_27-8 x_exists_27-9 x_exists_27-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_26-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_26-0 x_exists_26-1 x_exists_26-2 x_exists_26-3 x_exists_26-4 x_exists_26-5 x_exists_26-6 x_exists_26-7 x_exists_26-8 x_exists_26-9 x_exists_26-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_25-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_25-0 x_exists_25-1 x_exists_25-2 x_exists_25-3 x_exists_25-4 x_exists_25-5 x_exists_25-6 x_exists_25-7 x_exists_25-8 x_exists_25-9 x_exists_25-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_24-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_24-0 x_exists_24-1 x_exists_24-2 x_exists_24-3 x_exists_24-4 x_exists_24-5 x_exists_24-6 x_exists_24-7 x_exists_24-8 x_exists_24-9 x_exists_24-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_23-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_23-0 x_exists_23-1 x_exists_23-2 x_exists_23-3 x_exists_23-4 x_exists_23-5 x_exists_23-6 x_exists_23-7 x_exists_23-8 x_exists_23-9 x_exists_23-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_22-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_22-0 x_exists_22-1 x_exists_22-2 x_exists_22-3 x_exists_22-4 x_exists_22-5 x_exists_22-6 x_exists_22-7 x_exists_22-8 x_exists_22-9 x_exists_22-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_21-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_21-0 x_exists_21-1 x_exists_21-2 x_exists_21-3 x_exists_21-4 x_exists_21-5 x_exists_21-6 x_exists_21-7 x_exists_21-8 x_exists_21-9 x_exists_21-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_20-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_20-0 x_exists_20-1 x_exists_20-2 x_exists_20-3 x_exists_20-4 x_exists_20-5 x_exists_20-6 x_exists_20-7 x_exists_20-8 x_exists_20-9 x_exists_20-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_19-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_19-0 x_exists_19-1 x_exists_19-2 x_exists_19-3 x_exists_19-4 x_exists_19-5 x_exists_19-6 x_exists_19-7 x_exists_19-8 x_exists_19-9 x_exists_19-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_18-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_18-0 x_exists_18-1 x_exists_18-2 x_exists_18-3 x_exists_18-4 x_exists_18-5 x_exists_18-6 x_exists_18-7 x_exists_18-8 x_exists_18-9 x_exists_18-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_17-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_17-0 x_exists_17-1 x_exists_17-2 x_exists_17-3 x_exists_17-4 x_exists_17-5 x_exists_17-6 x_exists_17-7 x_exists_17-8 x_exists_17-9 x_exists_17-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_16-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_16-0 x_exists_16-1 x_exists_16-2 x_exists_16-3 x_exists_16-4 x_exists_16-5 x_exists_16-6 x_exists_16-7 x_exists_16-8 x_exists_16-9 x_exists_16-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_15-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_15-0 x_exists_15-1 x_exists_15-2 x_exists_15-3 x_exists_15-4 x_exists_15-5 x_exists_15-6 x_exists_15-7 x_exists_15-8 x_exists_15-9 x_exists_15-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_14-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_14-0 x_exists_14-1 x_exists_14-2 x_exists_14-3 x_exists_14-4 x_exists_14-5 x_exists_14-6 x_exists_14-7 x_exists_14-8 x_exists_14-9 x_exists_14-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_13-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_13-0 x_exists_13-1 x_exists_13-2 x_exists_13-3 x_exists_13-4 x_exists_13-5 x_exists_13-6 x_exists_13-7 x_exists_13-8 x_exists_13-9 x_exists_13-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_12-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_12-0 x_exists_12-1 x_exists_12-2 x_exists_12-3 x_exists_12-4 x_exists_12-5 x_exists_12-6 x_exists_12-7 x_exists_12-8 x_exists_12-9 x_exists_12-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_11-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_11-0 x_exists_11-1 x_exists_11-2 x_exists_11-3 x_exists_11-4 x_exists_11-5 x_exists_11-6 x_exists_11-7 x_exists_11-8 x_exists_11-9 x_exists_11-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_10-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_10-0 x_exists_10-1 x_exists_10-2 x_exists_10-3 x_exists_10-4 x_exists_10-5 x_exists_10-6 x_exists_10-7 x_exists_10-8 x_exists_10-9 x_exists_10-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_9-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_9-0 x_exists_9-1 x_exists_9-2 x_exists_9-3 x_exists_9-4 x_exists_9-5 x_exists_9-6 x_exists_9-7 x_exists_9-8 x_exists_9-9 x_exists_9-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_8-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_8-0 x_exists_8-1 x_exists_8-2 x_exists_8-3 x_exists_8-4 x_exists_8-5 x_exists_8-6 x_exists_8-7 x_exists_8-8 x_exists_8-9 x_exists_8-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_7-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_7-0 x_exists_7-1 x_exists_7-2 x_exists_7-3 x_exists_7-4 x_exists_7-5 x_exists_7-6 x_exists_7-7 x_exists_7-8 x_exists_7-9 x_exists_7-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_6-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_6-0 x_exists_6-1 x_exists_6-2 x_exists_6-3 x_exists_6-4 x_exists_6-5 x_exists_6-6 x_exists_6-7 x_exists_6-8 x_exists_6-9 x_exists_6-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_5-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_5-0 x_exists_5-1 x_exists_5-2 x_exists_5-3 x_exists_5-4 x_exists_5-5 x_exists_5-6 x_exists_5-7 x_exists_5-8 x_exists_5-9 x_exists_5-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_4-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_4-0 x_exists_4-1 x_exists_4-2 x_exists_4-3 x_exists_4-4 x_exists_4-5 x_exists_4-6 x_exists_4-7 x_exists_4-8 x_exists_4-9 x_exists_4-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_3-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_3-0 x_exists_3-1 x_exists_3-2 x_exists_3-3 x_exists_3-4 x_exists_3-5 x_exists_3-6 x_exists_3-7 x_exists_3-8 x_exists_3-9 x_exists_3-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_2-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_2-0 x_exists_2-1 x_exists_2-2 x_exists_2-3 x_exists_2-4 x_exists_2-5 x_exists_2-6 x_exists_2-7 x_exists_2-8 x_exists_2-9 x_exists_2-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_1-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_1-0 x_exists_1-1 x_exists_1-2 x_exists_1-3 x_exists_1-4 x_exists_1-5 x_exists_1-6 x_exists_1-7 x_exists_1-8 x_exists_1-9 x_exists_1-10 ) )
[<-recv] success
[send->] (declare-fun x_exists_0-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-10 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_0-0 x_exists_0-1 x_exists_0-2 x_exists_0-3 x_exists_0-4 x_exists_0-5 x_exists_0-6 x_exists_0-7 x_exists_0-8 x_exists_0-9 x_exists_0-10 ) )
[<-recv] success
Assert existential properties
[send->] (assert (=> (not literal_0 ) (and x_exists_0-0 (not (or x_exists_0-1 x_exists_0-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_1 ) (and x_exists_1-0 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_2 ) (and x_exists_2-3 (not (or x_exists_2-4 x_exists_2-5 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_3 ) (and x_exists_3-3 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_4 ) (and x_exists_4-6 (not x_exists_4-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_5 ) (and x_exists_5-6 (not x_exists_5-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_6 ) (and x_exists_6-6 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_7 ) (and x_exists_7-2 (not x_exists_7-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_8 ) (and x_exists_8-2 (not (or x_exists_8-1 x_exists_8-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_9 ) (and x_exists_9-2 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_10 ) (and x_exists_10-2 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_11 ) (and x_exists_11-1 (not x_exists_11-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_12 ) (and x_exists_12-1 (not (or x_exists_12-1 x_exists_12-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_13 ) (and x_exists_13-1 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_14 ) (and x_exists_14-1 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_15 ) (and x_exists_15-8 (not x_exists_15-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_16 ) (and x_exists_16-8 (not x_exists_16-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_17 ) (and x_exists_17-8 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_18 ) (and (or x_exists_18-1 x_exists_18-2 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_19 ) (and (or x_exists_19-4 x_exists_19-5 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_20 ) (and (and x_exists_20-3 x_exists_20-5 ) (not x_exists_20-5 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_21 ) (and (and x_exists_21-3 x_exists_21-5 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_22 ) (and (and x_exists_22-3 x_exists_22-5 ) (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_23 ) (and (and x_exists_23-3 x_exists_23-4 ) (not x_exists_23-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_24 ) (and (and x_exists_24-3 x_exists_24-4 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_25 ) (and (and x_exists_25-3 x_exists_25-4 ) (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_26 ) (and x_exists_26-10 (not x_exists_26-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_27 ) (and x_exists_27-10 (not x_exists_27-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_28 ) (and x_exists_28-10 (not x_exists_28-5 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_29 ) (and x_exists_29-10 (not x_exists_29-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_30 ) (and x_exists_30-10 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_31 ) (and x_exists_31-7 (not x_exists_31-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_32 ) (and x_exists_32-7 (not x_exists_32-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_33 ) (and x_exists_33-7 (not x_exists_33-5 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_34 ) (and x_exists_34-7 (not x_exists_34-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_35 ) (and x_exists_35-7 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_36 ) (and x_exists_36-7 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_37 ) (and x_exists_37-5 (not (or x_exists_37-4 x_exists_37-5 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_38 ) (and x_exists_38-5 (not (and x_exists_38-3 x_exists_38-5 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_39 ) (and x_exists_39-5 (not x_exists_39-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_40 ) (and x_exists_40-5 (not x_exists_40-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_41 ) (and x_exists_41-5 (not x_exists_41-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_42 ) (and x_exists_42-5 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_43 ) (and x_exists_43-5 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_44 ) (and x_exists_44-4 (not (or x_exists_44-4 x_exists_44-5 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_45 ) (and x_exists_45-4 (not (and x_exists_45-3 x_exists_45-4 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_46 ) (and x_exists_46-4 (not x_exists_46-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_47 ) (and x_exists_47-4 (not x_exists_47-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_48 ) (and x_exists_48-4 (not x_exists_48-5 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_49 ) (and x_exists_49-4 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_50 ) (and x_exists_50-4 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_51 ) (and true (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_52 ) (and true (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_53 ) (and false (not x_exists_53-0 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_54 ) (and false (not x_exists_54-3 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_55 ) (and false (not x_exists_55-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_56 ) (and false (not x_exists_56-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_57 ) (and false (not x_exists_57-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_58 ) (and false (not x_exists_58-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_59 ) (and false (not (or x_exists_59-1 x_exists_59-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_60 ) (and false (not (or x_exists_60-4 x_exists_60-5 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_61 ) (and false (not (and x_exists_61-3 x_exists_61-5 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_62 ) (and false (not (and x_exists_62-3 x_exists_62-4 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_63 ) (and false (not x_exists_63-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_64 ) (and false (not x_exists_64-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_65 ) (and false (not x_exists_65-5 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_66 ) (and false (not x_exists_66-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_67 ) (and false (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_68 ) (and false (not false ) ) ) )
[<-recv] success
Asserting function domain properties
[send->] (assert (forall ((y_univ_1-0 Bool ) (y_univ_1-1 Bool ) (y_univ_1-2 Bool ) (y_univ_1-3 Bool ) (y_univ_1-4 Bool ) (y_univ_1-5 Bool ) (y_univ_1-6 Bool ) (y_univ_1-7 Bool ) (y_univ_1-8 Bool ) (y_univ_1-9 Bool ) (y_univ_1-10 Bool ) (y_univ_2-0 Bool ) (y_univ_2-1 Bool ) (y_univ_2-2 Bool ) (y_univ_2-3 Bool ) (y_univ_2-4 Bool ) (y_univ_2-5 Bool ) (y_univ_2-6 Bool ) (y_univ_2-7 Bool ) (y_univ_2-8 Bool ) (y_univ_2-9 Bool ) (y_univ_2-10 Bool ) (y_univ_3-0 Bool ) (y_univ_3-1 Bool ) (y_univ_3-2 Bool ) (y_univ_3-3 Bool ) (y_univ_3-4 Bool ) (y_univ_3-5 Bool ) (y_univ_3-6 Bool ) (y_univ_3-7 Bool ) (y_univ_3-8 Bool ) (y_univ_3-9 Bool ) (y_univ_3-10 Bool ) ) (and (=> (and (domain y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (domain y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 ) (domain y_univ_3-0 y_univ_3-1 y_univ_3-2 y_univ_3-3 y_univ_3-4 y_univ_3-5 y_univ_3-6 y_univ_3-7 y_univ_3-8 y_univ_3-9 y_univ_3-10 ) ) (and true true true true true true (and (= true Baz-4 ) (and (= (--NEGATIVE-4 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) false ) (= (--SUCC-4 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) false ) (= --ZERO-4 false ) (= Bar-4 false ) ) ) (and (= true Bar-5 ) (and (= (--NEGATIVE-5 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) false ) (= (--SUCC-5 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) false ) (= --ZERO-5 false ) (= Baz-5 false ) ) ) true true (and (= true --ZERO-7 ) (and (= (--NEGATIVE-7 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) false ) (= (--SUCC-7 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) false ) (= Bar-7 false ) (= Baz-7 false ) ) ) true true (and (= y_univ_1-7 (--SUCC-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) ) (and (= (--NEGATIVE-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) false ) (= --ZERO-9 false ) (= Bar-9 false ) (= Baz-9 false ) ) ) (and (= y_univ_1-9 (--NEGATIVE-10 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) ) (and (= (--SUCC-10 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) false ) (= --ZERO-10 false ) (= Bar-10 false ) (= Baz-10 false ) ) ) true true ) ) (and (domain (--NEGATIVE-0 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-1 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-2 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-3 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-4 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-5 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-6 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-7 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-8 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--NEGATIVE-10 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) ) (domain (--SUCC-0 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-1 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-2 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-3 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-4 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-5 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-6 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-7 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-8 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) (--SUCC-10 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 ) ) (domain --ZERO-0 --ZERO-1 --ZERO-2 --ZERO-3 --ZERO-4 --ZERO-5 --ZERO-6 --ZERO-7 --ZERO-8 --ZERO-9 --ZERO-10 ) (domain Bar-0 Bar-1 Bar-2 Bar-3 Bar-4 Bar-5 Bar-6 Bar-7 Bar-8 Bar-9 Bar-10 ) (domain Baz-0 Baz-1 Baz-2 Baz-3 Baz-4 Baz-5 Baz-6 Baz-7 Baz-8 Baz-9 Baz-10 ) ) ) ) )
[<-recv] success
About do check SAT
[send->] (check-sat )
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.refine-injectivity)
[stderr] (smt.pattern-inference)
[stderr] (smt.inferred-patterns :qid k!1030
[stderr]   ((--NEGATIVE-0 (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-1 (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-2 (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-3 (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-6 (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-8 (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--SUCC-0 (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-1 (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-2 (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-3 (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-6 (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-8 (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr] )
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] (smt.simplifying-clause-set :num-deleted-clauses 318)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.mbqi :failed k!1030)
[stderr] (smt.restarting :propagations 542 :decisions 326 :conflicts 2 :restart 100 :restart-outer 100 :agility 0)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.mbqi :failed k!1030)
[stderr] (smt.restarting :propagations 1090 :decisions 651 :conflicts 2 :restart 100 :restart-outer 100 :agility 0)
[stderr] is_solved
[stderr] (smt.mbqi)
[<-recv] sat
Subbing in else CAnd_ [(CEqual_ (SetVar_ SetVar_5) (SetVar_ SetVar_5)),(CSubset_ (SetVar_ SetVar_4) (Union_ (SetVar_ SetVar_77) (SetVar_ SetVar_75))),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_75) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_75) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])))]),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_77) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_77) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])))]),(CSubset_ (SetVar_ SetVar_5) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" [])))]
Subbing in equal (CEqual_ (SetVar_ SetVar_5) (SetVar_ SetVar_5))
Subbing in lit var (SetVar_ SetVar_5)
Subbing in lit var (SetVar_ SetVar_5)
Subbing in subset (CSubset_ (SetVar_ SetVar_4) (Union_ (SetVar_ SetVar_77) (SetVar_ SetVar_75)))
Subbing in lit var (SetVar_ SetVar_4)
Subbing in lit else Union_ (SetVar_ SetVar_77) (SetVar_ SetVar_75)
Subbing in lit var (SetVar_ SetVar_77)
Subbing in lit var (SetVar_ SetVar_75)
Subbing in else CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_75) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_75) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])))]
Subbing in else CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_75) (Bottom_))
Subbing in subset (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))
Subbing in lit else Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])
Subbing in lit var (SetVar_ SetVar_5)
Subbing in lit else Ctor_ "Bar" []
Subbing in lit else Bottom_
Subbing in subset (CSubset_ (SetVar_ SetVar_75) (Bottom_))
Subbing in lit var (SetVar_ SetVar_75)
Subbing in lit else Bottom_
Subbing in else CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_75) (SetVar_ SetVar_7))
Subbing in else CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))
Subbing in subset (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))
Subbing in lit else Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])
Subbing in lit var (SetVar_ SetVar_5)
Subbing in lit else Ctor_ "Bar" []
Subbing in lit else Bottom_
Subbing in equal (CEqual_ (SetVar_ SetVar_75) (SetVar_ SetVar_7))
Subbing in lit var (SetVar_ SetVar_75)
Subbing in lit var (SetVar_ SetVar_7)
Subbing in equal (CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7))
Subbing in lit else Ctor_ "--ZERO" []
Subbing in lit var (SetVar_ SetVar_7)
Subbing in equal (CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])))
Subbing in lit else Ctor_ "Bar" []
Subbing in lit else Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])
Subbing in lit var (SetVar_ SetVar_5)
Subbing in lit else Ctor_ "Bar" []
Subbing in else CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_77) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_77) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])))]
Subbing in else CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_77) (Bottom_))
Subbing in subset (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))
Subbing in lit else Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])
Subbing in lit var (SetVar_ SetVar_5)
Subbing in lit else Ctor_ "Baz" []
Subbing in lit else Bottom_
Subbing in subset (CSubset_ (SetVar_ SetVar_77) (Bottom_))
Subbing in lit var (SetVar_ SetVar_77)
Subbing in lit else Bottom_
Subbing in else CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_77) (SetVar_ SetVar_9))
Subbing in else CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))
Subbing in subset (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))
Subbing in lit else Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])
Subbing in lit var (SetVar_ SetVar_5)
Subbing in lit else Ctor_ "Baz" []
Subbing in lit else Bottom_
Subbing in equal (CEqual_ (SetVar_ SetVar_77) (SetVar_ SetVar_9))
Subbing in lit var (SetVar_ SetVar_77)
Subbing in lit var (SetVar_ SetVar_9)
Subbing in equal (CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9))
Subbing in lit else Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]
Subbing in lit else Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])]
Subbing in lit else Ctor_ "--ZERO" []
Subbing in lit var (SetVar_ SetVar_9)
Subbing in equal (CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])))
Subbing in lit else Ctor_ "Baz" []
Subbing in lit else Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])
Subbing in lit var (SetVar_ SetVar_5)
Subbing in lit else Ctor_ "Baz" []
Subbing in subset (CSubset_ (SetVar_ SetVar_5) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" [])))
Subbing in lit var (SetVar_ SetVar_5)
Subbing in lit else Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" [])
Subbing in lit else Ctor_ "Baz" []
Subbing in lit else Ctor_ "Bar" []
Found Solution
Generalized type for fooFun is Forall [SetVar_74,SetVar_5,SetVar_4,SetVar_77,SetVar_75] (Fun (App (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [] :@ SetVar_5) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "Basics"}}) (Name {_name = "Int"}) [] :@ SetVar_4) :@ SetVar_74) (CAnd_ [(CEqual_ (SetVar_ SetVar_5) (SetVar_ SetVar_5)),(CSubset_ (SetVar_ SetVar_4) (Union_ (SetVar_ SetVar_77) (SetVar_ SetVar_75))),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_75) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_75) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])))]),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_77) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_77) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])))]),(CSubset_ (SetVar_ SetVar_5) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" [])))])
Constraining exprssion Call (At (Region {_start = Position {_line = 8, _column = 13}, _end = Position {_line = 8, _column = 19}}) (VarTopLevel (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "fooFun"}))) [At (Region {_start = Position {_line = 8, _column = 20}, _end = Position {_line = 8, _column = 23}}) (VarCtor Enum (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Baz"}) ZB (Forall (fromList []) (TType (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [])))]
Constraining exprssion VarTopLevel (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "fooFun"})
Instantiating with SubList[(SetVar_74,SetVar_79),(SetVar_5,SetVar_80),(SetVar_4,SetVar_81),(SetVar_77,SetVar_82),(SetVar_75,SetVar_83)]
Replacing SetVar_5 with SetVar_80
Replacing SetVar_4 with SetVar_81
Replacing SetVar_74 with SetVar_79
Replacing SetVar_5 with SetVar_80
Replacing SetVar_5 with SetVar_80
Replacing SetVar_4 with SetVar_81
Replacing SetVar_77 with SetVar_82
Replacing SetVar_75 with SetVar_83
Replacing SetVar_5 with SetVar_80
Replacing SetVar_75 with SetVar_83
Instantiating Forall [SetVar_74,SetVar_5,SetVar_4,SetVar_77,SetVar_75] (Fun (App (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [] :@ SetVar_5) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "Basics"}}) (Name {_name = "Int"}) [] :@ SetVar_4) :@ SetVar_74) (CAnd_ [(CEqual_ (SetVar_ SetVar_5) (SetVar_ SetVar_5)),(CSubset_ (SetVar_ SetVar_4) (Union_ (SetVar_ SetVar_77) (SetVar_ SetVar_75))),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_75) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_75) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Bar" [])))]),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_77) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_77) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_5) (Ctor_ "Baz" [])))]),(CSubset_ (SetVar_ SetVar_5) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" [])))]) into (Fun (App (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [] :@ SetVar_80) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "Basics"}}) (Name {_name = "Int"}) [] :@ SetVar_81) :@ SetVar_79,(CAnd_ [(CEqual_ (SetVar_ SetVar_80) (SetVar_ SetVar_80)),(CSubset_ (SetVar_ SetVar_81) (Union_ (SetVar_ SetVar_82) (SetVar_ SetVar_83))),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_80) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_83) (Bottom_))),(CImplies_ (CNot_ (CSubsReplacing SetVar_5 with SetVar_80
Replacing SetVar_75 with SetVar_83
Didn't find variable SetVar_7 in list [(SetVar_74,SetVar_79),(SetVar_5,SetVar_80),(SetVar_4,SetVar_81),(SetVar_77,SetVar_82),(SetVar_75,SetVar_83)]
Didn't find variable SetVar_7 in list [(SetVar_74,SetVar_79),(SetVar_5,SetVar_80),(SetVar_4,SetVar_81),(SetVar_77,SetVar_82),(SetVar_75,SetVar_83)]
Replacing SetVar_5 with SetVar_80
Replacing SetVar_5 with SetVar_80
Replacing SetVar_77 with SetVar_82
Replacing SetVar_5 with SetVar_80
Replacing SetVar_77 with SetVar_82
Didn't find variable SetVar_9 in list [(SetVar_74,SetVar_79),(SetVar_5,SetVar_80),(SetVar_4,SetVar_81),(SetVar_77,SetVar_82),(SetVar_75,SetVar_83)]
Didn't find variable SetVar_9 in list [(SetVar_74,SetVar_79),(SetVar_5,SetVar_80),(SetVar_4,SetVar_81),(SetVar_77,SetVar_82),(SetVar_75,SetVar_83)]
Replacing SetVar_5 with SetVar_80
Replacing SetVar_5 with SetVar_80
et_ (Intersect_ (SetVar_ SetVar_80) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_83) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_80) (Ctor_ "Bar" [])))]),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_80) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_82) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_80) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_82) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_80) (Ctor_ "Baz" [])))]),(CSubset_ (SetVar_ SetVar_80) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" [])))])) for var fooFun
Unifying typesFun (App (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [] :@ SetVar_11) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "Basics"}}) (Name {_name = "Int"}) [] :@ SetVar_12) :@ SetVar_13
  and Fun (App (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [] :@ SetVar_80) (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "Basics"}}) (Name {_name = "Int"}) [] :@ SetVar_81) :@ SetVar_79
Constraining exprssion VarCtor Enum (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Baz"}) ZB (Forall (fromList []) (TType (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) []))
Constraining that argTy App (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [] :@ SetVar_15Smaller than App (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "Foo"}) [] :@ SetVar_11
Function call At (Region {_start = Position {_line = 8, _column = 13}, _end = Position {_line = 8, _column = 19}}) (VarTopLevel (Canonical {_package = Name {_author = "author", _project = "project"}, _module = Name {_name = "Main"}}) (Name {_name = "fooFun"}))
    generates constr (CAnd_ [(CSubset_ (SetVar_ SetVar_12) (SetVar_ SetVar_14)),(CEqual_ (SetVar_ SetVar_11) (SetVar_ SetVar_11)),(CSubset_ (SetVar_ SetVar_12) (Union_ (SetVar_ SetVar_82) (SetVar_ SetVar_83))),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_83) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_83) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" [])))]),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_82) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_82) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" [])))]),(CSubset_ (SetVar_ SetVar_11) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" []))),(CEqual_ (SetVar_ SetVar_15) (Ctor_ "Baz" []))])
Solving constraints for definition fooFunApp
Got safety constraints [(CSubset_ (SetVar_ SetVar_15) (SetVar_ SetVar_11))]
Flattened top level:
(CAnd_ [(CSubset_ (SetVar_ SetVar_12) (SetVar_ SetVar_14)),(CSubset_ (SetVar_ SetVar_12) (Union_ (SetVar_ SetVar_82) (SetVar_ SetVar_83))),(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_83) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_83) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" []))),(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_82) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_82) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" []))),(CSubset_ (SetVar_ SetVar_11) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" []))),(CEqual_ (SetVar_ SetVar_15) (Ctor_ "Baz" [])),(CSubset_ (SetVar_ SetVar_15) (SetVar_ SetVar_11))])

[send->] (set-option :print-success true )
[<-recv] success
[send->] (set-option :produce-models true )
[<-recv] success
cInitial: CAnd [CSubset (Var "SetVar_12") (Var "SetVar_14"),CSubset (Var "SetVar_12") (Union (Var "SetVar_82") (Var "SetVar_83")),CImplies (CSubset (Intersect (Var "SetVar_11") (FunApp "Bar" [])) Bottom) (CSubset (Var "SetVar_83") Bottom),CImplies (CNot (CSubset (Intersect (Var "SetVar_11") (FunApp "Bar" [])) Bottom)) (CAnd [CSubset (Var "SetVar_83") (Var "SetVar_7"),CSubset (Var "SetVar_7") (Var "SetVar_83")]),CAnd [CSubset (FunApp "--ZERO" []) (Var "SetVar_7"),CSubset (Var "SetVar_7") (FunApp "--ZERO" [])],CAnd [CSubset (FunApp "Bar" []) (Intersect (Var "SetVar_11") (FunApp "Bar" [])),CSubset (Intersect (Var "SetVar_11") (FunApp "Bar" [])) (FunApp "Bar" [])],CImplies (CSubset (Intersect (Var "SetVar_11") (FunApp "Baz" [])) Bottom) (CSubset (Var "SetVar_82") Bottom),CImplies (CNot (CSubset (Intersect (Var "SetVar_11") (FunApp "Baz" [])) Bottom)) (CAnd [CSubset (Var "SetVar_82") (Var "SetVar_9"),CSubset (Var "SetVar_9") (Var "SetVar_82")]),CAnd [CSubset (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]]) (Var "SetVar_9"),CSubset (Var "SetVar_9") (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])],CAnd [CSubset (FunApp "Baz" []) (Intersect (Var "SetVar_11") (FunApp "Baz" [])),CSubset (Intersect (Var "SetVar_11") (FunApp "Baz" [])) (FunApp "Baz" [])],CSubset (Var "SetVar_11") (Union (FunApp "Baz" []) (FunApp "Bar" [])),CAnd [CSubset (Var "SetVar_15") (FunApp "Baz" []),CSubset (FunApp "Baz" []) (Var "SetVar_15")],CSubset (Var "SetVar_15") (Var "SetVar_11")]
[send->] (set-logic UF )
[<-recv] success
[send->] (set-option :smt.mbqi true )
[<-recv] success
[send->] (push )
[<-recv] success
[send->] (declare-fun literal_0 () Bool )
[<-recv] success
[send->] (declare-fun literal_1 () Bool )
[<-recv] success
[send->] (declare-fun literal_2 () Bool )
[<-recv] success
[send->] (declare-fun literal_3 () Bool )
[<-recv] success
[send->] (declare-fun literal_4 () Bool )
[<-recv] success
[send->] (declare-fun literal_5 () Bool )
[<-recv] success
[send->] (declare-fun literal_6 () Bool )
[<-recv] success
[send->] (declare-fun literal_7 () Bool )
[<-recv] success
[send->] (declare-fun literal_8 () Bool )
[<-recv] success
[send->] (declare-fun literal_9 () Bool )
[<-recv] success
[send->] (declare-fun literal_10 () Bool )
[<-recv] success
[send->] (declare-fun literal_11 () Bool )
[<-recv] success
[send->] (declare-fun literal_12 () Bool )
[<-recv] success
[send->] (declare-fun literal_13 () Bool )
[<-recv] success
[send->] (declare-fun literal_14 () Bool )
[<-recv] success
[send->] (declare-fun literal_15 () Bool )
[<-recv] success
[send->] (declare-fun literal_16 () Bool )
[<-recv] success
[send->] (declare-fun literal_17 () Bool )
[<-recv] success
[send->] (declare-fun literal_18 () Bool )
[<-recv] success
[send->] (declare-fun literal_19 () Bool )
[<-recv] success
[send->] (declare-fun literal_20 () Bool )
[<-recv] success
[send->] (declare-fun literal_21 () Bool )
[<-recv] success
[send->] (declare-fun literal_22 () Bool )
[<-recv] success
[send->] (declare-fun literal_23 () Bool )
[<-recv] success
[send->] (declare-fun literal_24 () Bool )
[<-recv] success
[send->] (declare-fun literal_25 () Bool )
[<-recv] success
[send->] (declare-fun literal_26 () Bool )
[<-recv] success
[send->] (declare-fun literal_27 () Bool )
[<-recv] success
[send->] (declare-fun literal_28 () Bool )
[<-recv] success
[send->] (declare-fun literal_29 () Bool )
[<-recv] success
[send->] (declare-fun literal_30 () Bool )
[<-recv] success
[send->] (declare-fun literal_31 () Bool )
[<-recv] success
[send->] (declare-fun literal_32 () Bool )
[<-recv] success
[send->] (declare-fun literal_33 () Bool )
[<-recv] success
[send->] (declare-fun literal_34 () Bool )
[<-recv] success
[send->] (declare-fun literal_35 () Bool )
[<-recv] success
[send->] (declare-fun literal_36 () Bool )
[<-recv] success
[send->] (declare-fun literal_37 () Bool )
[<-recv] success
[send->] (declare-fun literal_38 () Bool )
[<-recv] success
[send->] (declare-fun literal_39 () Bool )
[<-recv] success
[send->] (declare-fun literal_40 () Bool )
[<-recv] success
[send->] (declare-fun literal_41 () Bool )
[<-recv] success
[send->] (declare-fun literal_42 () Bool )
[<-recv] success
[send->] (declare-fun literal_43 () Bool )
[<-recv] success
[send->] (declare-fun literal_44 () Bool )
[<-recv] success
[send->] (declare-fun literal_45 () Bool )
[<-recv] success
[send->] (declare-fun literal_46 () Bool )
[<-recv] success
[send->] (declare-fun literal_47 () Bool )
[<-recv] success
[send->] (declare-fun literal_48 () Bool )
[<-recv] success
[send->] (declare-fun literal_49 () Bool )
[<-recv] success
[send->] (declare-fun literal_50 () Bool )
[<-recv] success
[send->] (declare-fun literal_51 () Bool )
[<-recv] success
[send->] (declare-fun literal_52 () Bool )
[<-recv] success
[send->] (declare-fun literal_53 () Bool )
[<-recv] success
[send->] (declare-fun literal_54 () Bool )
[<-recv] success
[send->] (declare-fun literal_55 () Bool )
[<-recv] success
[send->] (declare-fun literal_56 () Bool )
[<-recv] success
[send->] (declare-fun literal_57 () Bool )
[<-recv] success
[send->] (declare-fun literal_58 () Bool )
[<-recv] success
[send->] (declare-fun literal_59 () Bool )
[<-recv] success
[send->] (declare-fun literal_60 () Bool )
[<-recv] success
[send->] (declare-fun literal_61 () Bool )
[<-recv] success
[send->] (declare-fun literal_62 () Bool )
[<-recv] success
[send->] (declare-fun literal_63 () Bool )
[<-recv] success
[send->] (declare-fun literal_64 () Bool )
[<-recv] success
[send->] (declare-fun literal_65 () Bool )
[<-recv] success
[send->] (declare-fun literal_66 () Bool )
[<-recv] success
[send->] (declare-fun literal_67 () Bool )
[<-recv] success
[send->] (declare-fun literal_68 () Bool )
[<-recv] success
[send->] (declare-fun literal_69 () Bool )
[<-recv] success
[send->] (declare-fun literal_70 () Bool )
[<-recv] success
[send->] (declare-fun literal_71 () Bool )
[<-recv] success
[send->] (declare-fun literal_72 () Bool )
[<-recv] success
[send->] (declare-fun literal_73 () Bool )
[<-recv] success
[send->] (declare-fun literal_74 () Bool )
[<-recv] success
[send->] (declare-fun literal_75 () Bool )
[<-recv] success
[send->] (declare-fun literal_76 () Bool )
[<-recv] success
[send->] (assert (and (and (and (and literal_2 literal_3 (=> literal_27 literal_19 ) (=> (not literal_27 ) (and literal_16 literal_9 ) ) (and literal_36 literal_10 ) (and literal_43 literal_25 ) (=> literal_30 literal_15 ) (=> (not literal_30 ) (and literal_12 literal_20 ) ) (and literal_31 literal_21 ) (and literal_51 literal_28 ) literal_0 (and literal_7 literal_49 ) literal_6 ) (not literal_58 ) ) (and literal_1 literal_4 literal_5 literal_8 literal_11 literal_13 literal_14 literal_17 literal_18 literal_22 literal_23 literal_24 literal_26 literal_29 (not literal_32 ) (not literal_33 ) (not literal_34 ) literal_35 (not literal_37 ) (not literal_38 ) (not literal_39 ) literal_40 (not literal_41 ) literal_42 (not literal_44 ) (not literal_45 ) (not literal_46 ) literal_47 (not literal_48 ) literal_50 (not literal_52 ) (not literal_53 ) (not literal_54 ) literal_55 (not literal_56 ) literal_57 (not literal_58 ) literal_59 literal_60 literal_61 literal_62 literal_63 literal_64 literal_65 literal_66 literal_67 literal_68 literal_69 literal_70 literal_71 literal_72 literal_73 literal_74 literal_75 literal_76 ) ) (and (=> (and literal_0 literal_24 ) literal_1 ) (=> (and literal_1 literal_57 ) literal_1 ) (=> (and literal_2 literal_5 ) literal_4 ) (=> (and literal_3 literal_23 ) literal_4 ) (=> (and literal_4 literal_57 ) literal_4 ) (=> (and literal_5 literal_57 ) literal_5 ) (=> (and literal_6 literal_1 ) literal_8 ) (=> (and literal_7 literal_55 ) literal_8 ) (=> (and literal_8 literal_57 ) literal_8 ) (=> (and literal_9 literal_18 ) literal_11 ) (=> (and literal_10 literal_40 ) literal_11 ) (=> (and literal_11 literal_57 ) literal_11 ) (=> (and literal_12 literal_22 ) literal_14 ) (=> (and literal_13 literal_23 ) literal_14 ) (=> (and literal_14 literal_57 ) literal_14 ) (=> (and literal_14 literal_58 ) literal_15 ) (=> (and literal_15 literal_66 ) literal_12 ) (=> (and literal_15 literal_67 ) literal_13 ) (=> (and literal_15 literal_75 ) literal_14 ) (=> (and literal_15 literal_76 ) literal_15 ) (=> (and literal_16 literal_11 ) literal_18 ) (=> (and literal_17 literal_23 ) literal_18 ) (=> (and literal_18 literal_57 ) literal_18 ) (=> (and literal_18 literal_58 ) literal_19 ) (=> (and literal_19 literal_63 ) literal_16 ) (=> (and literal_19 literal_67 ) literal_17 ) (=> (and literal_19 literal_75 ) literal_18 ) (=> (and literal_19 literal_76 ) literal_19 ) (=> (and literal_20 literal_14 ) literal_22 ) (=> (and literal_21 literal_35 ) literal_22 ) (=> (and literal_22 literal_57 ) literal_22 ) (=> (and literal_23 literal_57 ) literal_23 ) (=> (and literal_24 literal_57 ) literal_24 ) (=> (and literal_25 literal_47 ) literal_26 ) (=> (and literal_25 literal_48 ) literal_27 ) (=> (and literal_26 literal_57 ) literal_26 ) (=> (and literal_26 literal_58 ) literal_27 ) (=> (and literal_27 literal_73 ) literal_25 ) (=> (and literal_27 literal_75 ) literal_26 ) (=> (and literal_27 literal_76 ) literal_27 ) (=> (and literal_28 literal_55 ) literal_29 ) (=> (and literal_28 literal_56 ) literal_30 ) (=> (and literal_29 literal_57 ) literal_29 ) (=> (and literal_29 literal_58 ) literal_30 ) (=> (and literal_30 literal_74 ) literal_28 ) (=> (and literal_30 literal_75 ) literal_29 ) (=> (and literal_30 literal_76 ) literal_30 ) (=> (and literal_31 literal_22 ) literal_35 ) (=> (and literal_32 literal_38 ) literal_33 ) (=> (and literal_32 literal_39 ) literal_34 ) (=> (and literal_32 literal_40 ) literal_35 ) (=> (and literal_33 literal_45 ) literal_32 ) (=> (and literal_33 literal_46 ) literal_34 ) (=> (and literal_33 literal_47 ) literal_35 ) (=> (and literal_34 literal_53 ) literal_32 ) (=> (and literal_34 literal_54 ) literal_33 ) (=> (and literal_34 literal_55 ) literal_35 ) (=> (and literal_35 literal_57 ) literal_35 ) (=> (and literal_36 literal_11 ) literal_40 ) (=> (and literal_37 literal_33 ) literal_38 ) (=> (and literal_37 literal_34 ) literal_39 ) (=> (and literal_37 literal_35 ) literal_40 ) (=> (and literal_38 literal_44 ) literal_37 ) (=> (and literal_38 literal_46 ) literal_39 ) (=> (and literal_38 literal_47 ) literal_40 ) (=> (and literal_38 literal_48 ) literal_41 ) (=> (and literal_39 literal_52 ) literal_37 ) (=> (and literal_39 literal_54 ) literal_38 ) (=> (and literal_39 literal_55 ) literal_40 ) (=> (and literal_39 literal_56 ) literal_41 ) (=> (and literal_40 literal_57 ) literal_40 ) (=> (and literal_40 literal_58 ) literal_41 ) (=> (and literal_41 literal_63 ) literal_36 ) (=> (and literal_41 literal_71 ) literal_37 ) (=> (and literal_41 literal_73 ) literal_38 ) (=> (and literal_41 literal_74 ) literal_39 ) (=> (and literal_41 literal_75 ) literal_40 ) (=> (and literal_41 literal_76 ) literal_41 ) (=> (and literal_42 literal_24 ) literal_47 ) (=> (and literal_43 literal_26 ) literal_47 ) (=> (and literal_43 literal_27 ) literal_48 ) (=> (and literal_44 literal_32 ) literal_45 ) (=> (and literal_44 literal_34 ) literal_46 ) (=> (and literal_44 literal_35 ) literal_47 ) (=> (and literal_45 literal_37 ) literal_44 ) (=> (and literal_45 literal_39 ) literal_46 ) (=> (and literal_45 literal_40 ) literal_47 ) (=> (and literal_45 literal_41 ) literal_48 ) (=> (and literal_46 literal_50 ) literal_42 ) (=> (and literal_46 literal_52 ) literal_44 ) (=> (and literal_46 literal_53 ) literal_45 ) (=> (and literal_46 literal_55 ) literal_47 ) (=> (and literal_46 literal_56 ) literal_48 ) (=> (and literal_47 literal_57 ) literal_47 ) (=> (and literal_47 literal_58 ) literal_48 ) (=> (and literal_48 literal_68 ) literal_42 ) (=> (and literal_48 literal_69 ) literal_43 ) (=> (and literal_48 literal_71 ) literal_44 ) (=> (and literal_48 literal_72 ) literal_45 ) (=> (and literal_48 literal_74 ) literal_46 ) (=> (and literal_48 literal_75 ) literal_47 ) (=> (and literal_48 literal_76 ) literal_48 ) (=> (and literal_49 literal_8 ) literal_55 ) (=> (and literal_50 literal_24 ) literal_55 ) (=> (and literal_51 literal_29 ) literal_55 ) (=> (and literal_51 literal_30 ) literal_56 ) (=> (and literal_52 literal_32 ) literal_53 ) (=> (and literal_52 literal_33 ) literal_54 ) (=> (and literal_52 literal_35 ) literal_55 ) (=> (and literal_53 literal_37 ) literal_52 ) (=> (and literal_53 literal_38 ) literal_54 ) (=> (and literal_53 literal_40 ) literal_55 ) (=> (and literal_53 literal_41 ) literal_56 ) (=> (and literal_54 literal_42 ) literal_50 ) (=> (and literal_54 literal_44 ) literal_52 ) (=> (and literal_54 literal_45 ) literal_53 ) (=> (and literal_54 literal_47 ) literal_55 ) (=> (and literal_54 literal_48 ) literal_56 ) (=> (and literal_55 literal_57 ) literal_55 ) (=> (and literal_55 literal_58 ) literal_56 ) (=> (and literal_56 literal_62 ) literal_49 ) (=> (and literal_56 literal_68 ) literal_50 ) (=> (and literal_56 literal_70 ) literal_51 ) (=> (and literal_56 literal_71 ) literal_52 ) (=> (and literal_56 literal_72 ) literal_53 ) (=> (and literal_56 literal_73 ) literal_54 ) (=> (and literal_56 literal_75 ) literal_55 ) (=> (and literal_56 literal_76 ) literal_56 ) (=> (and literal_57 literal_57 ) literal_57 ) (=> (and literal_57 literal_58 ) literal_58 ) (=> (and literal_58 literal_75 ) literal_57 ) (=> (and literal_58 literal_76 ) literal_58 ) (=> (and literal_59 literal_0 ) literal_68 ) (=> (and literal_59 literal_1 ) literal_75 ) (=> (and literal_60 literal_2 ) literal_61 ) (=> (and literal_60 literal_3 ) literal_67 ) (=> (and literal_60 literal_4 ) literal_75 ) (=> (and literal_61 literal_5 ) literal_75 ) (=> (and literal_62 literal_6 ) literal_59 ) (=> (and literal_62 literal_7 ) literal_74 ) (=> (and literal_62 literal_8 ) literal_75 ) (=> (and literal_63 literal_9 ) literal_65 ) (=> (and literal_63 literal_10 ) literal_72 ) (=> (and literal_63 literal_11 ) literal_75 ) (=> (and literal_64 literal_12 ) literal_66 ) (=> (and literal_64 literal_13 ) literal_67 ) (=> (and literal_64 literal_14 ) literal_75 ) (=> (and literal_64 literal_15 ) literal_76 ) (=> (and literal_65 literal_16 ) literal_63 ) (=> (and literal_65 literal_17 ) literal_67 ) (=> (and literal_65 literal_18 ) literal_75 ) (=> (and literal_65 literal_19 ) literal_76 ) (=> (and literal_66 literal_20 ) literal_64 ) (=> (and literal_66 literal_21 ) literal_71 ) (=> (and literal_66 literal_22 ) literal_75 ) (=> (and literal_67 literal_23 ) literal_75 ) (=> (and literal_68 literal_24 ) literal_75 ) (=> (and literal_69 literal_25 ) literal_73 ) (=> (and literal_69 literal_26 ) literal_75 ) (=> (and literal_69 literal_27 ) literal_76 ) (=> (and literal_70 literal_28 ) literal_74 ) (=> (and literal_70 literal_29 ) literal_75 ) (=> (and literal_70 literal_30 ) literal_76 ) (=> (and literal_71 literal_31 ) literal_66 ) (=> (and literal_71 literal_32 ) literal_72 ) (=> (and literal_71 literal_33 ) literal_73 ) (=> (and literal_71 literal_34 ) literal_74 ) (=> (and literal_71 literal_35 ) literal_75 ) (=> (and literal_72 literal_36 ) literal_63 ) (=> (and literal_72 literal_37 ) literal_71 ) (=> (and literal_72 literal_38 ) literal_73 ) (=> (and literal_72 literal_39 ) literal_74 ) (=> (and literal_72 literal_40 ) literal_75 ) (=> (and literal_72 literal_41 ) literal_76 ) (=> (and literal_73 literal_42 ) literal_68 ) (=> (and literal_73 literal_43 ) literal_69 ) (=> (and literal_73 literal_44 ) literal_71 ) (=> (and literal_73 literal_45 ) literal_72 ) (=> (and literal_73 literal_46 ) literal_74 ) (=> (and literal_73 literal_47 ) literal_75 ) (=> (and literal_73 literal_48 ) literal_76 ) (=> (and literal_74 literal_49 ) literal_62 ) (=> (and literal_74 literal_50 ) literal_68 ) (=> (and literal_74 literal_51 ) literal_70 ) (=> (and literal_74 literal_52 ) literal_71 ) (=> (and literal_74 literal_53 ) literal_72 ) (=> (and literal_74 literal_54 ) literal_73 ) (=> (and literal_74 literal_55 ) literal_75 ) (=> (and literal_74 literal_56 ) literal_76 ) (=> (and literal_75 literal_57 ) literal_75 ) (=> (and literal_75 literal_58 ) literal_76 ) (=> (and literal_76 literal_59 ) literal_59 ) (=> (and literal_76 literal_60 ) literal_60 ) (=> (and literal_76 literal_61 ) literal_61 ) (=> (and literal_76 literal_62 ) literal_62 ) (=> (and literal_76 literal_63 ) literal_63 ) (=> (and literal_76 literal_64 ) literal_64 ) (=> (and literal_76 literal_65 ) literal_65 ) (=> (and literal_76 literal_66 ) literal_66 ) (=> (and literal_76 literal_67 ) literal_67 ) (=> (and literal_76 literal_68 ) literal_68 ) (=> (and literal_76 literal_69 ) literal_69 ) (=> (and literal_76 literal_70 ) literal_70 ) (=> (and literal_76 literal_71 ) literal_71 ) (=> (and literal_76 literal_72 ) literal_72 ) (=> (and literal_76 literal_73 ) literal_73 ) (=> (and literal_76 literal_74 ) literal_74 ) (=> (and literal_76 literal_75 ) literal_75 ) (=> (and literal_76 literal_76 ) literal_76 ) ) ) )
[<-recv] success
Done asserting formula, 23 base literals, 77 literals total
Partitioned into 33 subproblems: [[Literal {unLiteral = (Bottom,Intersect (Var "SetVar_11") (FunApp "Baz" []))},Literal {unLiteral = (Bottom,Intersect (Var "SetVar_11") (FunApp "Bar" []))},Literal {unLiteral = (Bottom,Var "SetVar_11")},Literal {unLiteral = (FunApp "Baz" [],Intersect (Var "SetVar_11") (FunApp "Baz" []))},Literal {unLiteral = (FunApp "Bar" [],Intersect (Var "SetVar_11") (FunApp "Bar" []))},Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Baz" []),Bottom)},Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Baz" []),Top)},Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Baz" []),FunApp "Baz" [])},Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Bar" []),Bottom)},Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Bar" []),Top)},Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Bar" []),FunApp "Bar" [])},Literal {unLiteral = (Var "SetVar_15",Var "SetVar_11")},Literal {unLiteral = (Bottom,Var "SetVar_15")},Literal {unLiteral = (FunApp "Baz" [],Var "SetVar_15")},Literal {unLiteral = (Var "SetVar_15",Top)},Literal {unLiteral = (Var "SetVar_15",FunApp "Baz" [])},Literal {unLiteral = (Var "SetVar_11",Top)},Literal {unLiteral = (Var "SetVar_11",Union (FunApp "Baz" []) (FunApp "Bar" []))}],[Literal {unLiteral = (Bottom,Var "SetVar_12")},Literal {unLiteral = (Var "SetVar_12",Top)},Literal {unLiteral = (Var "SetVar_12",Union (Var "SetVar_82") (Var "SetVar_83"))},Literal {unLiteral = (Bottom,Union (Var "SetVar_82") (Var "SetVar_83"))},Literal {unLiteral = (Bottom,Var "SetVar_82")},Literal {unLiteral = (Union (Var "SetVar_82") (Var "SetVar_83"),Top)},Literal {unLiteral = (Var "SetVar_9",Var "SetVar_82")},Literal {unLiteral = (Bottom,Var "SetVar_9")},Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],Var "SetVar_9")},Literal {unLiteral = (Var "SetVar_9",Top)},Literal {unLiteral = (Var "SetVar_9",FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Literal {unLiteral = (Var "SetVar_82",Var "SetVar_9")},Literal {unLiteral = (Var "SetVar_83",Union (Var "SetVar_82") (Var "SetVar_83"))},Literal {unLiteral = (Var "SetVar_82",Bottom)},Literal {unLiteral = (Var "SetVar_82",Top)},Literal {unLiteral = (Var "SetVar_82",Union (Var "SetVar_82") (Var "SetVar_83"))},Literal {unLiteral = (Bottom,Var "SetVar_83")},Literal {unLiteral = (Var "SetVar_83",Bottom)},Literal {unLiteral = (Var "SetVar_83",Top)},Literal {unLiteral = (Var "SetVar_83",Var "SetVar_7")},Literal {unLiteral = (Bottom,Var "SetVar_7")},Literal {unLiteral = (FunApp "--ZERO" [],Var "SetVar_7")},Literal {unLiteral = (Var "SetVar_7",Top)},Literal {unLiteral = (Var "SetVar_7",FunApp "--ZERO" [])},Literal {unLiteral = (Var "SetVar_7",Var "SetVar_83")},Literal {unLiteral = (Var "SetVar_12",Var "SetVar_14")},Literal {unLiteral = (Bottom,Var "SetVar_14")},Literal {unLiteral = (Var "SetVar_14",Top)}],[Literal {unLiteral = (Union (FunApp "Baz" []) (FunApp "Bar" []),Top)}],[Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "--ZERO" [])}],[Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "Bar" [])}],[Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "Baz" [])}],[Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],Top)}],[Literal {unLiteral = (FunApp "--ZERO" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])}],[Literal {unLiteral = (FunApp "--ZERO" [],FunApp "Bar" [])}],[Literal {unLiteral = (FunApp "--ZERO" [],FunApp "Baz" [])}],[Literal {unLiteral = (FunApp "--ZERO" [],Top)}],[Literal {unLiteral = (FunApp "--ZERO" [],Bottom)}],[Literal {unLiteral = (FunApp "Bar" [],Union (FunApp "Baz" []) (FunApp "Bar" []))}],[Literal {unLiteral = (FunApp "Bar" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])}],[Literal {unLiteral = (FunApp "Bar" [],FunApp "--ZERO" [])}],[Literal {unLiteral = (FunApp "Bar" [],FunApp "Baz" [])}],[Literal {unLiteral = (FunApp "Bar" [],Top)}],[Literal {unLiteral = (FunApp "Bar" [],Bottom)}],[Literal {unLiteral = (FunApp "Baz" [],Union (FunApp "Baz" []) (FunApp "Bar" []))}],[Literal {unLiteral = (FunApp "Baz" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])}],[Literal {unLiteral = (FunApp "Baz" [],FunApp "--ZERO" [])}],[Literal {unLiteral = (FunApp "Baz" [],FunApp "Bar" [])}],[Literal {unLiteral = (FunApp "Baz" [],Top)}],[Literal {unLiteral = (FunApp "Baz" [],Bottom)}],[Literal {unLiteral = (Top,Top)}],[Literal {unLiteral = (Top,Bottom)}],[Literal {unLiteral = (Bottom,Union (FunApp "Baz" []) (FunApp "Bar" []))}],[Literal {unLiteral = (Bottom,FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])}],[Literal {unLiteral = (Bottom,FunApp "--ZERO" [])}],[Literal {unLiteral = (Bottom,FunApp "Bar" [])}],[Literal {unLiteral = (Bottom,FunApp "Baz" [])}],[Literal {unLiteral = (Bottom,Top)}],[Literal {unLiteral = (Bottom,Bottom)}]]
Done asserting subset properties
Done asserting transitivity
Lit Vars: [(Literal {unLiteral = (Var "SetVar_11",Union (FunApp "Baz" []) (FunApp "Bar" []))},Atom "literal_0"),(Literal {unLiteral = (Var "SetVar_11",Top)},Atom "literal_1"),(Literal {unLiteral = (Var "SetVar_12",Var "SetVar_14")},Atom "literal_2"),(Literal {unLiteral = (Var "SetVar_12",Union (Var "SetVar_82") (Var "SetVar_83"))},Atom "literal_3"),(Literal {unLiteral = (Var "SetVar_12",Top)},Atom "literal_4"),(Literal {unLiteral = (Var "SetVar_14",Top)},Atom "literal_5"),(Literal {unLiteral = (Var "SetVar_15",Var "SetVar_11")},Atom "literal_6"),(Literal {unLiteral = (Var "SetVar_15",FunApp "Baz" [])},Atom "literal_7"),(Literal {unLiteral = (Var "SetVar_15",Top)},Atom "literal_8"),(Literal {unLiteral = (Var "SetVar_7",Var "SetVar_83")},Atom "literal_9"),(Literal {unLiteral = (Var "SetVar_7",FunApp "--ZERO" [])},Atom "literal_10"),(Literal {unLiteral = (Var "SetVar_7",Top)},Atom "literal_11"),(Literal {unLiteral = (Var "SetVar_82",Var "SetVar_9")},Atom "literal_12"),(Literal {unLiteral = (Var "SetVar_82",Union (Var "SetVar_82") (Var "SetVar_83"))},Atom "literal_13"),(Literal {unLiteral = (Var "SetVar_82",Top)},Atom "literal_14"),(Literal {unLiteral = (Var "SetVar_82",Bottom)},Atom "literal_15"),(Literal {unLiteral = (Var "SetVar_83",Var "SetVar_7")},Atom "literal_16"),(Literal {unLiteral = (Var "SetVar_83",Union (Var "SetVar_82") (Var "SetVar_83"))},Atom "literal_17"),(Literal {unLiteral = (Var "SetVar_83",Top)},Atom "literal_18"),(Literal {unLiteral = (Var "SetVar_83",Bottom)},Atom "literal_19"),(Literal {unLiteral = (Var "SetVar_9",Var "SetVar_82")},Atom "literal_20"),(Literal {unLiteral = (Var "SetVar_9",FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_21"),(Literal {unLiteral = (Var "SetVar_9",Top)},Atom "literal_22"),(Literal {unLiteral = (Union (Var "SetVar_82") (Var "SetVar_83"),Top)},Atom "literal_23"),(Literal {unLiteral = (Union (FunApp "Baz" []) (FunApp "Bar" []),Top)},Atom "literal_24"),(Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Bar" []),FunApp "Bar" [])},Atom "literal_25"),(Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Bar" []),Top)},Atom "literal_26"),(Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Bar" []),Bottom)},Atom "literal_27"),(Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Baz" []),FunApp "Baz" [])},Atom "literal_28"),(Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Baz" []),Top)},Atom "literal_29"),(Literal {unLiteral = (Intersect (Var "SetVar_11") (FunApp "Baz" []),Bottom)},Atom "literal_30"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],Var "SetVar_9")},Atom "literal_31"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "--ZERO" [])},Atom "literal_32"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "Bar" [])},Atom "literal_33"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],FunApp "Baz" [])},Atom "literal_34"),(Literal {unLiteral = (FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],Top)},Atom "literal_35"),(Literal {unLiteral = (FunApp "--ZERO" [],Var "SetVar_7")},Atom "literal_36"),(Literal {unLiteral = (FunApp "--ZERO" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_37"),(Literal {unLiteral = (FunApp "--ZERO" [],FunApp "Bar" [])},Atom "literal_38"),(Literal {unLiteral = (FunApp "--ZERO" [],FunApp "Baz" [])},Atom "literal_39"),(Literal {unLiteral = (FunApp "--ZERO" [],Top)},Atom "literal_40"),(Literal {unLiteral = (FunApp "--ZERO" [],Bottom)},Atom "literal_41"),(Literal {unLiteral = (FunApp "Bar" [],Union (FunApp "Baz" []) (FunApp "Bar" []))},Atom "literal_42"),(Literal {unLiteral = (FunApp "Bar" [],Intersect (Var "SetVar_11") (FunApp "Bar" []))},Atom "literal_43"),(Literal {unLiteral = (FunApp "Bar" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_44"),(Literal {unLiteral = (FunApp "Bar" [],FunApp "--ZERO" [])},Atom "literal_45"),(Literal {unLiteral = (FunApp "Bar" [],FunApp "Baz" [])},Atom "literal_46"),(Literal {unLiteral = (FunApp "Bar" [],Top)},Atom "literal_47"),(Literal {unLiteral = (FunApp "Bar" [],Bottom)},Atom "literal_48"),(Literal {unLiteral = (FunApp "Baz" [],Var "SetVar_15")},Atom "literal_49"),(Literal {unLiteral = (FunApp "Baz" [],Union (FunApp "Baz" []) (FunApp "Bar" []))},Atom "literal_50"),(Literal {unLiteral = (FunApp "Baz" [],Intersect (Var "SetVar_11") (FunApp "Baz" []))},Atom "literal_51"),(Literal {unLiteral = (FunApp "Baz" [],FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_52"),(Literal {unLiteral = (FunApp "Baz" [],FunApp "--ZERO" [])},Atom "literal_53"),(Literal {unLiteral = (FunApp "Baz" [],FunApp "Bar" [])},Atom "literal_54"),(Literal {unLiteral = (FunApp "Baz" [],Top)},Atom "literal_55"),(Literal {unLiteral = (FunApp "Baz" [],Bottom)},Atom "literal_56"),(Literal {unLiteral = (Top,Top)},Atom "literal_57"),(Literal {unLiteral = (Top,Bottom)},Atom "literal_58"),(Literal {unLiteral = (Bottom,Var "SetVar_11")},Atom "literal_59"),(Literal {unLiteral = (Bottom,Var "SetVar_12")},Atom "literal_60"),(Literal {unLiteral = (Bottom,Var "SetVar_14")},Atom "literal_61"),(Literal {unLiteral = (Bottom,Var "SetVar_15")},Atom "literal_62"),(Literal {unLiteral = (Bottom,Var "SetVar_7")},Atom "literal_63"),(Literal {unLiteral = (Bottom,Var "SetVar_82")},Atom "literal_64"),(Literal {unLiteral = (Bottom,Var "SetVar_83")},Atom "literal_65"),(Literal {unLiteral = (Bottom,Var "SetVar_9")},Atom "literal_66"),(Literal {unLiteral = (Bottom,Union (Var "SetVar_82") (Var "SetVar_83"))},Atom "literal_67"),(Literal {unLiteral = (Bottom,Union (FunApp "Baz" []) (FunApp "Bar" []))},Atom "literal_68"),(Literal {unLiteral = (Bottom,Intersect (Var "SetVar_11") (FunApp "Bar" []))},Atom "literal_69"),(Literal {unLiteral = (Bottom,Intersect (Var "SetVar_11") (FunApp "Baz" []))},Atom "literal_70"),(Literal {unLiteral = (Bottom,FunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]])},Atom "literal_71"),(Literal {unLiteral = (Bottom,FunApp "--ZERO" [])},Atom "literal_72"),(Literal {unLiteral = (Bottom,FunApp "Bar" [])},Atom "literal_73"),(Literal {unLiteral = (Bottom,FunApp "Baz" [])},Atom "literal_74"),(Literal {unLiteral = (Bottom,Top)},Atom "literal_75"),(Literal {unLiteral = (Bottom,Bottom)},Atom "literal_76")]
Pred numbers: fromList [(PVar "SetVar_11",0),(PVar "SetVar_12",3),(PVar "SetVar_14",4),(PVar "SetVar_15",7),(PVar "SetVar_7",8),(PVar "SetVar_82",5),(PVar "SetVar_83",6),(PVar "SetVar_9",10),(PFunApp "--NEGATIVE" [FunApp "--SUCC" [FunApp "--ZERO" []]],12),(PFunApp "--SUCC" [FunApp "--ZERO" []],11),(PFunApp "--ZERO" [],9),(PFunApp "Bar" [],2),(PFunApp "Baz" [],1)]
In theory solver, numBits: 13
Declaring domain
[send->] (declare-fun domainToBeSolved (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (define-fun domain ((z_boolDomain-0 Bool ) (z_boolDomain-1 Bool ) (z_boolDomain-2 Bool ) (z_boolDomain-3 Bool ) (z_boolDomain-4 Bool ) (z_boolDomain-5 Bool ) (z_boolDomain-6 Bool ) (z_boolDomain-7 Bool ) (z_boolDomain-8 Bool ) (z_boolDomain-9 Bool ) (z_boolDomain-10 Bool ) (z_boolDomain-11 Bool ) (z_boolDomain-12 Bool ) ) Bool (and (and (=> literal_0 (=> z_boolDomain-0 (or z_boolDomain-1 z_boolDomain-2 ) ) ) (=> literal_1 (=> z_boolDomain-0 true ) ) (=> literal_2 (=> z_boolDomain-3 z_boolDomain-4 ) ) (=> literal_3 (=> z_boolDomain-3 (or z_boolDomain-5 z_boolDomain-6 ) ) ) (=> literal_4 (=> z_boolDomain-3 true ) ) (=> literal_5 (=> z_boolDomain-4 true ) ) (=> literal_6 (=> z_boolDomain-7 z_boolDomain-0 ) ) (=> literal_7 (=> z_boolDomain-7 z_boolDomain-1 ) ) (=> literal_8 (=> z_boolDomain-7 true ) ) (=> literal_9 (=> z_boolDomain-8 z_boolDomain-6 ) ) (=> literal_10 (=> z_boolDomain-8 z_boolDomain-9 ) ) (=> literal_11 (=> z_boolDomain-8 true ) ) (=> literal_12 (=> z_boolDomain-5 z_boolDomain-10 ) ) (=> literal_13 (=> z_boolDomain-5 (or z_boolDomain-5 z_boolDomain-6 ) ) ) (=> literal_14 (=> z_boolDomain-5 true ) ) (=> literal_15 (=> z_boolDomain-5 false ) ) (=> literal_16 (=> z_boolDomain-6 z_boolDomain-8 ) ) (=> literal_17 (=> z_boolDomain-6 (or z_boolDomain-5 z_boolDomain-6 ) ) ) (=> literal_18 (=> z_boolDomain-6 true ) ) (=> literal_19 (=> z_boolDomain-6 false ) ) (=> literal_20 (=> z_boolDomain-10 z_boolDomain-5 ) ) (=> literal_21 (=> z_boolDomain-10 z_boolDomain-12 ) ) (=> literal_22 (=> z_boolDomain-10 true ) ) (=> literal_23 (=> (or z_boolDomain-5 z_boolDomain-6 ) true ) ) (=> literal_24 (=> (or z_boolDomain-1 z_boolDomain-2 ) true ) ) (=> literal_25 (=> (and z_boolDomain-0 z_boolDomain-2 ) z_boolDomain-2 ) ) (=> literal_26 (=> (and z_boolDomain-0 z_boolDomain-2 ) true ) ) (=> literal_27 (=> (and z_boolDomain-0 z_boolDomain-2 ) false ) ) (=> literal_28 (=> (and z_boolDomain-0 z_boolDomain-1 ) z_boolDomain-1 ) ) (=> literal_29 (=> (and z_boolDomain-0 z_boolDomain-1 ) true ) ) (=> literal_30 (=> (and z_boolDomain-0 z_boolDomain-1 ) false ) ) (=> literal_31 (=> z_boolDomain-12 z_boolDomain-10 ) ) (=> literal_32 (=> z_boolDomain-12 z_boolDomain-9 ) ) (=> literal_33 (=> z_boolDomain-12 z_boolDomain-2 ) ) (=> literal_34 (=> z_boolDomain-12 z_boolDomain-1 ) ) (=> literal_35 (=> z_boolDomain-12 true ) ) (=> literal_36 (=> z_boolDomain-9 z_boolDomain-8 ) ) (=> literal_37 (=> z_boolDomain-9 z_boolDomain-12 ) ) (=> literal_38 (=> z_boolDomain-9 z_boolDomain-2 ) ) (=> literal_39 (=> z_boolDomain-9 z_boolDomain-1 ) ) (=> literal_40 (=> z_boolDomain-9 true ) ) (=> literal_41 (=> z_boolDomain-9 false ) ) (=> literal_42 (=> z_boolDomain-2 (or z_boolDomain-1 z_boolDomain-2 ) ) ) (=> literal_43 (=> z_boolDomain-2 (and z_boolDomain-0 z_boolDomain-2 ) ) ) (=> literal_44 (=> z_boolDomain-2 z_boolDomain-12 ) ) (=> literal_45 (=> z_boolDomain-2 z_boolDomain-9 ) ) (=> literal_46 (=> z_boolDomain-2 z_boolDomain-1 ) ) (=> literal_47 (=> z_boolDomain-2 true ) ) (=> literal_48 (=> z_boolDomain-2 false ) ) (=> literal_49 (=> z_boolDomain-1 z_boolDomain-7 ) ) (=> literal_50 (=> z_boolDomain-1 (or z_boolDomain-1 z_boolDomain-2 ) ) ) (=> literal_51 (=> z_boolDomain-1 (and z_boolDomain-0 z_boolDomain-1 ) ) ) (=> literal_52 (=> z_boolDomain-1 z_boolDomain-12 ) ) (=> literal_53 (=> z_boolDomain-1 z_boolDomain-9 ) ) (=> literal_54 (=> z_boolDomain-1 z_boolDomain-2 ) ) (=> literal_55 (=> z_boolDomain-1 true ) ) (=> literal_56 (=> z_boolDomain-1 false ) ) (=> literal_57 (=> true true ) ) (=> literal_58 (=> true false ) ) (=> literal_59 (=> false z_boolDomain-0 ) ) (=> literal_60 (=> false z_boolDomain-3 ) ) (=> literal_61 (=> false z_boolDomain-4 ) ) (=> literal_62 (=> false z_boolDomain-7 ) ) (=> literal_63 (=> false z_boolDomain-8 ) ) (=> literal_64 (=> false z_boolDomain-5 ) ) (=> literal_65 (=> false z_boolDomain-6 ) ) (=> literal_66 (=> false z_boolDomain-10 ) ) (=> literal_67 (=> false (or z_boolDomain-5 z_boolDomain-6 ) ) ) (=> literal_68 (=> false (or z_boolDomain-1 z_boolDomain-2 ) ) ) (=> literal_69 (=> false (and z_boolDomain-0 z_boolDomain-2 ) ) ) (=> literal_70 (=> false (and z_boolDomain-0 z_boolDomain-1 ) ) ) (=> literal_71 (=> false z_boolDomain-12 ) ) (=> literal_72 (=> false z_boolDomain-9 ) ) (=> literal_73 (=> false z_boolDomain-2 ) ) (=> literal_74 (=> false z_boolDomain-1 ) ) (=> literal_75 (=> false true ) ) (=> literal_76 (=> false false ) ) ) (domainToBeSolved z_boolDomain-0 z_boolDomain-1 z_boolDomain-2 z_boolDomain-3 z_boolDomain-4 z_boolDomain-5 z_boolDomain-6 z_boolDomain-7 z_boolDomain-8 z_boolDomain-9 z_boolDomain-10 z_boolDomain-11 z_boolDomain-12 ) ) )
[<-recv] success
Declaring constructors
[send->] (declare-fun --NEGATIVE-0 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-3 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-4 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-5 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-6 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-7 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-8 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --NEGATIVE-10 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (define-fun --NEGATIVE-1 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --NEGATIVE-2 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --NEGATIVE-9 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --NEGATIVE-11 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --NEGATIVE-12 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool f-arg-0-11 )
[<-recv] success
[send->] (declare-fun --SUCC-0 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-3 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-4 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-5 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-6 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-7 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-8 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (declare-fun --SUCC-10 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool ) Bool )
[<-recv] success
[send->] (define-fun --SUCC-1 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --SUCC-2 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --SUCC-9 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool false )
[<-recv] success
[send->] (define-fun --SUCC-11 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool f-arg-0-9 )
[<-recv] success
[send->] (define-fun --SUCC-12 ((f-arg-0-0 Bool ) (f-arg-0-1 Bool ) (f-arg-0-2 Bool ) (f-arg-0-3 Bool ) (f-arg-0-4 Bool ) (f-arg-0-5 Bool ) (f-arg-0-6 Bool ) (f-arg-0-7 Bool ) (f-arg-0-8 Bool ) (f-arg-0-9 Bool ) (f-arg-0-10 Bool ) (f-arg-0-11 Bool ) (f-arg-0-12 Bool ) ) Bool false )
[<-recv] success
[send->] (declare-fun --ZERO-0 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-3 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-4 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-5 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-6 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-7 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-8 () Bool )
[<-recv] success
[send->] (declare-fun --ZERO-10 () Bool )
[<-recv] success
[send->] (define-fun --ZERO-1 () Bool false )
[<-recv] success
[send->] (define-fun --ZERO-2 () Bool false )
[<-recv] success
[send->] (define-fun --ZERO-9 () Bool true )
[<-recv] success
[send->] (define-fun --ZERO-11 () Bool false )
[<-recv] success
[send->] (define-fun --ZERO-12 () Bool false )
[<-recv] success
[send->] (declare-fun Bar-0 () Bool )
[<-recv] success
[send->] (declare-fun Bar-3 () Bool )
[<-recv] success
[send->] (declare-fun Bar-4 () Bool )
[<-recv] success
[send->] (declare-fun Bar-5 () Bool )
[<-recv] success
[send->] (declare-fun Bar-6 () Bool )
[<-recv] success
[send->] (declare-fun Bar-7 () Bool )
[<-recv] success
[send->] (declare-fun Bar-8 () Bool )
[<-recv] success
[send->] (declare-fun Bar-10 () Bool )
[<-recv] success
[send->] (define-fun Bar-1 () Bool false )
[<-recv] success
[send->] (define-fun Bar-2 () Bool true )
[<-recv] success
[send->] (define-fun Bar-9 () Bool false )
[<-recv] success
[send->] (define-fun Bar-11 () Bool false )
[<-recv] success
[send->] (define-fun Bar-12 () Bool false )
[<-recv] success
[send->] (declare-fun Baz-0 () Bool )
[<-recv] success
[send->] (declare-fun Baz-3 () Bool )
[<-recv] success
[send->] (declare-fun Baz-4 () Bool )
[<-recv] success
[send->] (declare-fun Baz-5 () Bool )
[<-recv] success
[send->] (declare-fun Baz-6 () Bool )
[<-recv] success
[send->] (declare-fun Baz-7 () Bool )
[<-recv] success
[send->] (declare-fun Baz-8 () Bool )
[<-recv] success
[send->] (declare-fun Baz-10 () Bool )
[<-recv] success
[send->] (define-fun Baz-1 () Bool true )
[<-recv] success
[send->] (define-fun Baz-2 () Bool false )
[<-recv] success
[send->] (define-fun Baz-9 () Bool false )
[<-recv] success
[send->] (define-fun Baz-11 () Bool false )
[<-recv] success
[send->] (define-fun Baz-12 () Bool false )
[<-recv] success
Declaring existentials
[send->] (declare-fun x_exists_76-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_76-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_76-0 x_exists_76-1 x_exists_76-2 x_exists_76-3 x_exists_76-4 x_exists_76-5 x_exists_76-6 x_exists_76-7 x_exists_76-8 x_exists_76-9 x_exists_76-10 x_exists_76-11 x_exists_76-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_75-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_75-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_75-0 x_exists_75-1 x_exists_75-2 x_exists_75-3 x_exists_75-4 x_exists_75-5 x_exists_75-6 x_exists_75-7 x_exists_75-8 x_exists_75-9 x_exists_75-10 x_exists_75-11 x_exists_75-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_74-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_74-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_74-0 x_exists_74-1 x_exists_74-2 x_exists_74-3 x_exists_74-4 x_exists_74-5 x_exists_74-6 x_exists_74-7 x_exists_74-8 x_exists_74-9 x_exists_74-10 x_exists_74-11 x_exists_74-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_73-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_73-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_73-0 x_exists_73-1 x_exists_73-2 x_exists_73-3 x_exists_73-4 x_exists_73-5 x_exists_73-6 x_exists_73-7 x_exists_73-8 x_exists_73-9 x_exists_73-10 x_exists_73-11 x_exists_73-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_72-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_72-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_72-0 x_exists_72-1 x_exists_72-2 x_exists_72-3 x_exists_72-4 x_exists_72-5 x_exists_72-6 x_exists_72-7 x_exists_72-8 x_exists_72-9 x_exists_72-10 x_exists_72-11 x_exists_72-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_71-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_71-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_71-0 x_exists_71-1 x_exists_71-2 x_exists_71-3 x_exists_71-4 x_exists_71-5 x_exists_71-6 x_exists_71-7 x_exists_71-8 x_exists_71-9 x_exists_71-10 x_exists_71-11 x_exists_71-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_70-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_70-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_70-0 x_exists_70-1 x_exists_70-2 x_exists_70-3 x_exists_70-4 x_exists_70-5 x_exists_70-6 x_exists_70-7 x_exists_70-8 x_exists_70-9 x_exists_70-10 x_exists_70-11 x_exists_70-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_69-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_69-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_69-0 x_exists_69-1 x_exists_69-2 x_exists_69-3 x_exists_69-4 x_exists_69-5 x_exists_69-6 x_exists_69-7 x_exists_69-8 x_exists_69-9 x_exists_69-10 x_exists_69-11 x_exists_69-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_68-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_68-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_68-0 x_exists_68-1 x_exists_68-2 x_exists_68-3 x_exists_68-4 x_exists_68-5 x_exists_68-6 x_exists_68-7 x_exists_68-8 x_exists_68-9 x_exists_68-10 x_exists_68-11 x_exists_68-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_67-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_67-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_67-0 x_exists_67-1 x_exists_67-2 x_exists_67-3 x_exists_67-4 x_exists_67-5 x_exists_67-6 x_exists_67-7 x_exists_67-8 x_exists_67-9 x_exists_67-10 x_exists_67-11 x_exists_67-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_66-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_66-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_66-0 x_exists_66-1 x_exists_66-2 x_exists_66-3 x_exists_66-4 x_exists_66-5 x_exists_66-6 x_exists_66-7 x_exists_66-8 x_exists_66-9 x_exists_66-10 x_exists_66-11 x_exists_66-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_65-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_65-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_65-0 x_exists_65-1 x_exists_65-2 x_exists_65-3 x_exists_65-4 x_exists_65-5 x_exists_65-6 x_exists_65-7 x_exists_65-8 x_exists_65-9 x_exists_65-10 x_exists_65-11 x_exists_65-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_64-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_64-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_64-0 x_exists_64-1 x_exists_64-2 x_exists_64-3 x_exists_64-4 x_exists_64-5 x_exists_64-6 x_exists_64-7 x_exists_64-8 x_exists_64-9 x_exists_64-10 x_exists_64-11 x_exists_64-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_63-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_63-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_63-0 x_exists_63-1 x_exists_63-2 x_exists_63-3 x_exists_63-4 x_exists_63-5 x_exists_63-6 x_exists_63-7 x_exists_63-8 x_exists_63-9 x_exists_63-10 x_exists_63-11 x_exists_63-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_62-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_62-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_62-0 x_exists_62-1 x_exists_62-2 x_exists_62-3 x_exists_62-4 x_exists_62-5 x_exists_62-6 x_exists_62-7 x_exists_62-8 x_exists_62-9 x_exists_62-10 x_exists_62-11 x_exists_62-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_61-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_61-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_61-0 x_exists_61-1 x_exists_61-2 x_exists_61-3 x_exists_61-4 x_exists_61-5 x_exists_61-6 x_exists_61-7 x_exists_61-8 x_exists_61-9 x_exists_61-10 x_exists_61-11 x_exists_61-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_60-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_60-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_60-0 x_exists_60-1 x_exists_60-2 x_exists_60-3 x_exists_60-4 x_exists_60-5 x_exists_60-6 x_exists_60-7 x_exists_60-8 x_exists_60-9 x_exists_60-10 x_exists_60-11 x_exists_60-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_59-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_59-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_59-0 x_exists_59-1 x_exists_59-2 x_exists_59-3 x_exists_59-4 x_exists_59-5 x_exists_59-6 x_exists_59-7 x_exists_59-8 x_exists_59-9 x_exists_59-10 x_exists_59-11 x_exists_59-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_58-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_58-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_58-0 x_exists_58-1 x_exists_58-2 x_exists_58-3 x_exists_58-4 x_exists_58-5 x_exists_58-6 x_exists_58-7 x_exists_58-8 x_exists_58-9 x_exists_58-10 x_exists_58-11 x_exists_58-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_57-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_57-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_57-0 x_exists_57-1 x_exists_57-2 x_exists_57-3 x_exists_57-4 x_exists_57-5 x_exists_57-6 x_exists_57-7 x_exists_57-8 x_exists_57-9 x_exists_57-10 x_exists_57-11 x_exists_57-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_56-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_56-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_56-0 x_exists_56-1 x_exists_56-2 x_exists_56-3 x_exists_56-4 x_exists_56-5 x_exists_56-6 x_exists_56-7 x_exists_56-8 x_exists_56-9 x_exists_56-10 x_exists_56-11 x_exists_56-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_55-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_55-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_55-0 x_exists_55-1 x_exists_55-2 x_exists_55-3 x_exists_55-4 x_exists_55-5 x_exists_55-6 x_exists_55-7 x_exists_55-8 x_exists_55-9 x_exists_55-10 x_exists_55-11 x_exists_55-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_54-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_54-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_54-0 x_exists_54-1 x_exists_54-2 x_exists_54-3 x_exists_54-4 x_exists_54-5 x_exists_54-6 x_exists_54-7 x_exists_54-8 x_exists_54-9 x_exists_54-10 x_exists_54-11 x_exists_54-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_53-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_53-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_53-0 x_exists_53-1 x_exists_53-2 x_exists_53-3 x_exists_53-4 x_exists_53-5 x_exists_53-6 x_exists_53-7 x_exists_53-8 x_exists_53-9 x_exists_53-10 x_exists_53-11 x_exists_53-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_52-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_52-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_52-0 x_exists_52-1 x_exists_52-2 x_exists_52-3 x_exists_52-4 x_exists_52-5 x_exists_52-6 x_exists_52-7 x_exists_52-8 x_exists_52-9 x_exists_52-10 x_exists_52-11 x_exists_52-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_51-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_51-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_51-0 x_exists_51-1 x_exists_51-2 x_exists_51-3 x_exists_51-4 x_exists_51-5 x_exists_51-6 x_exists_51-7 x_exists_51-8 x_exists_51-9 x_exists_51-10 x_exists_51-11 x_exists_51-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_50-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_50-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_50-0 x_exists_50-1 x_exists_50-2 x_exists_50-3 x_exists_50-4 x_exists_50-5 x_exists_50-6 x_exists_50-7 x_exists_50-8 x_exists_50-9 x_exists_50-10 x_exists_50-11 x_exists_50-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_49-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_49-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_49-0 x_exists_49-1 x_exists_49-2 x_exists_49-3 x_exists_49-4 x_exists_49-5 x_exists_49-6 x_exists_49-7 x_exists_49-8 x_exists_49-9 x_exists_49-10 x_exists_49-11 x_exists_49-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_48-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_48-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_48-0 x_exists_48-1 x_exists_48-2 x_exists_48-3 x_exists_48-4 x_exists_48-5 x_exists_48-6 x_exists_48-7 x_exists_48-8 x_exists_48-9 x_exists_48-10 x_exists_48-11 x_exists_48-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_47-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_47-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_47-0 x_exists_47-1 x_exists_47-2 x_exists_47-3 x_exists_47-4 x_exists_47-5 x_exists_47-6 x_exists_47-7 x_exists_47-8 x_exists_47-9 x_exists_47-10 x_exists_47-11 x_exists_47-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_46-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_46-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_46-0 x_exists_46-1 x_exists_46-2 x_exists_46-3 x_exists_46-4 x_exists_46-5 x_exists_46-6 x_exists_46-7 x_exists_46-8 x_exists_46-9 x_exists_46-10 x_exists_46-11 x_exists_46-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_45-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_45-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_45-0 x_exists_45-1 x_exists_45-2 x_exists_45-3 x_exists_45-4 x_exists_45-5 x_exists_45-6 x_exists_45-7 x_exists_45-8 x_exists_45-9 x_exists_45-10 x_exists_45-11 x_exists_45-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_44-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_44-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_44-0 x_exists_44-1 x_exists_44-2 x_exists_44-3 x_exists_44-4 x_exists_44-5 x_exists_44-6 x_exists_44-7 x_exists_44-8 x_exists_44-9 x_exists_44-10 x_exists_44-11 x_exists_44-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_43-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_43-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_43-0 x_exists_43-1 x_exists_43-2 x_exists_43-3 x_exists_43-4 x_exists_43-5 x_exists_43-6 x_exists_43-7 x_exists_43-8 x_exists_43-9 x_exists_43-10 x_exists_43-11 x_exists_43-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_42-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_42-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_42-0 x_exists_42-1 x_exists_42-2 x_exists_42-3 x_exists_42-4 x_exists_42-5 x_exists_42-6 x_exists_42-7 x_exists_42-8 x_exists_42-9 x_exists_42-10 x_exists_42-11 x_exists_42-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_41-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_41-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_41-0 x_exists_41-1 x_exists_41-2 x_exists_41-3 x_exists_41-4 x_exists_41-5 x_exists_41-6 x_exists_41-7 x_exists_41-8 x_exists_41-9 x_exists_41-10 x_exists_41-11 x_exists_41-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_40-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_40-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_40-0 x_exists_40-1 x_exists_40-2 x_exists_40-3 x_exists_40-4 x_exists_40-5 x_exists_40-6 x_exists_40-7 x_exists_40-8 x_exists_40-9 x_exists_40-10 x_exists_40-11 x_exists_40-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_39-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_39-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_39-0 x_exists_39-1 x_exists_39-2 x_exists_39-3 x_exists_39-4 x_exists_39-5 x_exists_39-6 x_exists_39-7 x_exists_39-8 x_exists_39-9 x_exists_39-10 x_exists_39-11 x_exists_39-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_38-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_38-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_38-0 x_exists_38-1 x_exists_38-2 x_exists_38-3 x_exists_38-4 x_exists_38-5 x_exists_38-6 x_exists_38-7 x_exists_38-8 x_exists_38-9 x_exists_38-10 x_exists_38-11 x_exists_38-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_37-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_37-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_37-0 x_exists_37-1 x_exists_37-2 x_exists_37-3 x_exists_37-4 x_exists_37-5 x_exists_37-6 x_exists_37-7 x_exists_37-8 x_exists_37-9 x_exists_37-10 x_exists_37-11 x_exists_37-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_36-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_36-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_36-0 x_exists_36-1 x_exists_36-2 x_exists_36-3 x_exists_36-4 x_exists_36-5 x_exists_36-6 x_exists_36-7 x_exists_36-8 x_exists_36-9 x_exists_36-10 x_exists_36-11 x_exists_36-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_35-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_35-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_35-0 x_exists_35-1 x_exists_35-2 x_exists_35-3 x_exists_35-4 x_exists_35-5 x_exists_35-6 x_exists_35-7 x_exists_35-8 x_exists_35-9 x_exists_35-10 x_exists_35-11 x_exists_35-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_34-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_34-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_34-0 x_exists_34-1 x_exists_34-2 x_exists_34-3 x_exists_34-4 x_exists_34-5 x_exists_34-6 x_exists_34-7 x_exists_34-8 x_exists_34-9 x_exists_34-10 x_exists_34-11 x_exists_34-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_33-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_33-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_33-0 x_exists_33-1 x_exists_33-2 x_exists_33-3 x_exists_33-4 x_exists_33-5 x_exists_33-6 x_exists_33-7 x_exists_33-8 x_exists_33-9 x_exists_33-10 x_exists_33-11 x_exists_33-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_32-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_32-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_32-0 x_exists_32-1 x_exists_32-2 x_exists_32-3 x_exists_32-4 x_exists_32-5 x_exists_32-6 x_exists_32-7 x_exists_32-8 x_exists_32-9 x_exists_32-10 x_exists_32-11 x_exists_32-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_31-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_31-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_31-0 x_exists_31-1 x_exists_31-2 x_exists_31-3 x_exists_31-4 x_exists_31-5 x_exists_31-6 x_exists_31-7 x_exists_31-8 x_exists_31-9 x_exists_31-10 x_exists_31-11 x_exists_31-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_30-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_30-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_30-0 x_exists_30-1 x_exists_30-2 x_exists_30-3 x_exists_30-4 x_exists_30-5 x_exists_30-6 x_exists_30-7 x_exists_30-8 x_exists_30-9 x_exists_30-10 x_exists_30-11 x_exists_30-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_29-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_29-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_29-0 x_exists_29-1 x_exists_29-2 x_exists_29-3 x_exists_29-4 x_exists_29-5 x_exists_29-6 x_exists_29-7 x_exists_29-8 x_exists_29-9 x_exists_29-10 x_exists_29-11 x_exists_29-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_28-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_28-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_28-0 x_exists_28-1 x_exists_28-2 x_exists_28-3 x_exists_28-4 x_exists_28-5 x_exists_28-6 x_exists_28-7 x_exists_28-8 x_exists_28-9 x_exists_28-10 x_exists_28-11 x_exists_28-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_27-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_27-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_27-0 x_exists_27-1 x_exists_27-2 x_exists_27-3 x_exists_27-4 x_exists_27-5 x_exists_27-6 x_exists_27-7 x_exists_27-8 x_exists_27-9 x_exists_27-10 x_exists_27-11 x_exists_27-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_26-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_26-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_26-0 x_exists_26-1 x_exists_26-2 x_exists_26-3 x_exists_26-4 x_exists_26-5 x_exists_26-6 x_exists_26-7 x_exists_26-8 x_exists_26-9 x_exists_26-10 x_exists_26-11 x_exists_26-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_25-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_25-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_25-0 x_exists_25-1 x_exists_25-2 x_exists_25-3 x_exists_25-4 x_exists_25-5 x_exists_25-6 x_exists_25-7 x_exists_25-8 x_exists_25-9 x_exists_25-10 x_exists_25-11 x_exists_25-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_24-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_24-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_24-0 x_exists_24-1 x_exists_24-2 x_exists_24-3 x_exists_24-4 x_exists_24-5 x_exists_24-6 x_exists_24-7 x_exists_24-8 x_exists_24-9 x_exists_24-10 x_exists_24-11 x_exists_24-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_23-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_23-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_23-0 x_exists_23-1 x_exists_23-2 x_exists_23-3 x_exists_23-4 x_exists_23-5 x_exists_23-6 x_exists_23-7 x_exists_23-8 x_exists_23-9 x_exists_23-10 x_exists_23-11 x_exists_23-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_22-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_22-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_22-0 x_exists_22-1 x_exists_22-2 x_exists_22-3 x_exists_22-4 x_exists_22-5 x_exists_22-6 x_exists_22-7 x_exists_22-8 x_exists_22-9 x_exists_22-10 x_exists_22-11 x_exists_22-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_21-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_21-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_21-0 x_exists_21-1 x_exists_21-2 x_exists_21-3 x_exists_21-4 x_exists_21-5 x_exists_21-6 x_exists_21-7 x_exists_21-8 x_exists_21-9 x_exists_21-10 x_exists_21-11 x_exists_21-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_20-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_20-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_20-0 x_exists_20-1 x_exists_20-2 x_exists_20-3 x_exists_20-4 x_exists_20-5 x_exists_20-6 x_exists_20-7 x_exists_20-8 x_exists_20-9 x_exists_20-10 x_exists_20-11 x_exists_20-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_19-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_19-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_19-0 x_exists_19-1 x_exists_19-2 x_exists_19-3 x_exists_19-4 x_exists_19-5 x_exists_19-6 x_exists_19-7 x_exists_19-8 x_exists_19-9 x_exists_19-10 x_exists_19-11 x_exists_19-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_18-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_18-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_18-0 x_exists_18-1 x_exists_18-2 x_exists_18-3 x_exists_18-4 x_exists_18-5 x_exists_18-6 x_exists_18-7 x_exists_18-8 x_exists_18-9 x_exists_18-10 x_exists_18-11 x_exists_18-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_17-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_17-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_17-0 x_exists_17-1 x_exists_17-2 x_exists_17-3 x_exists_17-4 x_exists_17-5 x_exists_17-6 x_exists_17-7 x_exists_17-8 x_exists_17-9 x_exists_17-10 x_exists_17-11 x_exists_17-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_16-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_16-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_16-0 x_exists_16-1 x_exists_16-2 x_exists_16-3 x_exists_16-4 x_exists_16-5 x_exists_16-6 x_exists_16-7 x_exists_16-8 x_exists_16-9 x_exists_16-10 x_exists_16-11 x_exists_16-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_15-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_15-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_15-0 x_exists_15-1 x_exists_15-2 x_exists_15-3 x_exists_15-4 x_exists_15-5 x_exists_15-6 x_exists_15-7 x_exists_15-8 x_exists_15-9 x_exists_15-10 x_exists_15-11 x_exists_15-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_14-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_14-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_14-0 x_exists_14-1 x_exists_14-2 x_exists_14-3 x_exists_14-4 x_exists_14-5 x_exists_14-6 x_exists_14-7 x_exists_14-8 x_exists_14-9 x_exists_14-10 x_exists_14-11 x_exists_14-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_13-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_13-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_13-0 x_exists_13-1 x_exists_13-2 x_exists_13-3 x_exists_13-4 x_exists_13-5 x_exists_13-6 x_exists_13-7 x_exists_13-8 x_exists_13-9 x_exists_13-10 x_exists_13-11 x_exists_13-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_12-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_12-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_12-0 x_exists_12-1 x_exists_12-2 x_exists_12-3 x_exists_12-4 x_exists_12-5 x_exists_12-6 x_exists_12-7 x_exists_12-8 x_exists_12-9 x_exists_12-10 x_exists_12-11 x_exists_12-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_11-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_11-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_11-0 x_exists_11-1 x_exists_11-2 x_exists_11-3 x_exists_11-4 x_exists_11-5 x_exists_11-6 x_exists_11-7 x_exists_11-8 x_exists_11-9 x_exists_11-10 x_exists_11-11 x_exists_11-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_10-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_10-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_10-0 x_exists_10-1 x_exists_10-2 x_exists_10-3 x_exists_10-4 x_exists_10-5 x_exists_10-6 x_exists_10-7 x_exists_10-8 x_exists_10-9 x_exists_10-10 x_exists_10-11 x_exists_10-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_9-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_9-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_9-0 x_exists_9-1 x_exists_9-2 x_exists_9-3 x_exists_9-4 x_exists_9-5 x_exists_9-6 x_exists_9-7 x_exists_9-8 x_exists_9-9 x_exists_9-10 x_exists_9-11 x_exists_9-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_8-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_8-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_8-0 x_exists_8-1 x_exists_8-2 x_exists_8-3 x_exists_8-4 x_exists_8-5 x_exists_8-6 x_exists_8-7 x_exists_8-8 x_exists_8-9 x_exists_8-10 x_exists_8-11 x_exists_8-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_7-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_7-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_7-0 x_exists_7-1 x_exists_7-2 x_exists_7-3 x_exists_7-4 x_exists_7-5 x_exists_7-6 x_exists_7-7 x_exists_7-8 x_exists_7-9 x_exists_7-10 x_exists_7-11 x_exists_7-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_6-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_6-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_6-0 x_exists_6-1 x_exists_6-2 x_exists_6-3 x_exists_6-4 x_exists_6-5 x_exists_6-6 x_exists_6-7 x_exists_6-8 x_exists_6-9 x_exists_6-10 x_exists_6-11 x_exists_6-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_5-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_5-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_5-0 x_exists_5-1 x_exists_5-2 x_exists_5-3 x_exists_5-4 x_exists_5-5 x_exists_5-6 x_exists_5-7 x_exists_5-8 x_exists_5-9 x_exists_5-10 x_exists_5-11 x_exists_5-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_4-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_4-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_4-0 x_exists_4-1 x_exists_4-2 x_exists_4-3 x_exists_4-4 x_exists_4-5 x_exists_4-6 x_exists_4-7 x_exists_4-8 x_exists_4-9 x_exists_4-10 x_exists_4-11 x_exists_4-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_3-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_3-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_3-0 x_exists_3-1 x_exists_3-2 x_exists_3-3 x_exists_3-4 x_exists_3-5 x_exists_3-6 x_exists_3-7 x_exists_3-8 x_exists_3-9 x_exists_3-10 x_exists_3-11 x_exists_3-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_2-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_2-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_2-0 x_exists_2-1 x_exists_2-2 x_exists_2-3 x_exists_2-4 x_exists_2-5 x_exists_2-6 x_exists_2-7 x_exists_2-8 x_exists_2-9 x_exists_2-10 x_exists_2-11 x_exists_2-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_1-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_1-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_1-0 x_exists_1-1 x_exists_1-2 x_exists_1-3 x_exists_1-4 x_exists_1-5 x_exists_1-6 x_exists_1-7 x_exists_1-8 x_exists_1-9 x_exists_1-10 x_exists_1-11 x_exists_1-12 ) )
[<-recv] success
[send->] (declare-fun x_exists_0-0 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-1 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-2 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-3 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-4 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-5 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-6 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-7 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-8 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-9 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-10 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-11 () Bool )
[<-recv] success
[send->] (declare-fun x_exists_0-12 () Bool )
[<-recv] success
[send->] (assert (domain x_exists_0-0 x_exists_0-1 x_exists_0-2 x_exists_0-3 x_exists_0-4 x_exists_0-5 x_exists_0-6 x_exists_0-7 x_exists_0-8 x_exists_0-9 x_exists_0-10 x_exists_0-11 x_exists_0-12 ) )
[<-recv] success
Assert existential properties
[send->] (assert (=> (not literal_0 ) (and x_exists_0-0 (not (or x_exists_0-1 x_exists_0-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_1 ) (and x_exists_1-0 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_2 ) (and x_exists_2-3 (not x_exists_2-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_3 ) (and x_exists_3-3 (not (or x_exists_3-5 x_exists_3-6 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_4 ) (and x_exists_4-3 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_5 ) (and x_exists_5-4 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_6 ) (and x_exists_6-7 (not x_exists_6-0 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_7 ) (and x_exists_7-7 (not x_exists_7-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_8 ) (and x_exists_8-7 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_9 ) (and x_exists_9-8 (not x_exists_9-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_10 ) (and x_exists_10-8 (not x_exists_10-9 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_11 ) (and x_exists_11-8 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_12 ) (and x_exists_12-5 (not x_exists_12-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_13 ) (and x_exists_13-5 (not (or x_exists_13-5 x_exists_13-6 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_14 ) (and x_exists_14-5 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_15 ) (and x_exists_15-5 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_16 ) (and x_exists_16-6 (not x_exists_16-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_17 ) (and x_exists_17-6 (not (or x_exists_17-5 x_exists_17-6 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_18 ) (and x_exists_18-6 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_19 ) (and x_exists_19-6 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_20 ) (and x_exists_20-10 (not x_exists_20-5 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_21 ) (and x_exists_21-10 (not x_exists_21-12 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_22 ) (and x_exists_22-10 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_23 ) (and (or x_exists_23-5 x_exists_23-6 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_24 ) (and (or x_exists_24-1 x_exists_24-2 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_25 ) (and (and x_exists_25-0 x_exists_25-2 ) (not x_exists_25-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_26 ) (and (and x_exists_26-0 x_exists_26-2 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_27 ) (and (and x_exists_27-0 x_exists_27-2 ) (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_28 ) (and (and x_exists_28-0 x_exists_28-1 ) (not x_exists_28-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_29 ) (and (and x_exists_29-0 x_exists_29-1 ) (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_30 ) (and (and x_exists_30-0 x_exists_30-1 ) (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_31 ) (and x_exists_31-12 (not x_exists_31-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_32 ) (and x_exists_32-12 (not x_exists_32-9 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_33 ) (and x_exists_33-12 (not x_exists_33-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_34 ) (and x_exists_34-12 (not x_exists_34-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_35 ) (and x_exists_35-12 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_36 ) (and x_exists_36-9 (not x_exists_36-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_37 ) (and x_exists_37-9 (not x_exists_37-12 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_38 ) (and x_exists_38-9 (not x_exists_38-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_39 ) (and x_exists_39-9 (not x_exists_39-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_40 ) (and x_exists_40-9 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_41 ) (and x_exists_41-9 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_42 ) (and x_exists_42-2 (not (or x_exists_42-1 x_exists_42-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_43 ) (and x_exists_43-2 (not (and x_exists_43-0 x_exists_43-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_44 ) (and x_exists_44-2 (not x_exists_44-12 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_45 ) (and x_exists_45-2 (not x_exists_45-9 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_46 ) (and x_exists_46-2 (not x_exists_46-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_47 ) (and x_exists_47-2 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_48 ) (and x_exists_48-2 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_49 ) (and x_exists_49-1 (not x_exists_49-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_50 ) (and x_exists_50-1 (not (or x_exists_50-1 x_exists_50-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_51 ) (and x_exists_51-1 (not (and x_exists_51-0 x_exists_51-1 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_52 ) (and x_exists_52-1 (not x_exists_52-12 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_53 ) (and x_exists_53-1 (not x_exists_53-9 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_54 ) (and x_exists_54-1 (not x_exists_54-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_55 ) (and x_exists_55-1 (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_56 ) (and x_exists_56-1 (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_57 ) (and true (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_58 ) (and true (not false ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_59 ) (and false (not x_exists_59-0 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_60 ) (and false (not x_exists_60-3 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_61 ) (and false (not x_exists_61-4 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_62 ) (and false (not x_exists_62-7 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_63 ) (and false (not x_exists_63-8 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_64 ) (and false (not x_exists_64-5 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_65 ) (and false (not x_exists_65-6 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_66 ) (and false (not x_exists_66-10 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_67 ) (and false (not (or x_exists_67-5 x_exists_67-6 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_68 ) (and false (not (or x_exists_68-1 x_exists_68-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_69 ) (and false (not (and x_exists_69-0 x_exists_69-2 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_70 ) (and false (not (and x_exists_70-0 x_exists_70-1 ) ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_71 ) (and false (not x_exists_71-12 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_72 ) (and false (not x_exists_72-9 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_73 ) (and false (not x_exists_73-2 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_74 ) (and false (not x_exists_74-1 ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_75 ) (and false (not true ) ) ) )
[<-recv] success
[send->] (assert (=> (not literal_76 ) (and false (not false ) ) ) )
[<-recv] success
Asserting function domain properties
[send->] (assert (forall ((y_univ_1-0 Bool ) (y_univ_1-1 Bool ) (y_univ_1-2 Bool ) (y_univ_1-3 Bool ) (y_univ_1-4 Bool ) (y_univ_1-5 Bool ) (y_univ_1-6 Bool ) (y_univ_1-7 Bool ) (y_univ_1-8 Bool ) (y_univ_1-9 Bool ) (y_univ_1-10 Bool ) (y_univ_1-11 Bool ) (y_univ_1-12 Bool ) (y_univ_2-0 Bool ) (y_univ_2-1 Bool ) (y_univ_2-2 Bool ) (y_univ_2-3 Bool ) (y_univ_2-4 Bool ) (y_univ_2-5 Bool ) (y_univ_2-6 Bool ) (y_univ_2-7 Bool ) (y_univ_2-8 Bool ) (y_univ_2-9 Bool ) (y_univ_2-10 Bool ) (y_univ_2-11 Bool ) (y_univ_2-12 Bool ) (y_univ_3-0 Bool ) (y_univ_3-1 Bool ) (y_univ_3-2 Bool ) (y_univ_3-3 Bool ) (y_univ_3-4 Bool ) (y_univ_3-5 Bool ) (y_univ_3-6 Bool ) (y_univ_3-7 Bool ) (y_univ_3-8 Bool ) (y_univ_3-9 Bool ) (y_univ_3-10 Bool ) (y_univ_3-11 Bool ) (y_univ_3-12 Bool ) ) (and (=> (and (domain y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (domain y_univ_2-0 y_univ_2-1 y_univ_2-2 y_univ_2-3 y_univ_2-4 y_univ_2-5 y_univ_2-6 y_univ_2-7 y_univ_2-8 y_univ_2-9 y_univ_2-10 y_univ_2-11 y_univ_2-12 ) (domain y_univ_3-0 y_univ_3-1 y_univ_3-2 y_univ_3-3 y_univ_3-4 y_univ_3-5 y_univ_3-6 y_univ_3-7 y_univ_3-8 y_univ_3-9 y_univ_3-10 y_univ_3-11 y_univ_3-12 ) ) (and true (and (= true Baz-1 ) (and (= (--NEGATIVE-1 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) false ) (= (--SUCC-1 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) false ) (= --ZERO-1 false ) (= Bar-1 false ) ) ) (and (= true Bar-2 ) (and (= (--NEGATIVE-2 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) false ) (= (--SUCC-2 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) false ) (= --ZERO-2 false ) (= Baz-2 false ) ) ) true true true true true true true true true (and (= true --ZERO-9 ) (and (= (--NEGATIVE-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) false ) (= (--SUCC-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) false ) (= Bar-9 false ) (= Baz-9 false ) ) ) true true (and (= y_univ_1-9 (--SUCC-11 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) ) (and (= (--NEGATIVE-11 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) false ) (= --ZERO-11 false ) (= Bar-11 false ) (= Baz-11 false ) ) ) (and (= y_univ_1-11 (--NEGATIVE-12 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) ) (and (= (--SUCC-12 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) false ) (= --ZERO-12 false ) (= Bar-12 false ) (= Baz-12 false ) ) ) true true ) ) (and (domain (--NEGATIVE-0 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-1 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-2 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-3 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-4 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-5 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-6 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-7 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-8 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-10 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-11 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--NEGATIVE-12 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) ) (domain (--SUCC-0 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-1 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-2 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-3 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-4 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-5 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-6 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-7 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-8 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-9 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-10 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-11 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) (--SUCC-12 y_univ_1-0 y_univ_1-1 y_univ_1-2 y_univ_1-3 y_univ_1-4 y_univ_1-5 y_univ_1-6 y_univ_1-7 y_univ_1-8 y_univ_1-9 y_univ_1-10 y_univ_1-11 y_univ_1-12 ) ) (domain --ZERO-0 --ZERO-1 --ZERO-2 --ZERO-3 --ZERO-4 --ZERO-5 --ZERO-6 --ZERO-7 --ZERO-8 --ZERO-9 --ZERO-10 --ZERO-11 --ZERO-12 ) (domain Bar-0 Bar-1 Bar-2 Bar-3 Bar-4 Bar-5 Bar-6 Bar-7 Bar-8 Bar-9 Bar-10 Bar-11 Bar-12 ) (domain Baz-0 Baz-1 Baz-2 Baz-3 Baz-4 Baz-5 Baz-6 Baz-7 Baz-8 Baz-9 Baz-10 Baz-11 Baz-12 ) ) ) ) )
[<-recv] success
About do check SAT
[send->] (check-sat )
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.refine-injectivity)
[stderr] (smt.pattern-inference)
[stderr] (smt.inferred-patterns :qid k!1306
[stderr]   ((--NEGATIVE-0 (:var 12)
[stderr]                  (:var 11)
[stderr]                  (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-3 (:var 12)
[stderr]                  (:var 11)
[stderr]                  (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-4 (:var 12)
[stderr]                  (:var 11)
[stderr]                  (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-5 (:var 12)
[stderr]                  (:var 11)
[stderr]                  (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-6 (:var 12)
[stderr]                  (:var 11)
[stderr]                  (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-7 (:var 12)
[stderr]                  (:var 11)
[stderr]                  (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-8 (:var 12)
[stderr]                  (:var 11)
[stderr]                  (:var 10)
[stderr]                  (:var 9)
[stderr]                  (:var 8)
[stderr]                  (:var 7)
[stderr]                  (:var 6)
[stderr]                  (:var 5)
[stderr]                  (:var 4)
[stderr]                  (:var 3)
[stderr]                  (:var 2)
[stderr]                  (:var 1)
[stderr]                  (:var 0)))
[stderr]   ((--NEGATIVE-10 (:var 12)
[stderr]                   (:var 11)
[stderr]                   (:var 10)
[stderr]                   (:var 9)
[stderr]                   (:var 8)
[stderr]                   (:var 7)
[stderr]                   (:var 6)
[stderr]                   (:var 5)
[stderr]                   (:var 4)
[stderr]                   (:var 3)
[stderr]                   (:var 2)
[stderr]                   (:var 1)
[stderr]                   (:var 0)))
[stderr]   ((--SUCC-0 (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-3 (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-4 (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-5 (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-6 (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-7 (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-8 (:var 12)
[stderr]              (:var 11)
[stderr]              (:var 10)
[stderr]              (:var 9)
[stderr]              (:var 8)
[stderr]              (:var 7)
[stderr]              (:var 6)
[stderr]              (:var 5)
[stderr]              (:var 4)
[stderr]              (:var 3)
[stderr]              (:var 2)
[stderr]              (:var 1)
[stderr]              (:var 0)))
[stderr]   ((--SUCC-10 (:var 12)
[stderr]               (:var 11)
[stderr]               (:var 10)
[stderr]               (:var 9)
[stderr]               (:var 8)
[stderr]               (:var 7)
[stderr]               (:var 6)
[stderr]               (:var 5)
[stderr]               (:var 4)
[stderr]               (:var 3)
[stderr]               (:var 2)
[stderr]               (:var 1)
[stderr]               (:var 0)))
[stderr] )
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] (smt.simplifying-clause-set :num-deleted-clauses 357)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.mbqi :failed k!1306)
[stderr] (smt.restarting :propagations 694 :decisions 433 :conflicts 2 :restart 100 :restart-outer 100 :agility 0)
[stderr] is_solved
[stderr] (smt.mbqi)
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.propagate-values)
[stderr] (smt.nnf-cnf)
[stderr] (smt.reduce-asserted)
[stderr] (smt.maximizing-bv-sharing)
[stderr] (smt.reduce-asserted)
[stderr] (smt.simplifier-done)
[stderr] (smt.searching)
[stderr] is_solved
[stderr] (smt.mbqi :failed k!1306)
[stderr] (smt.restarting :propagations 1400 :decisions 870 :conflicts 2 :restart 100 :restart-outer 100 :agility 0)
[stderr] is_solved
[stderr] (smt.mbqi)
[<-recv] sat
Found Solution
Generalized type for fooFunApp is Forall [SetVar_14,SetVar_12,SetVar_11,SetVar_82,SetVar_83,SetVar_15] (App (Canonical {_package = Name {_author = "elm", _project = "core"}, _module = Name {_name = "Basics"}}) (Name {_name = "Int"}) [] :@ SetVar_14) (CAnd_ [(CSubset_ (SetVar_ SetVar_12) (SetVar_ SetVar_14)),(CEqual_ (SetVar_ SetVar_11) (SetVar_ SetVar_11)),(CSubset_ (SetVar_ SetVar_12) (Union_ (SetVar_ SetVar_82) (SetVar_ SetVar_83))),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_83) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_83) (SetVar_ SetVar_7))),(CEqual_ (Ctor_ "--ZERO" []) (SetVar_ SetVar_7)),(CEqual_ (Ctor_ "Bar" []) (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Bar" [])))]),(CAnd_ [(CImplies_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" [])) (Bottom_)) (CSubset_ (SetVar_ SetVar_82) (Bottom_))),(CImplies_ (CNot_ (CSubset_ (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" [])) (Bottom_))) (CEqual_ (SetVar_ SetVar_82) (SetVar_ SetVar_9))),(CEqual_ (Ctor_ "--NEGATIVE" [(Ctor_ "--SUCC" [(Ctor_ "--ZERO" [])])]) (SetVar_ SetVar_9)),(CEqual_ (Ctor_ "Baz" []) (Intersect_ (SetVar_ SetVar_11) (Ctor_ "Baz" [])))]),(CSubset_ (SetVar_ SetVar_11) (Union_ (Ctor_ "Baz" []) (Ctor_ "Bar" []))),(CEqual_ (SetVar_ SetVar_15) (Ctor_ "Baz" [])),(CSubset_ (SetVar_ SetVar_15) (SetVar_ SetVar_11))])
[==================================================] - 1 / 1                                                                     Success! Compiled 1 module.
